{
  "contractName": "Commitments",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Transferral",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCommitableBills",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_billId",
          "type": "bytes32"
        }
      ],
      "name": "getBill",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "amendsBill",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "sponsor",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "sponsorAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "dateOfIntroduction",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "committees",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "latestAction",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "latestActionDate",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "legislationNumber",
              "type": "string"
            },
            {
              "internalType": "enum OracleInterface.BillOutcome",
              "name": "outcome",
              "type": "uint8"
            }
          ],
          "internalType": "struct OracleInterface.Bill",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMostRecentBill",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "amendsBill",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "sponsor",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "sponsorAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "dateOfIntroduction",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "committees",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "latestAction",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "latestActionDate",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "legislationNumber",
              "type": "string"
            },
            {
              "internalType": "enum OracleInterface.BillOutcome",
              "name": "outcome",
              "type": "uint8"
            }
          ],
          "internalType": "struct OracleInterface.Bill",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserCommitments",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_billId",
          "type": "bytes32"
        }
      ],
      "name": "getBillCommitments",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "billId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "inSupport",
              "type": "bool"
            }
          ],
          "internalType": "struct Commitments.Commitment[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_billId",
          "type": "bytes32"
        }
      ],
      "name": "getUserCommitment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "inSupport",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_billId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "_inSupport",
          "type": "bool"
        }
      ],
      "name": "placeCommitment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_billId",
          "type": "bytes32"
        }
      ],
      "name": "checkOutcome",
      "outputs": [
        {
          "internalType": "enum OracleInterface.BillOutcome",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracleAddress",
          "type": "address"
        }
      ],
      "name": "setOracleAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOracleAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOracleConnection",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Transferral\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_billId\",\"type\":\"bytes32\"}],\"name\":\"checkOutcome\",\"outputs\":[{\"internalType\":\"enum OracleInterface.BillOutcome\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_billId\",\"type\":\"bytes32\"}],\"name\":\"getBill\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"amendsBill\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sponsor\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"sponsorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dateOfIntroduction\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"committees\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"latestAction\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"latestActionDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"legislationNumber\",\"type\":\"string\"},{\"internalType\":\"enum OracleInterface.BillOutcome\",\"name\":\"outcome\",\"type\":\"uint8\"}],\"internalType\":\"struct OracleInterface.Bill\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_billId\",\"type\":\"bytes32\"}],\"name\":\"getBillCommitments\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"billId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inSupport\",\"type\":\"bool\"}],\"internalType\":\"struct Commitments.Commitment[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCommitableBills\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMostRecentBill\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"amendsBill\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sponsor\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"sponsorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dateOfIntroduction\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"committees\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"latestAction\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"latestActionDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"legislationNumber\",\"type\":\"string\"},{\"internalType\":\"enum OracleInterface.BillOutcome\",\"name\":\"outcome\",\"type\":\"uint8\"}],\"internalType\":\"struct OracleInterface.Bill\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_billId\",\"type\":\"bytes32\"}],\"name\":\"getUserCommitment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inSupport\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserCommitments\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_billId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_inSupport\",\"type\":\"bool\"}],\"name\":\"placeCommitment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"}],\"name\":\"setOracleAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOracleConnection\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Oliver Song\",\"kind\":\"dev\",\"methods\":{\"checkOutcome(bytes32)\":{\"params\":{\"_billId\":\"the id of the bill to check\"},\"returns\":{\"_0\":\"the outcome of the given bill\"}},\"getBill(bytes32)\":{\"params\":{\"_billId\":\"the id of the desired bill\"}},\"getBillCommitments(bytes32)\":{\"params\":{\"_billId\":\"the id of the desired bill\"},\"returns\":{\"_0\":\"array of Commitments\"}},\"getCommitableBills()\":{\"returns\":{\"_0\":\"array of bill ids\"}},\"getOracleAddress()\":{\"returns\":{\"_0\":\"the address of the currently set oracle\"}},\"getUserCommitment(bytes32)\":{\"params\":{\"_billId\":\"the id of the desired bill\"},\"returns\":{\"amount\":\"commitment amount, or 0 if no commitment found\",\"inSupport\":\"in support of bill or not, or 0 if no commitment found\"}},\"getUserCommitments()\":{\"returns\":{\"_0\":\"array of bill ids\"}},\"placeCommitment(uint256,bytes32,bool)\":{\"params\":{\"_amount\":\"the id of the bill on which to commitment\",\"_billId\":\"the id of the bill on which to commitment\",\"_inSupport\":\"commitment in favor of bill passing (vs against)\"}},\"setOracleAddress(address)\":{\"details\":\"setting a wrong address may result in false return value, or error\",\"params\":{\"_oracleAddress\":\"the address of the oracle\"},\"returns\":{\"_0\":\"true if connection to the new oracle address was successful\"}},\"testOracleConnection()\":{\"returns\":{\"_0\":\"true if connection successful\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Commitments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkOutcome(bytes32)\":{\"notice\":\"check the outcome of the given bill; if ready, will trigger calculation of payout, and actual payout to winners\"},\"getBill(bytes32)\":{\"notice\":\"returns the full data of the specified bill\"},\"getBillCommitments(bytes32)\":{\"notice\":\"gets the current commitments for the bill\"},\"getCommitableBills()\":{\"notice\":\"gets a list ids of all currently commitable bill\"},\"getMostRecentBill()\":{\"notice\":\"returns the full data of the most recent commitable bill\"},\"getOracleAddress()\":{\"notice\":\"gets the address of the oracle being used\"},\"getUserCommitment(bytes32)\":{\"notice\":\"gets a user's commitment\"},\"getUserCommitments()\":{\"notice\":\"gets the current bills on which the user has commitments\"},\"placeCommitment(uint256,bytes32,bool)\":{\"notice\":\"places a non-rescindable commitment on the given bill\"},\"setOracleAddress(address)\":{\"notice\":\"sets the address of the oracle contract to use\"},\"testOracleConnection()\":{\"notice\":\"for testing; tests that the oracle is callable\"}},\"notice\":\"Takes commitments and handles payouts for bill outcomes\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Commitments.sol\":\"Commitments\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Commitments.sol\":{\"keccak256\":\"0x72e136f6288b571bb818b037aeb90236b932420f6f602bfc4043db92de38f622\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c508d5992adaaeeef08b85f7305601c0687f5f0ce88cb34105c43d45e4d918\",\"dweb:/ipfs/Qmco4DCsetFUxLsoASWqoc22jZxMxTkWNCPyGh4YfcQWE5\"]},\"project:/contracts/OracleInterface.sol\":{\"keccak256\":\"0xb43b589abf31eb4af0226ca7ba73a993ed8b1e1c32ffff9dc8463099341b23a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8c3564ed9b66175c75cae5e45d6b3b6926be4b70e05899571c65c77beb437c1\",\"dweb:/ipfs/QmS4eDkoPPJEJ6obFyEdn9P8jXLaxFS7ssqZsz2KXy5bK4\"]},\"project:/contracts/Ownable.sol\":{\"keccak256\":\"0x36590ed9936e54f6bcf78724e37194bc81164251b3a8a511de2aec6068d22e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b836d8766d0945a102b3eb7d5ef20e7c1f95ed4b681024d15b95a329dc62c85\",\"dweb:/ipfs/QmcBxMuUphyQ2pAaVEvDtNF7fZ5PphHRw3JcBxVe7eXd5f\"]},\"project:/contracts/SafeMath.sol\":{\"keccak256\":\"0x1c40ff10e515e41f566c70340548c736bcf4a47dab402a5878b7785f5f3b7306\",\"urls\":[\"bzz-raw://81d9f9a7ffa2b8122635eedbd4667b5dfe27079e9b466194a60a0056e2a61123\",\"dweb:/ipfs/QmYbSdgLDaZbJBEVMKS2jVAstydzNvUVUjBYJLKskZrtcg\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14491:5",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:5",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "109:92:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "119:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "131:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "142:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "127:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "127:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "119:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "161:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "186:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "179:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "179:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "172:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "172:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "154:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "154:41:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "154:41:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "78:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "89:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "100:4:5",
                "type": ""
              }
            ],
            "src": "14:187:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "276:110:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "322:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "331:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "334:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "324:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "324:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "324:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "297:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "306:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "293:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "293:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "318:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "289:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "289:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "286:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "347:33:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "370:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "357:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "357:23:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "347:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "242:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "253:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "265:6:5",
                "type": ""
              }
            ],
            "src": "206:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "444:205:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "454:10:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "463:1:5",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "458:1:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "523:63:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "548:3:5"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "553:1:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "544:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "544:11:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "567:3:5"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "572:1:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "563:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "563:11:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "557:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "557:18:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "537:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "537:39:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "537:39:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "484:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "487:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "481:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:13:5"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "495:19:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "497:15:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "506:1:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "509:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "502:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "502:10:5"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "497:1:5"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "477:3:5",
                    "statements": []
                  },
                  "src": "473:113:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "612:31:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "625:3:5"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "630:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "621:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "621:16:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "639:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "614:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "614:27:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "614:27:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "601:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "604:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "598:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "598:13:5"
                  },
                  "nodeType": "YulIf",
                  "src": "595:48:5"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "422:3:5",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "427:3:5",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "432:6:5",
                "type": ""
              }
            ],
            "src": "391:258:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "704:208:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "714:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "734:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "728:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "728:12:5"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "718:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "756:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "761:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "749:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "749:19:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "749:19:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "803:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "810:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "799:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "799:16:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "821:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "826:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "817:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "817:14:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "833:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "777:21:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "777:63:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "777:63:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "849:57:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "864:3:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "877:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "885:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "873:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "873:15:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "894:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "890:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "890:7:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "869:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "869:29:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "860:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "860:39:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "901:4:5",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "856:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "856:50:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "849:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "681:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "688:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "696:3:5",
                "type": ""
              }
            ],
            "src": "654:258:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "961:60:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "978:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "987:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1002:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1007:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "998:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "998:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1011:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "994:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "994:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "983:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "983:31:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "971:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "971:44:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "971:44:5"
                }
              ]
            },
            "name": "abi_encode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "945:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "952:3:5",
                "type": ""
              }
            ],
            "src": "917:104:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1058:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1082:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1087:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1078:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1078:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1068:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1068:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1068:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1115:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1118:4:5",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1108:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1108:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1108:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1139:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1142:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1132:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1132:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1132:15:5"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1026:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1211:186:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1253:111:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1274:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1281:3:5",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1286:10:5",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1277:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1277:20:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1267:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1267:31:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1267:31:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1318:1:5",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1321:4:5",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1311:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1311:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1311:15:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1346:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1349:4:5",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1339:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1339:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1339:15:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1234:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1241:1:5",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1231:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1231:12:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1224:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1224:20:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1221:143:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1380:3:5"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1385:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1373:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1373:18:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1373:18:5"
                }
              ]
            },
            "name": "abi_encode_enum_BillOutcome",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1195:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1202:3:5",
                "type": ""
              }
            ],
            "src": "1158:239:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1545:1705:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1562:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1573:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1555:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1555:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1555:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1596:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1607:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1592:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1592:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1618:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1612:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1612:13:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1585:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1585:41:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1585:41:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1635:42:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1665:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1673:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1661:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1661:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1655:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1655:22:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "1639:12:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1686:16:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1696:6:5",
                    "type": "",
                    "value": "0x0160"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1690:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1722:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1733:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1718:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1718:18:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1738:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1711:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1711:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1711:30:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1750:66:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "1782:12:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1800:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1811:3:5",
                            "type": "",
                            "value": "384"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1796:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1796:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1764:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1764:52:5"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "1754:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1825:44:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1857:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1865:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1853:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1853:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1847:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:22:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_1",
                      "nodeType": "YulTypedName",
                      "src": "1829:14:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1878:17:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1892:2:5",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1888:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1888:7:5"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1882:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1915:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1926:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1911:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1911:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "1939:6:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1947:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1935:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1935:22:5"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1959:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1931:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1931:31:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1904:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1904:59:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1904:59:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1972:55:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0_1",
                        "nodeType": "YulIdentifier",
                        "src": "2004:14:5"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "2020:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1986:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1986:41:5"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "1976:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2036:44:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2068:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2076:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2064:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2064:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2058:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2058:22:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_2",
                      "nodeType": "YulTypedName",
                      "src": "2040:14:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0_2",
                        "nodeType": "YulIdentifier",
                        "src": "2108:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2128:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2139:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2124:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2124:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2089:18:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2089:55:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2089:55:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2164:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2175:3:5",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2160:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2160:19:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2191:6:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2199:3:5",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2187:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2187:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2181:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2181:23:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2153:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2153:52:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2153:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2214:45:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2246:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2254:3:5",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2242:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2242:16:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2236:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2236:23:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_3",
                      "nodeType": "YulTypedName",
                      "src": "2218:14:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2279:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2290:3:5",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2275:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2275:19:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "2304:6:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2312:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2300:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2300:22:5"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2324:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2296:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2296:31:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2268:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2268:60:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2268:60:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2337:55:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0_3",
                        "nodeType": "YulIdentifier",
                        "src": "2369:14:5"
                      },
                      {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "2385:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2351:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2351:41:5"
                  },
                  "variables": [
                    {
                      "name": "tail_3",
                      "nodeType": "YulTypedName",
                      "src": "2341:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2401:45:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2433:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2441:3:5",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2429:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2429:16:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2423:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2423:23:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_4",
                      "nodeType": "YulTypedName",
                      "src": "2405:14:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2466:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2477:3:5",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2462:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2462:19:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "tail_3",
                                "nodeType": "YulIdentifier",
                                "src": "2491:6:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2499:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2487:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2487:22:5"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2511:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2483:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2483:31:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2455:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2455:60:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2455:60:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2524:55:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0_4",
                        "nodeType": "YulIdentifier",
                        "src": "2556:14:5"
                      },
                      {
                        "name": "tail_3",
                        "nodeType": "YulIdentifier",
                        "src": "2572:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2538:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2538:41:5"
                  },
                  "variables": [
                    {
                      "name": "tail_4",
                      "nodeType": "YulTypedName",
                      "src": "2528:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2588:33:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2608:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2616:3:5",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2604:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2604:16:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2598:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2598:23:5"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2592:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2630:13:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2640:3:5",
                    "type": "",
                    "value": "256"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "2634:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2663:9:5"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2674:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2659:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2659:18:5"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2679:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2652:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2652:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2652:30:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2691:44:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2723:6:5"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2731:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2719:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2719:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2713:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2713:22:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_5",
                      "nodeType": "YulTypedName",
                      "src": "2695:14:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2744:13:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2754:3:5",
                    "type": "",
                    "value": "288"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "2748:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2777:9:5"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2788:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2773:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2773:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "tail_4",
                                "nodeType": "YulIdentifier",
                                "src": "2801:6:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2809:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2797:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2797:22:5"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2821:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2793:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2793:31:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2766:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2766:59:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2766:59:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2834:55:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0_5",
                        "nodeType": "YulIdentifier",
                        "src": "2866:14:5"
                      },
                      {
                        "name": "tail_4",
                        "nodeType": "YulIdentifier",
                        "src": "2882:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2848:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2848:41:5"
                  },
                  "variables": [
                    {
                      "name": "tail_5",
                      "nodeType": "YulTypedName",
                      "src": "2838:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2898:44:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2930:6:5"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2938:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2926:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2926:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2920:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2920:22:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_6",
                      "nodeType": "YulTypedName",
                      "src": "2902:14:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2951:13:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2961:3:5",
                    "type": "",
                    "value": "320"
                  },
                  "variables": [
                    {
                      "name": "_6",
                      "nodeType": "YulTypedName",
                      "src": "2955:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2984:9:5"
                          },
                          {
                            "name": "_6",
                            "nodeType": "YulIdentifier",
                            "src": "2995:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2980:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2980:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "tail_5",
                                "nodeType": "YulIdentifier",
                                "src": "3008:6:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3016:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3004:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3004:22:5"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3028:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3000:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3000:31:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2973:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2973:59:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2973:59:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3041:55:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0_6",
                        "nodeType": "YulIdentifier",
                        "src": "3073:14:5"
                      },
                      {
                        "name": "tail_5",
                        "nodeType": "YulIdentifier",
                        "src": "3089:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3055:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3055:41:5"
                  },
                  "variables": [
                    {
                      "name": "tail_6",
                      "nodeType": "YulTypedName",
                      "src": "3045:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3105:44:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3137:6:5"
                          },
                          {
                            "name": "_6",
                            "nodeType": "YulIdentifier",
                            "src": "3145:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3133:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3133:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3127:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3127:22:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_7",
                      "nodeType": "YulTypedName",
                      "src": "3109:14:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0_7",
                        "nodeType": "YulIdentifier",
                        "src": "3186:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3206:9:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3217:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3202:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3202:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_BillOutcome",
                      "nodeType": "YulIdentifier",
                      "src": "3158:27:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3158:63:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3158:63:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3230:14:5",
                  "value": {
                    "name": "tail_6",
                    "nodeType": "YulIdentifier",
                    "src": "3238:6:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3230:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Bill_$887_memory_ptr__to_t_struct$_Bill_$887_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1514:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1525:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1536:4:5",
                "type": ""
              }
            ],
            "src": "1402:1848:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3300:86:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3364:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3373:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3376:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3366:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3366:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3366:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3323:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3334:5:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3349:3:5",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3354:1:5",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3345:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3345:11:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3358:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3341:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3341:19:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3330:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3330:31:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3320:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3320:42:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3313:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3313:50:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3310:70:5"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3289:5:5",
                "type": ""
              }
            ],
            "src": "3255:131:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3461:177:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3507:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3516:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3519:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3509:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3509:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3509:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3482:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3491:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3478:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3478:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3503:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3474:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3474:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3471:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3532:36:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3558:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3545:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3545:23:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3536:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3602:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3577:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3577:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3577:31:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3617:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3627:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3617:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3427:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3438:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3450:6:5",
                "type": ""
              }
            ],
            "src": "3391:247:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3757:97:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3767:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3779:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3790:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3775:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3775:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3767:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3830:6:5"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3838:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_BillOutcome",
                      "nodeType": "YulIdentifier",
                      "src": "3802:27:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3802:46:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3802:46:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_BillOutcome_$891__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3726:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3737:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3748:4:5",
                "type": ""
              }
            ],
            "src": "3643:211:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3982:135:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3992:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4004:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4015:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4000:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4000:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3992:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4034:9:5"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4045:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4027:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4027:25:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4027:25:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4072:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4083:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4068:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4068:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4102:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4095:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4095:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4088:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4088:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4061:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4061:50:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4061:50:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3943:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3954:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3962:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3973:4:5",
                "type": ""
              }
            ],
            "src": "3859:258:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4164:76:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4218:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4227:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4230:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4220:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4220:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4220:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4187:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4208:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4201:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4201:13:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4194:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4194:21:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4184:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4184:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4177:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4177:40:5"
                  },
                  "nodeType": "YulIf",
                  "src": "4174:60:5"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4153:5:5",
                "type": ""
              }
            ],
            "src": "4122:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4346:276:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4392:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4401:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4404:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4394:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4394:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4394:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4367:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4376:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4363:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4363:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4388:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4359:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4359:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "4356:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4417:33:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4440:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4427:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4427:23:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4417:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4459:42:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4486:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4497:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4482:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4482:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4469:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4469:32:5"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4459:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4510:45:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4540:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4551:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4536:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4536:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4523:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4523:32:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4514:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4586:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4564:21:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4564:28:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4564:28:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4601:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4611:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4601:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes32t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4296:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4307:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4319:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4327:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4335:6:5",
                "type": ""
              }
            ],
            "src": "4245:377:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4830:764:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4840:12:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4850:2:5",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4844:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4861:32:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4879:9:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4890:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4875:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4875:18:5"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "4865:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4909:9:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4920:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4902:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4902:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4902:21:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4932:17:5",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "4943:6:5"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4936:3:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4958:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4978:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4972:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4972:13:5"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4962:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "5001:6:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5009:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4994:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4994:22:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4994:22:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5025:12:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5035:2:5",
                    "type": "",
                    "value": "64"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "5029:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5046:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5057:9:5"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "5068:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5053:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5053:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5046:3:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5080:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5098:6:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5106:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5094:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5094:15:5"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "5084:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5118:10:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5127:1:5",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5122:1:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5186:382:5",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5200:23:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5216:6:5"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5210:5:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5210:13:5"
                        },
                        "variables": [
                          {
                            "name": "_3",
                            "nodeType": "YulTypedName",
                            "src": "5204:2:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5243:3:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "5258:2:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "5252:5:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5252:9:5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5271:3:5",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5276:1:5",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "5267:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5267:11:5"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5280:1:5",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "5263:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5263:19:5"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "5248:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5248:35:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5236:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5236:48:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5236:48:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5308:3:5"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5313:2:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5304:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5304:12:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "5328:2:5"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "5332:2:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5324:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5324:11:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5318:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5318:18:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5297:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5297:40:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5297:40:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5361:3:5"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "5366:2:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5357:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5357:12:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "5381:2:5"
                                    },
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "5385:2:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5377:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5377:11:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5371:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5371:18:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5350:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5350:40:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5350:40:5"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5403:14:5",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5413:4:5",
                          "type": "",
                          "value": "0x60"
                        },
                        "variables": [
                          {
                            "name": "_4",
                            "nodeType": "YulTypedName",
                            "src": "5407:2:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5441:3:5"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "5446:2:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5437:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5437:12:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "5475:2:5"
                                            },
                                            {
                                              "name": "_4",
                                              "nodeType": "YulIdentifier",
                                              "src": "5479:2:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5471:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5471:11:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "5465:5:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5465:18:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "iszero",
                                    "nodeType": "YulIdentifier",
                                    "src": "5458:6:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5458:26:5"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "5451:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5451:34:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5430:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5430:56:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5430:56:5"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5499:21:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5510:3:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5515:4:5",
                              "type": "",
                              "value": "0x80"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5506:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5506:14:5"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5499:3:5"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5533:25:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5547:6:5"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5555:2:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5543:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5543:15:5"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5533:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5148:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5151:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5145:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5145:13:5"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5159:18:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5161:14:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5170:1:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5173:1:5",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5166:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5166:9:5"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5161:1:5"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5141:3:5",
                    "statements": []
                  },
                  "src": "5137:431:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5577:11:5",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5585:3:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5577:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_Commitment_$60_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Commitment_$60_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4799:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4810:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4821:4:5",
                "type": ""
              }
            ],
            "src": "4627:967:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5750:481:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5760:12:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5770:2:5",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5764:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5781:32:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5799:9:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5810:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5795:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5795:18:5"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "5785:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5829:9:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5840:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5822:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5822:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5822:21:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5852:17:5",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "5863:6:5"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "5856:3:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5878:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5898:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5892:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5892:13:5"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5882:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "5921:6:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5929:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5914:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5914:22:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5914:22:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5945:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5956:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5967:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5952:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5952:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5945:3:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5979:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5997:6:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6005:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5993:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5993:15:5"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "5983:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6017:10:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6026:1:5",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6021:1:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6085:120:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6106:3:5"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6117:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6111:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6111:13:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6099:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6099:26:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6099:26:5"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6138:19:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6149:3:5"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6154:2:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6145:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6145:12:5"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6138:3:5"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6170:25:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6184:6:5"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6192:2:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6180:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6180:15:5"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6170:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6047:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6050:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6044:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6044:13:5"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6058:18:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6060:14:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6069:1:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6072:1:5",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6065:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6065:9:5"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6060:1:5"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6040:3:5",
                    "statements": []
                  },
                  "src": "6036:169:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6214:11:5",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "6222:3:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6214:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5719:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5730:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5741:4:5",
                "type": ""
              }
            ],
            "src": "5599:632:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6337:102:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6347:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6359:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6370:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6355:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6355:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6347:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6389:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6404:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6420:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6425:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6416:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6416:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6429:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6412:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6412:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6400:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6400:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6382:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6382:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6382:51:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6306:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6317:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6328:4:5",
                "type": ""
              }
            ],
            "src": "6236:203:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6522:167:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6568:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6577:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6580:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6570:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6570:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6570:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6543:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6552:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6539:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6539:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6564:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6535:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6535:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "6532:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6593:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6612:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6606:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6606:16:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6597:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6653:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "6631:21:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6631:28:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6631:28:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6668:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6678:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6668:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6488:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6499:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6511:6:5",
                "type": ""
              }
            ],
            "src": "6444:245:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6795:76:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6805:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6817:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6828:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6813:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6813:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6805:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6847:9:5"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6858:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6840:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6840:25:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6840:25:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6764:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6775:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6786:4:5",
                "type": ""
              }
            ],
            "src": "6694:177:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6908:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6925:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6932:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6937:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6928:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6928:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6918:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6918:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6918:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6965:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6968:4:5",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6958:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6958:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6958:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6989:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6992:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6982:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6982:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6982:15:5"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "6876:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7054:209:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7064:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7080:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7074:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7074:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "7064:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7092:37:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7114:6:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7122:6:5",
                        "type": "",
                        "value": "0x0160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7110:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7110:19:5"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "7096:10:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7204:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7206:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7206:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7206:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7147:10:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7159:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7144:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7144:34:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7183:10:5"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7195:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7180:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7180:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "7141:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7141:62:5"
                  },
                  "nodeType": "YulIf",
                  "src": "7138:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7242:2:5",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "7246:10:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7235:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7235:22:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7235:22:5"
                }
              ]
            },
            "name": "allocate_memory_2282",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7043:6:5",
                "type": ""
              }
            ],
            "src": "7008:255:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7313:230:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7323:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7339:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7333:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7333:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "7323:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7351:58:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7373:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "7389:4:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7395:2:5",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7385:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7385:13:5"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7404:2:5",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "7400:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7400:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7381:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7381:27:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7369:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7369:40:5"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "7355:10:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7484:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7486:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7486:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7486:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7427:10:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7439:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7424:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7424:34:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7463:10:5"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7475:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7460:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7460:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "7421:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7421:62:5"
                  },
                  "nodeType": "YulIf",
                  "src": "7418:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7522:2:5",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "7526:10:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7515:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7515:22:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7515:22:5"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7293:4:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7302:6:5",
                "type": ""
              }
            ],
            "src": "7268:275:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7612:433:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7661:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7670:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7673:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7663:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7663:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7663:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7640:6:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7648:4:5",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7636:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7636:17:5"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "7655:3:5"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "7632:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7632:27:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7625:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7625:35:5"
                  },
                  "nodeType": "YulIf",
                  "src": "7622:55:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7686:23:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "7702:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7696:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7696:13:5"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7690:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7748:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7750:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7750:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7750:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7724:2:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7728:18:5",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7721:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7721:26:5"
                  },
                  "nodeType": "YulIf",
                  "src": "7718:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7779:70:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7822:2:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7826:4:5",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7818:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7818:13:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7837:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7833:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7833:7:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7814:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7814:27:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7843:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7810:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7810:38:5"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7794:15:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7794:55:5"
                  },
                  "variables": [
                    {
                      "name": "array_1",
                      "nodeType": "YulTypedName",
                      "src": "7783:7:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array_1",
                        "nodeType": "YulIdentifier",
                        "src": "7865:7:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "7874:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7858:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7858:19:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7858:19:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7925:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7934:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7937:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7927:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7927:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7927:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7900:6:5"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "7908:2:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7896:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7896:15:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7913:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7892:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7892:26:5"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "7920:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7889:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7889:35:5"
                  },
                  "nodeType": "YulIf",
                  "src": "7886:55:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "7976:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7984:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7972:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7972:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "array_1",
                            "nodeType": "YulIdentifier",
                            "src": "7995:7:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8004:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7991:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7991:18:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8011:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7950:21:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7950:64:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7950:64:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8023:16:5",
                  "value": {
                    "name": "array_1",
                    "nodeType": "YulIdentifier",
                    "src": "8032:7:5"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "8023:5:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7586:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7594:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "7602:5:5",
                "type": ""
              }
            ],
            "src": "7548:497:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8110:78:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8120:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8135:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8129:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8129:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8120:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8176:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "8151:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8151:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8151:31:5"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8089:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8100:5:5",
                "type": ""
              }
            ],
            "src": "8050:138:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8262:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8272:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8287:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8281:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8281:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8272:5:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8327:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8336:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8339:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8329:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8329:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8329:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8316:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8323:1:5",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8313:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8313:12:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8306:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8306:20:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8303:40:5"
                }
              ]
            },
            "name": "abi_decode_enum_BillOutcome_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8241:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8252:5:5",
                "type": ""
              }
            ],
            "src": "8193:156:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8456:1784:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8502:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8511:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8514:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8504:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8504:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8504:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8477:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8486:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8473:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8473:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8498:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8469:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8469:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8466:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8527:30:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8547:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8541:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8541:16:5"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "8531:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8566:28:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8576:18:5",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8570:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8621:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8630:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8633:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8623:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8623:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8623:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8609:6:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8617:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8606:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8606:14:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8603:34:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8646:32:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8660:9:5"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8671:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8656:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8656:22:5"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "8650:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8720:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8729:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8732:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8722:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8722:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8722:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8698:7:5"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "8707:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8694:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8694:16:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8712:6:5",
                        "type": "",
                        "value": "0x0160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8690:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8690:29:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8687:49:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8745:35:5",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_memory_2282",
                      "nodeType": "YulIdentifier",
                      "src": "8758:20:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8758:22:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8749:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8796:5:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "8809:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8803:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8803:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8789:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8789:24:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8789:24:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8822:34:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "8848:2:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8852:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8844:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8844:11:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8838:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8838:18:5"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "8826:8:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8885:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8894:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8897:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8887:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8887:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8887:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "8871:8:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8881:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8868:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8868:16:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8865:36:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8921:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8928:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8917:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8917:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "8966:2:5"
                              },
                              {
                                "name": "offset_1",
                                "nodeType": "YulIdentifier",
                                "src": "8970:8:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8962:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8962:17:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8981:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "8933:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8933:56:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8910:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8910:80:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8910:80:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8999:34:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "9025:2:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9029:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9021:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9021:11:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9015:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9015:18:5"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "9003:8:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9062:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9071:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9074:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9064:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9064:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9064:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "9048:8:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9058:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9045:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9045:16:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9042:36:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9098:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9105:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9094:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9094:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9143:2:5"
                              },
                              {
                                "name": "offset_2",
                                "nodeType": "YulIdentifier",
                                "src": "9147:8:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9139:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9139:17:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9158:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9110:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9110:56:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9087:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9087:80:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9087:80:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9187:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9194:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9183:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9183:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9233:2:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9237:2:5",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9229:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9229:11:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9199:29:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9199:42:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9176:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9176:66:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9176:66:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9262:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9269:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9258:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9258:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9285:2:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9289:3:5",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9281:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9281:12:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9275:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9275:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9251:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9251:44:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9251:44:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9304:35:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "9330:2:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9334:3:5",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9326:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9326:12:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9320:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9320:19:5"
                  },
                  "variables": [
                    {
                      "name": "offset_3",
                      "nodeType": "YulTypedName",
                      "src": "9308:8:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9368:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9377:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9380:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9370:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9370:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9370:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_3",
                        "nodeType": "YulIdentifier",
                        "src": "9354:8:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9364:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9351:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9351:16:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9348:36:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9404:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9411:3:5",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9400:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9400:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9450:2:5"
                              },
                              {
                                "name": "offset_3",
                                "nodeType": "YulIdentifier",
                                "src": "9454:8:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9446:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9446:17:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9465:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9417:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9417:56:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9393:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9393:81:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9393:81:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9483:35:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "9509:2:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9513:3:5",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9505:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9505:12:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9499:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9499:19:5"
                  },
                  "variables": [
                    {
                      "name": "offset_4",
                      "nodeType": "YulTypedName",
                      "src": "9487:8:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9547:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9556:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9559:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9549:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9549:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9549:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_4",
                        "nodeType": "YulIdentifier",
                        "src": "9533:8:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9543:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9530:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9530:16:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9527:36:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9583:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9590:3:5",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9579:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9579:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9629:2:5"
                              },
                              {
                                "name": "offset_4",
                                "nodeType": "YulIdentifier",
                                "src": "9633:8:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9625:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9625:17:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9644:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9596:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9596:56:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9572:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9572:81:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9572:81:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9673:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9680:3:5",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9669:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9669:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9696:2:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9700:3:5",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9692:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9692:12:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9686:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9686:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9662:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9662:44:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9662:44:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9715:13:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9725:3:5",
                    "type": "",
                    "value": "256"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "9719:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9737:34:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "9763:2:5"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "9767:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9759:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9759:11:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9753:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9753:18:5"
                  },
                  "variables": [
                    {
                      "name": "offset_5",
                      "nodeType": "YulTypedName",
                      "src": "9741:8:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9800:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9809:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9812:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9802:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9802:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9802:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_5",
                        "nodeType": "YulIdentifier",
                        "src": "9786:8:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9796:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9783:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9783:16:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9780:36:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9836:5:5"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "9843:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9832:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9832:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9881:2:5"
                              },
                              {
                                "name": "offset_5",
                                "nodeType": "YulIdentifier",
                                "src": "9885:8:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9877:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9877:17:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9896:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9848:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9848:56:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9825:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9825:80:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9825:80:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9914:13:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9924:3:5",
                    "type": "",
                    "value": "288"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "9918:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9936:34:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "9962:2:5"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "9966:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9958:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9958:11:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9952:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9952:18:5"
                  },
                  "variables": [
                    {
                      "name": "offset_6",
                      "nodeType": "YulTypedName",
                      "src": "9940:8:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9999:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10008:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10011:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10001:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10001:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10001:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_6",
                        "nodeType": "YulIdentifier",
                        "src": "9985:8:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9995:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9982:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9982:16:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9979:36:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10035:5:5"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "10042:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10031:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10031:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10080:2:5"
                              },
                              {
                                "name": "offset_6",
                                "nodeType": "YulIdentifier",
                                "src": "10084:8:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10076:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10076:17:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10095:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10047:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10047:56:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10024:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10024:80:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10024:80:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10113:13:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10123:3:5",
                    "type": "",
                    "value": "320"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "10117:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10146:5:5"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "10153:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10142:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10142:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10201:2:5"
                              },
                              {
                                "name": "_5",
                                "nodeType": "YulIdentifier",
                                "src": "10205:2:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10197:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10197:11:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_enum_BillOutcome_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10158:38:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10158:51:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10135:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10135:75:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10135:75:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10219:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10229:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10219:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Bill_$887_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8422:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8433:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8445:6:5",
                "type": ""
              }
            ],
            "src": "8354:1886:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10277:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10294:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10301:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10306:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10297:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10297:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10287:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10287:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10287:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10334:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10337:4:5",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10327:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10327:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10327:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10358:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10361:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10351:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10351:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10351:15:5"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "10245:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10409:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10426:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10433:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10438:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "10429:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10429:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10419:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10419:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10419:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10466:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10469:4:5",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10459:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10459:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10459:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10490:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10493:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10483:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10483:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10483:15:5"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "10377:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10556:88:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10587:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "10589:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10589:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10589:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10572:5:5"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10583:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "10579:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10579:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "10569:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10569:17:5"
                  },
                  "nodeType": "YulIf",
                  "src": "10566:43:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10618:20:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10629:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10636:1:5",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10625:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10625:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "10618:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10538:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "10548:3:5",
                "type": ""
              }
            ],
            "src": "10509:135:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10823:237:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10840:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10851:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10833:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10833:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10833:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10874:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10885:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10870:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10870:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10890:2:5",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10863:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10863:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10863:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10913:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10924:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10909:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10909:18:5"
                      },
                      {
                        "hexValue": "436f6d6d69746d656e7420616d6f756e74206d757374206265203e3d206d696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10929:34:5",
                        "type": "",
                        "value": "Commitment amount must be >= min"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10902:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10902:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10902:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10984:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10995:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10980:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10980:18:5"
                      },
                      {
                        "hexValue": "696d756d20636f6d6d69746d656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11000:17:5",
                        "type": "",
                        "value": "imum commitment"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10973:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10973:45:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10973:45:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11027:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11039:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11050:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11035:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11035:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11027:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fa758ddcd0691b1462c43f70c8d239a0ebb1235dbeb8532a26952b626fb1647b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10800:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10814:4:5",
                "type": ""
              }
            ],
            "src": "10649:411:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11239:174:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11256:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11267:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11249:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11249:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11249:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11290:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11301:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11286:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11286:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11306:2:5",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11279:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11279:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11279:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11329:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11340:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11325:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11325:18:5"
                      },
                      {
                        "hexValue": "5370656369666965642062696c6c206e6f7420666f756e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11345:26:5",
                        "type": "",
                        "value": "Specified bill not found"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11318:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11318:54:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11318:54:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11381:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11393:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11404:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11389:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11389:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11381:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_82991fc044c2bd0bea42197f7c1960b35df518d3cdc9253e2195a4d5c8d5cf56__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11216:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11230:4:5",
                "type": ""
              }
            ],
            "src": "11065:348:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11592:173:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11609:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11620:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11602:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11602:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11602:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11643:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11654:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11639:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11639:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11659:2:5",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11632:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11632:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11632:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11682:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11693:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11678:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11678:18:5"
                      },
                      {
                        "hexValue": "436f6d6d69746d656e74206973206e6f742076616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11698:25:5",
                        "type": "",
                        "value": "Commitment is not valid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11671:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11671:53:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11671:53:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11733:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11745:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11756:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11741:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11741:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11733:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_747dc72168f8439c429b54742d6708b5364735cc5b535e1efd5a8ea232c7b1d8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11569:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11583:4:5",
                "type": ""
              }
            ],
            "src": "11418:347:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11944:178:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11961:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11972:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11954:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11954:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11954:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11995:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12006:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11991:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11991:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12011:2:5",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11984:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11984:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11984:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12034:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12045:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12030:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12030:18:5"
                      },
                      {
                        "hexValue": "42696c6c206e6f74206f70656e20666f7220636f6d6d69746d656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12050:30:5",
                        "type": "",
                        "value": "Bill not open for commitment"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12023:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12023:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12023:58:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12090:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12102:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12113:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12098:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12098:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12090:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6c33a961069d5bf03ae6ed78e31473cca3cab60fdb6d3407dd96e8c0a73d9444__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11921:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11935:4:5",
                "type": ""
              }
            ],
            "src": "11770:352:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12233:830:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12243:12:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12253:2:5",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12247:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12300:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12309:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12312:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12302:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12302:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12302:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12275:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12284:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12271:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12271:23:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "12296:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12267:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12267:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12264:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12325:30:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12345:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12339:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12339:16:5"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "12329:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12364:28:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12374:18:5",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "12368:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12419:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12428:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12431:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12421:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12421:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12421:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "12407:6:5"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "12415:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12404:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12404:14:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12401:34:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12444:32:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12458:9:5"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "12469:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12454:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12454:22:5"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "12448:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12524:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12533:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12536:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12526:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12526:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12526:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "12503:2:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12507:4:5",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12499:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12499:13:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12514:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "12495:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12495:27:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12488:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12488:35:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12485:55:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12549:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "12565:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12559:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12559:9:5"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "12553:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12591:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "12593:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12593:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12593:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "12583:2:5"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "12587:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12580:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12580:10:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12577:36:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12622:20:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12636:1:5",
                        "type": "",
                        "value": "5"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "12639:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "12632:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12632:10:5"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "12626:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12651:39:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "12682:2:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12686:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12678:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12678:11:5"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "12662:15:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12662:28:5"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "12655:3:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12699:16:5",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "12712:3:5"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "12703:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "12731:3:5"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "12736:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12724:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12724:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12724:15:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12748:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "12759:3:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "12764:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12755:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12755:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "12748:3:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12776:34:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "12798:2:5"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "12802:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12794:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12794:11:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "12807:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12790:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12790:20:5"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "12780:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12842:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12851:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12854:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12844:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12844:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12844:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "12825:6:5"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "12833:7:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12822:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12822:19:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12819:39:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12867:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "12882:2:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "12886:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12878:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12878:11:5"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "12871:3:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12954:79:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "12975:3:5"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "12986:3:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "12980:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12980:10:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12968:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12968:23:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12968:23:5"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "13004:19:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "13015:3:5"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "13020:2:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13011:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13011:12:5"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "13004:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "12909:3:5"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "12914:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12906:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12906:15:5"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "12922:23:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12924:19:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "12935:3:5"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "12940:2:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12931:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12931:12:5"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "12924:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "12902:3:5",
                    "statements": []
                  },
                  "src": "12898:135:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13042:15:5",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "13052:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13042:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12199:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12210:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12222:6:5",
                "type": ""
              }
            ],
            "src": "12127:936:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13149:170:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13195:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13204:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13207:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13197:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13197:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13197:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13170:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13179:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13166:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13166:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13191:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13162:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13162:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "13159:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13220:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13239:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13233:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13233:16:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "13224:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13283:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "13258:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13258:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13258:31:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13298:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13308:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13298:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13115:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13126:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13138:6:5",
                "type": ""
              }
            ],
            "src": "13068:251:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13372:80:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13399:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13401:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13401:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13401:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13388:1:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13395:1:5"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "13391:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13391:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13385:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13385:13:5"
                  },
                  "nodeType": "YulIf",
                  "src": "13382:39:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13430:16:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13441:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13444:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13437:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13437:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "13430:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13355:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13358:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "13364:3:5",
                "type": ""
              }
            ],
            "src": "13324:128:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13489:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13506:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13513:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13518:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "13509:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13509:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13499:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13499:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13499:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13546:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13549:4:5",
                        "type": "",
                        "value": "0x01"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13539:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13539:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13539:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13570:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13573:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13563:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13563:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13563:15:5"
                }
              ]
            },
            "name": "panic_error_0x01",
            "nodeType": "YulFunctionDefinition",
            "src": "13457:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13638:76:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13660:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13662:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13662:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13662:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13654:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13657:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13651:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13651:8:5"
                  },
                  "nodeType": "YulIf",
                  "src": "13648:34:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13691:17:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13703:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13706:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13699:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13699:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "13691:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13620:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13623:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "13629:4:5",
                "type": ""
              }
            ],
            "src": "13589:125:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13876:218:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13886:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13898:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13909:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13894:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13894:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13886:4:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13921:29:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13939:3:5",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13944:1:5",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "13935:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13935:11:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13948:1:5",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13931:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13931:19:5"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "13925:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13966:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13981:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13989:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13977:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13977:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13959:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13959:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13959:34:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14013:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14024:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14009:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14009:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "14033:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14041:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14029:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14029:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14002:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14002:43:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14002:43:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14065:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14076:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14061:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14061:18:5"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "14081:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14054:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14054:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14054:34:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13829:9:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13840:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13848:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13856:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13867:4:5",
                "type": ""
              }
            ],
            "src": "13719:375:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14145:171:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14176:111:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14197:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14204:3:5",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14209:10:5",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "14200:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14200:20:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14190:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14190:31:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14190:31:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14241:1:5",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14244:4:5",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14234:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14234:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14234:15:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14269:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14272:4:5",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14262:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14262:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14262:15:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14165:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14158:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14158:9:5"
                  },
                  "nodeType": "YulIf",
                  "src": "14155:132:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14296:14:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14305:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14308:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "14301:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14301:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "14296:1:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14130:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14133:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "14139:1:5",
                "type": ""
              }
            ],
            "src": "14099:217:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14373:116:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14432:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14434:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14434:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14434:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14404:1:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14397:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14397:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14390:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14390:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14412:1:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14423:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "14419:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14419:6:5"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14427:1:5"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "14415:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14415:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14409:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14409:21:5"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14386:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14386:45:5"
                  },
                  "nodeType": "YulIf",
                  "src": "14383:71:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14463:20:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14478:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14481:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "14474:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14474:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "14463:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14352:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14355:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "14361:7:5",
                "type": ""
              }
            ],
            "src": "14321:168:5"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_BillOutcome(value, pos)\n    {\n        if iszero(lt(value, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_struct$_Bill_$887_memory_ptr__to_t_struct$_Bill_$887_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), mload(value0))\n        let memberValue0 := mload(add(value0, 32))\n        let _1 := 0x0160\n        mstore(add(headStart, 64), _1)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 384))\n        let memberValue0_1 := mload(add(value0, 64))\n        let _2 := not(31)\n        mstore(add(headStart, 96), add(sub(tail_1, headStart), _2))\n        let tail_2 := abi_encode_string(memberValue0_1, tail_1)\n        let memberValue0_2 := mload(add(value0, 96))\n        abi_encode_address(memberValue0_2, add(headStart, 128))\n        mstore(add(headStart, 160), mload(add(value0, 128)))\n        let memberValue0_3 := mload(add(value0, 160))\n        mstore(add(headStart, 192), add(sub(tail_2, headStart), _2))\n        let tail_3 := abi_encode_string(memberValue0_3, tail_2)\n        let memberValue0_4 := mload(add(value0, 192))\n        mstore(add(headStart, 224), add(sub(tail_3, headStart), _2))\n        let tail_4 := abi_encode_string(memberValue0_4, tail_3)\n        let _3 := mload(add(value0, 224))\n        let _4 := 256\n        mstore(add(headStart, _4), _3)\n        let memberValue0_5 := mload(add(value0, _4))\n        let _5 := 288\n        mstore(add(headStart, _5), add(sub(tail_4, headStart), _2))\n        let tail_5 := abi_encode_string(memberValue0_5, tail_4)\n        let memberValue0_6 := mload(add(value0, _5))\n        let _6 := 320\n        mstore(add(headStart, _6), add(sub(tail_5, headStart), _2))\n        let tail_6 := abi_encode_string(memberValue0_6, tail_5)\n        let memberValue0_7 := mload(add(value0, _6))\n        abi_encode_enum_BillOutcome(memberValue0_7, add(headStart, _1))\n        tail := tail_6\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_enum$_BillOutcome_$891__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_BillOutcome(value0, headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_bytes32t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Commitment_$60_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Commitment_$60_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            let _4 := 0x60\n            mstore(add(pos, _4), iszero(iszero(mload(add(_3, _4)))))\n            pos := add(pos, 0x80)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_2282() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0160)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory(add(offset, 0x20), add(array_1, 0x20), _1)\n        array := array_1\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_enum_BillOutcome_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_Bill_$887_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0x0160) { revert(0, 0) }\n        let value := allocate_memory_2282()\n        mstore(value, mload(_2))\n        let offset_1 := mload(add(_2, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, 32), abi_decode_string_fromMemory(add(_2, offset_1), dataEnd))\n        let offset_2 := mload(add(_2, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 64), abi_decode_string_fromMemory(add(_2, offset_2), dataEnd))\n        mstore(add(value, 96), abi_decode_address_fromMemory(add(_2, 96)))\n        mstore(add(value, 128), mload(add(_2, 128)))\n        let offset_3 := mload(add(_2, 160))\n        if gt(offset_3, _1) { revert(0, 0) }\n        mstore(add(value, 160), abi_decode_string_fromMemory(add(_2, offset_3), dataEnd))\n        let offset_4 := mload(add(_2, 192))\n        if gt(offset_4, _1) { revert(0, 0) }\n        mstore(add(value, 192), abi_decode_string_fromMemory(add(_2, offset_4), dataEnd))\n        mstore(add(value, 224), mload(add(_2, 224)))\n        let _3 := 256\n        let offset_5 := mload(add(_2, _3))\n        if gt(offset_5, _1) { revert(0, 0) }\n        mstore(add(value, _3), abi_decode_string_fromMemory(add(_2, offset_5), dataEnd))\n        let _4 := 288\n        let offset_6 := mload(add(_2, _4))\n        if gt(offset_6, _1) { revert(0, 0) }\n        mstore(add(value, _4), abi_decode_string_fromMemory(add(_2, offset_6), dataEnd))\n        let _5 := 320\n        mstore(add(value, _5), abi_decode_enum_BillOutcome_fromMemory(add(_2, _5)))\n        value0 := value\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_fa758ddcd0691b1462c43f70c8d239a0ebb1235dbeb8532a26952b626fb1647b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"Commitment amount must be >= min\")\n        mstore(add(headStart, 96), \"imum commitment\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_82991fc044c2bd0bea42197f7c1960b35df518d3cdc9253e2195a4d5c8d5cf56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Specified bill not found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_747dc72168f8439c429b54742d6708b5364735cc5b535e1efd5a8ea232c7b1d8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Commitment is not valid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6c33a961069d5bf03ae6ed78e31473cca3cab60fdb6d3407dd96e8c0a73d9444__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Bill not open for commitment\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n}",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "263:11159:0:-:0;;;522:44;;;-1:-1:-1;;;;;;522:44:0;;;;;;572:69;;;;;;;;698:13;664:47;;763:1;731:33;;263:11159;;;;;;;;;-1:-1:-1;541:5:3;:18;;-1:-1:-1;;;;;;541:18:3;549:10;541:18;;;263:11159:0;;;;;;",
  "deployedSourceMap": "263:11159:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11310:110;;;;;;;;;;;;;:::i;:::-;;;179:14:5;;172:22;154:41;;142:2;127:18;11310:110:0;;;;;;;;1989:135;;;;;;;;;;-1:-1:-1;1989:135:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10747:230::-;;;;;;;;;;-1:-1:-1;10747:230:0;;;;;:::i;:::-;;:::i;10128:337::-;;;;;;;;;;-1:-1:-1;10128:337:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3111:707::-;;;;;;;;;;-1:-1:-1;3111:707:0;;;;;:::i;:::-;;:::i;:::-;;;;4027:25:5;;;4095:14;;4088:22;4083:2;4068:18;;4061:50;4000:18;3111:707:0;3859:258:5;4099:976:0;;;;;;:::i;:::-;;:::i;:::-;;2203:137;;;;;;;;;;;;;:::i;2726:::-;;;;;;;;;;-1:-1:-1;2726:137:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1752:121::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;279:20:3:-;;;;;;;;;;-1:-1:-1;279:20:3;;;;-1:-1:-1;;;;;279:20:3;;;;;;-1:-1:-1;;;;;6400:32:5;;;6382:51;;6370:2;6355:18;279:20:3;6236:203:5;2453:122:0;;;;;;;;;;;;;:::i;11097:98::-;;;;;;;;;;-1:-1:-1;11174:14:0;;-1:-1:-1;;;;;11174:14:0;11097:98;;899:188:3;;;;;;;;;;-1:-1:-1;899:188:3;;;;;:::i;:::-;;:::i;11310:110:0:-;11386:10;;:27;;;-1:-1:-1;;;11386:27:0;;;;11363:4;;-1:-1:-1;;;;;11386:10:0;;:25;;:27;;;;;;;;;;;;;;:10;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11379:34;;11310:110;:::o;1989:135::-;2044:27;;:::i;:::-;2090:10;;:27;;-1:-1:-1;;;2090:27:0;;;;;6840:25:5;;;-1:-1:-1;;;;;2090:10:0;;;;:18;;6813::5;;2090:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2090:27:0;;;;;;;;;;;;:::i;:::-;2083:34;1989:135;-1:-1:-1;;1989:135:0:o;10747:230::-;10825:4;706:5:3;;-1:-1:-1;;;;;706:5:3;692:10;:19;684:28;;;;;;10841:14:0::1;:31:::0;;-1:-1:-1;;;;;10841:31:0;::::1;-1:-1:-1::0;;;;;;10841:31:0;;::::1;::::0;::::1;::::0;;10882:10:::1;:44:::0;;;;::::1;::::0;::::1;::::0;;;10943:27:::1;::::0;;-1:-1:-1;;;10943:27:0;;;;10841:31;;10943:25:::1;::::0;:27;;::::1;::::0;::::1;::::0;;;;;;;10841:31;10943:27:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;722:1:3:-;10747:230:0::0;;;:::o;10128:337::-;10195:27;706:5:3;;-1:-1:-1;;;;;706:5:3;692:10;:19;684:28;;;;;;10235:29:0::1;10267:16;10275:7;10267;:16::i;:::-;10235:48:::0;-1:-1:-1;10311:35:0::1;10298:1;:9;;;:48;;;;;;;;:::i;:::-;;;:73;;;;-1:-1:-1::0;10351:20:0::1;::::0;;;:11:::1;:20;::::0;;;;;::::1;;10350:21;10298:73;10294:138;;;10387:34;10402:7;10411:1;:9;;;10387:14;:34::i;:::-;10449:9;;::::0;;10128:337;-1:-1:-1;;10128:337:0:o;3111:707::-;3176:11;3395:26;;;:17;:26;;;;;3176:11;;;3431:198;3452:18;;3448:22;;3431:198;;;3518:10;-1:-1:-1;;;;;3495:33:0;:11;3507:1;3495:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;3495:19:0;:33;3491:128;;3556:11;3568:1;3556:14;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;3579:11;3591:1;3579:14;;;;;;;;:::i;:::-;;;;;;;;;:24;:14;;;;;:24;;3548:56;;3579:24;;;;;-1:-1:-1;3111:707:0;-1:-1:-1;;;;3111:707:0:o;3491:128::-;3472:3;;;;:::i;:::-;;;;3431:198;;;-1:-1:-1;3802:1:0;;;;-1:-1:-1;3111:707:0;-1:-1:-1;;;3111:707:0:o;4099:976::-;4218:7;4205:9;:20;4197:29;;;;;;4312:17;;4299:9;:30;;4291:90;;;;-1:-1:-1;;;4291:90:0;;10851:2:5;4291:90:0;;;10833:21:5;10890:2;10870:18;;;10863:30;10929:34;10909:18;;;10902:62;-1:-1:-1;;;10980:18:5;;;10973:45;11035:19;;4291:90:0;;;;;;;;;4438:10;;:30;;-1:-1:-1;;;;;;4438:30:0;;;;;6840:25:5;;;-1:-1:-1;;;;;4438:10:0;;;;:21;;6813:18:5;;4438:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4430:67;;;;-1:-1:-1;;;4430:67:0;;11267:2:5;4430:67:0;;;11249:21:5;11306:2;11286:18;;;11279:30;11345:26;11325:18;;;11318:54;11389:18;;4430:67:0;11065:348:5;4430:67:0;4536:39;4555:10;4567:7;4536:18;:39::i;:::-;4528:75;;;;-1:-1:-1;;;4528:75:0;;11620:2:5;4528:75:0;;;11602:21:5;11659:2;11639:18;;;11632:30;11698:25;11678:18;;;11671:53;11741:18;;4528:75:0;11418:347:5;4528:75:0;4672:10;;:33;;-1:-1:-1;;;4672:33:0;;;;;6840:25:5;;;-1:-1:-1;;;;;4672:10:0;;;;:24;;6813:18:5;;4672:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4664:74;;;;-1:-1:-1;;;4664:74:0;;11972:2:5;4664:74:0;;;11954:21:5;12011:2;11991:18;;;11984:30;12050;12030:18;;;12023:58;12098:18;;4664:74:0;11770:352:5;4664:74:0;4783:32;4818:26;;;:17;:26;;;;;;;;4871:54;;;;;;;4882:10;4871:54;;;;;;;;;4903:9;4871:54;;;;;;;;;;;;;;;4854:72;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4854:72:0;-1:-1:-1;;;;;4854:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4854:72:0;;;;;;;;;;;5000:29;;;;;;;;;5039;;;;;;;;;;;;;-1:-1:-1;4099:976:0:o;2203:137::-;2253:27;;:::i;:::-;2299:10;;:34;;-1:-1:-1;;;2299:34:0;;:10;:34;;;154:41:5;-1:-1:-1;;;;;2299:10:0;;;;:28;;127:18:5;;2299:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2299:34:0;;;;;;;;;;;;:::i;2726:137::-;2792:19;2830:17;:26;2848:7;2830:26;;;;;;;;;;;2823:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2823:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2726:137;;;:::o;1752:121::-;1838:10;;:28;;;-1:-1:-1;;;1838:28:0;;;;1803:16;;-1:-1:-1;;;;;1838:10:0;;:26;;:28;;;;;:10;;:28;;;;;;;:10;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1838:28:0;;;;;;;;;;;;:::i;2453:122::-;2557:10;2539:29;;;;:17;:29;;;;;;;;;2532:36;;;;;;;;;;;;;;;;;2504:16;;2532:36;;;2539:29;2532:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:122;:::o;899:188:3:-;706:5;;-1:-1:-1;;;;;706:5:3;692:10;:19;684:28;;;;;;-1:-1:-1;;;;;979:22:3;::::1;971:31;;;::::0;::::1;;1038:5;::::0;;1017:37:::1;::::0;-1:-1:-1;;;;;1017:37:3;;::::1;::::0;1038:5;::::1;::::0;1017:37:::1;::::0;::::1;1064:5;:16:::0;;-1:-1:-1;;;;;;1064:16:3::1;-1:-1:-1::0;;;;;1064:16:3;;;::::1;::::0;;;::::1;::::0;;899:188::o;7248:2648:0:-;7365:35;7353:8;:47;;;;;;;;:::i;:::-;;7345:56;;;;;;7412:32;7447:26;;;:17;:26;;;;;7606:18;;7447:26;;7412:32;;;;;;;7595:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7595:30:0;;7571:54;;7689:6;7684:329;7705:18;;7701:22;;7684:329;;;7744:11;7758;7770:1;7758:14;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;7744:35;;7797:56;7818:8;7828:11;7840:1;7828:14;;;;;;;;:::i;:::-;;;;;;;;;:24;:14;;;;;:24;;;;7797:20;:56::i;:::-;7793:210;;;7888:24;:12;7905:6;7888:16;:24::i;:::-;7873:39;;7793:210;;;7965:23;:11;7981:6;7965:15;:23::i;:::-;7951:37;;7793:210;-1:-1:-1;7725:3:0;;;;:::i;:::-;;;;7684:329;;;-1:-1:-1;8033:29:0;:11;8049:12;8033:15;:29::i;:::-;8022:40;;8106:6;8101:984;8122:18;;8118:22;;8101:984;;;8177:37;8165:8;:49;;;;;;;;:::i;:::-;;8161:914;;8389:56;8410:8;8420:11;8432:1;8420:14;;;;;;;;:::i;8389:56::-;8385:247;;;8482:70;8499:12;8513:8;8523:11;8535:1;8523:14;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;8546:5;8482:16;:70::i;:::-;8469:7;8477:1;8469:10;;;;;;;;:::i;:::-;;;;;;:83;;;;;8161:914;;8385:247;8612:1;8599:7;8607:1;8599:10;;;;;;;;:::i;8161:914::-;8819:56;8840:8;8850:11;8862:1;8850:14;;;;;;;;:::i;8819:56::-;8815:246;;;8912:69;8929:12;8943:8;8953:11;8965:1;8953:14;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;8976:4;8912:16;:69::i;8815:246::-;9041:1;9028:7;9036:1;9028:10;;;;;;;;:::i;:::-;;;;;;:14;;;;;8815:246;8142:3;;;;:::i;:::-;;;;8101:984;;;-1:-1:-1;9134:21:0;9185:37;9173:8;:49;;;;;;;;:::i;:::-;;9169:156;;-1:-1:-1;9302:12:0;9169:156;9369:6;9364:168;9385:7;:14;9381:1;:18;9364:168;;;9424:7;9432:1;9424:10;;;;;;;;:::i;:::-;;;;;;;9438:1;9424:15;9420:102;;9459:48;9475:11;9487:1;9475:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;9496:10;;-1:-1:-1;;;;;9475:19:0;;;;9496:7;;9504:1;;9496:10;;;;;;:::i;:::-;;;;;;;9459:15;:48::i;:::-;9401:3;;;;:::i;:::-;;;;9364:168;;;-1:-1:-1;9580:21:0;;9576:167;;9635:10;;:41;;-1:-1:-1;;;9635:41:0;;;;;6840:25:5;;;9617:15:0;;-1:-1:-1;;;;;9635:10:0;;:32;;6813:18:5;;9635:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9617:59;;9690:42;9706:7;9715:16;9690:15;:42::i;:::-;9603:140;9576:167;9800:18;:16;:18::i;:::-;-1:-1:-1;;;9862:20:0;;;;-1:-1:-1;;9862:11:0;:20;;-1:-1:-1;;9862:20:0;;;:27;;-1:-1:-1;;9862:27:0;9885:4;9862:27;;;7248:2648::o;1226:421::-;-1:-1:-1;;;;;1360:24:0;;1308:4;1360:24;;;:17;:24;;;;;1398:22;;:26;1394:226;;1445:6;1440:170;1461:22;;1457:26;;1440:170;;;1534:7;1512:15;1528:1;1512:18;;;;;;;;:::i;:::-;;;;;;;;;:29;1508:88;;1572:5;1565:12;;;;;;1508:88;1485:3;;;;:::i;:::-;;;;1440:170;;;;1394:226;-1:-1:-1;1636:4:0;;1226:421;-1:-1:-1;;;1226:421:0:o;5431:524::-;5537:4;;5561:8;:47;;;;;;;;:::i;:::-;;5553:56;;;;;;5636:37;5624:8;:49;;;;;;;;:::i;:::-;;5620:329;;5693:9;5689:110;;;-1:-1:-1;5729:4:0;5722:11;;5689:110;-1:-1:-1;5779:5:0;5772:12;;5620:329;5833:9;5829:110;;;-1:-1:-1;5869:5:0;5862:12;;5829:110;-1:-1:-1;5920:4:0;5913:11;;1322:137:4;1380:9;1405:5;1409:1;1405;:5;:::i;:::-;1401:9;;1432:1;1427;:6;;1420:14;;;;:::i;6291:751:0:-;6423:4;;6466:35;:16;6487:13;6466:20;:35::i;:::-;6439:62;;6543:18;6579:15;6575:202;;;6666:16;6626:37;:12;6643:19;6626:16;:37::i;:::-;:56;;;;:::i;:::-;6610:72;;6575:202;;;6729:37;:12;6746:19;6729:16;:37::i;:::-;6713:53;;6575:202;6851:13;6868:1;6851:18;6847:82;;-1:-1:-1;6901:17:0;;6847:82;6992:43;7031:3;6992:34;7010:15;;6992:13;:17;;:34;;;;:::i;:::-;:38;;:43::i;:::-;6976:59;;:13;:59;:::i;:::-;6969:66;6291:751;-1:-1:-1;;;;;;;6291:751:0:o;5081:168::-;5158:42;;;5178:4;13959:34:5;;-1:-1:-1;;;;;14029:15:5;;14024:2;14009:18;;14002:43;14061:18;;;14054:34;;;5158:42:0;;13909:2:5;13894:18;5158:42:0;;;;;;;5210:32;;-1:-1:-1;;;;;5210:23:0;;;:32;;;;;5234:7;;5210:32;;;;5234:7;5210:23;:32;;;;;;;;;;;;;;;;;;;;;5081:168;;:::o;5255:170::-;5333:5;;5306:56;;;5326:4;13959:34:5;;-1:-1:-1;;;;;5333:5:0;;;14024:2:5;14009:18;;14002:43;5340:21:0;14061:18:5;;;14054:34;5306:56:0;;;;;;13909:2:5;5306:56:0;;;5380:5;;;5372:46;;-1:-1:-1;;;;;5380:5:0;;;;5396:21;5372:46;;;;;5396:21;;5372:46;5380:5;5372:46;5396:21;5380:5;5372:46;;;;;;;;;;;;;;;;;;;;;5255:170::o;722:290:4:-;780:7;1000:5;1004:1;1000;:5;:::i;:::-;993:12;722:290;-1:-1:-1;;;722:290:4:o;219:413::-;277:9;519:1;524;519:6;515:45;;-1:-1:-1;548:1:4;541:8;;515:45;574:5;578:1;574;:5;:::i;:::-;570:9;-1:-1:-1;605:1:4;596:5;600:1;570:9;596:5;:::i;:::-;:10;589:18;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;206:180:5:-;265:6;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;-1:-1:-1;357:23:5;;206:180;-1:-1:-1;206:180:5:o;391:258::-;463:1;473:113;487:6;484:1;481:13;473:113;;;563:11;;;557:18;544:11;;;537:39;509:2;502:10;473:113;;;604:6;601:1;598:13;595:48;;;639:1;630:6;625:3;621:16;614:27;595:48;;391:258;;;:::o;654:::-;696:3;734:5;728:12;761:6;756:3;749:19;777:63;833:6;826:4;821:3;817:14;810:4;803:5;799:16;777:63;:::i;:::-;894:2;873:15;-1:-1:-1;;869:29:5;860:39;;;;901:4;856:50;;654:258;-1:-1:-1;;654:258:5:o;1026:127::-;1087:10;1082:3;1078:20;1075:1;1068:31;1118:4;1115:1;1108:15;1142:4;1139:1;1132:15;1158:239;1241:1;1234:5;1231:12;1221:143;;1286:10;1281:3;1277:20;1274:1;1267:31;1321:4;1318:1;1311:15;1349:4;1346:1;1339:15;1221:143;1373:18;;1158:239::o;1402:1848::-;1573:2;1562:9;1555:21;1618:6;1612:13;1607:2;1596:9;1592:18;1585:41;1536:4;1673:2;1665:6;1661:15;1655:22;1696:6;1738:2;1733;1722:9;1718:18;1711:30;1764:52;1811:3;1800:9;1796:19;1782:12;1764:52;:::i;:::-;1750:66;;1865:2;1857:6;1853:15;1847:22;1892:2;1888:7;1959:2;1947:9;1939:6;1935:22;1931:31;1926:2;1915:9;1911:18;1904:59;1986:41;2020:6;2004:14;1986:41;:::i;:::-;1972:55;;2076:2;2068:6;2064:15;2058:22;2036:44;;2089:55;2139:3;2128:9;2124:19;2108:14;-1:-1:-1;;;;;983:31:5;971:44;;917:104;2089:55;2199:3;2191:6;2187:16;2181:23;2175:3;2164:9;2160:19;2153:52;2254:3;2246:6;2242:16;2236:23;2214:45;;2324:2;2312:9;2304:6;2300:22;2296:31;2290:3;2279:9;2275:19;2268:60;2351:41;2385:6;2369:14;2351:41;:::i;:::-;2337:55;;2441:3;2433:6;2429:16;2423:23;2401:45;;2511:2;2499:9;2491:6;2487:22;2483:31;2477:3;2466:9;2462:19;2455:60;2538:41;2572:6;2556:14;2538:41;:::i;:::-;2524:55;;2616:3;2608:6;2604:16;2598:23;2588:33;;2640:3;2679:2;2674;2663:9;2659:18;2652:30;2731:2;2723:6;2719:15;2713:22;2691:44;;;2754:3;2821:2;2809:9;2801:6;2797:22;2793:31;2788:2;2777:9;2773:18;2766:59;2848:41;2882:6;2866:14;2848:41;:::i;:::-;2834:55;;2938:2;2930:6;2926:15;2920:22;2898:44;;;2961:3;3028:2;3016:9;3008:6;3004:22;3000:31;2995:2;2984:9;2980:18;2973:59;3055:41;3089:6;3073:14;3055:41;:::i;:::-;3041:55;;3145:2;3137:6;3133:15;3127:22;3105:44;;;;3158:63;3217:2;3206:9;3202:18;3186:14;3158:63;:::i;:::-;-1:-1:-1;3238:6:5;;1402:1848;-1:-1:-1;;;;1402:1848:5:o;3255:131::-;-1:-1:-1;;;;;3330:31:5;;3320:42;;3310:70;;3376:1;3373;3366:12;3391:247;3450:6;3503:2;3491:9;3482:7;3478:23;3474:32;3471:52;;;3519:1;3516;3509:12;3471:52;3558:9;3545:23;3577:31;3602:5;3577:31;:::i;3643:211::-;3790:2;3775:18;;3802:46;3779:9;3830:6;3802:46;:::i;4122:118::-;4208:5;4201:13;4194:21;4187:5;4184:32;4174:60;;4230:1;4227;4220:12;4245:377;4319:6;4327;4335;4388:2;4376:9;4367:7;4363:23;4359:32;4356:52;;;4404:1;4401;4394:12;4356:52;4440:9;4427:23;4417:33;;4497:2;4486:9;4482:18;4469:32;4459:42;;4551:2;4540:9;4536:18;4523:32;4564:28;4586:5;4564:28;:::i;:::-;4611:5;4601:15;;;4245:377;;;;;:::o;4627:967::-;4850:2;4902:21;;;4972:13;;4875:18;;;4994:22;;;4821:4;;4850:2;5035;;5053:18;;;;5094:15;;;4821:4;5137:431;5151:6;5148:1;5145:13;5137:431;;;5210:13;;5252:9;;-1:-1:-1;;;;;5248:35:5;5236:48;;5324:11;;;5318:18;5304:12;;;5297:40;5377:11;;;5371:18;5357:12;;;5350:40;5413:4;5471:11;;;5465:18;5458:26;5451:34;5437:12;;;5430:56;5515:4;5506:14;;;;5543:15;;;;5280:1;5166:9;5137:431;;;-1:-1:-1;5585:3:5;;4627:967;-1:-1:-1;;;;;;;4627:967:5:o;5599:632::-;5770:2;5822:21;;;5892:13;;5795:18;;;5914:22;;;5741:4;;5770:2;5993:15;;;;5967:2;5952:18;;;5741:4;6036:169;6050:6;6047:1;6044:13;6036:169;;;6111:13;;6099:26;;6180:15;;;;6145:12;;;;6072:1;6065:9;6036:169;;;-1:-1:-1;6222:3:5;;5599:632;-1:-1:-1;;;;;;5599:632:5:o;6444:245::-;6511:6;6564:2;6552:9;6543:7;6539:23;6535:32;6532:52;;;6580:1;6577;6570:12;6532:52;6612:9;6606:16;6631:28;6653:5;6631:28;:::i;6876:127::-;6937:10;6932:3;6928:20;6925:1;6918:31;6968:4;6965:1;6958:15;6992:4;6989:1;6982:15;7008:255;7080:2;7074:9;7122:6;7110:19;;7159:18;7144:34;;7180:22;;;7141:62;7138:88;;;7206:18;;:::i;:::-;7242:2;7235:22;7008:255;:::o;7268:275::-;7339:2;7333:9;7404:2;7385:13;;-1:-1:-1;;7381:27:5;7369:40;;7439:18;7424:34;;7460:22;;;7421:62;7418:88;;;7486:18;;:::i;:::-;7522:2;7515:22;7268:275;;-1:-1:-1;7268:275:5:o;7548:497::-;7602:5;7655:3;7648:4;7640:6;7636:17;7632:27;7622:55;;7673:1;7670;7663:12;7622:55;7702:6;7696:13;7728:18;7724:2;7721:26;7718:52;;;7750:18;;:::i;:::-;7794:55;7837:2;7818:13;;-1:-1:-1;;7814:27:5;7843:4;7810:38;7794:55;:::i;:::-;7874:2;7865:7;7858:19;7920:3;7913:4;7908:2;7900:6;7896:15;7892:26;7889:35;7886:55;;;7937:1;7934;7927:12;7886:55;7950:64;8011:2;8004:4;7995:7;7991:18;7984:4;7976:6;7972:17;7950:64;:::i;:::-;8032:7;7548:497;-1:-1:-1;;;;7548:497:5:o;8050:138::-;8129:13;;8151:31;8129:13;8151:31;:::i;8193:156::-;8281:13;;8323:1;8313:12;;8303:40;;8339:1;8336;8329:12;8354:1886;8445:6;8498:2;8486:9;8477:7;8473:23;8469:32;8466:52;;;8514:1;8511;8504:12;8466:52;8547:9;8541:16;8576:18;8617:2;8609:6;8606:14;8603:34;;;8633:1;8630;8623:12;8603:34;8656:22;;;;8712:6;8694:16;;;8690:29;8687:49;;;8732:1;8729;8722:12;8687:49;8758:22;;:::i;:::-;8809:2;8803:9;8796:5;8789:24;8852:2;8848;8844:11;8838:18;8881:2;8871:8;8868:16;8865:36;;;8897:1;8894;8887:12;8865:36;8933:56;8981:7;8970:8;8966:2;8962:17;8933:56;:::i;:::-;8928:2;8921:5;8917:14;8910:80;;9029:2;9025;9021:11;9015:18;9058:2;9048:8;9045:16;9042:36;;;9074:1;9071;9064:12;9042:36;9110:56;9158:7;9147:8;9143:2;9139:17;9110:56;:::i;:::-;9105:2;9098:5;9094:14;9087:80;;9199:42;9237:2;9233;9229:11;9199:42;:::i;:::-;9194:2;9187:5;9183:14;9176:66;9289:3;9285:2;9281:12;9275:19;9269:3;9262:5;9258:15;9251:44;9334:3;9330:2;9326:12;9320:19;9364:2;9354:8;9351:16;9348:36;;;9380:1;9377;9370:12;9348:36;9417:56;9465:7;9454:8;9450:2;9446:17;9417:56;:::i;:::-;9411:3;9404:5;9400:15;9393:81;;9513:3;9509:2;9505:12;9499:19;9543:2;9533:8;9530:16;9527:36;;;9559:1;9556;9549:12;9527:36;9596:56;9644:7;9633:8;9629:2;9625:17;9596:56;:::i;:::-;9590:3;9583:5;9579:15;9572:81;;9700:3;9696:2;9692:12;9686:19;9680:3;9673:5;9669:15;9662:44;9725:3;9767:2;9763;9759:11;9753:18;9796:2;9786:8;9783:16;9780:36;;;9812:1;9809;9802:12;9780:36;9848:56;9896:7;9885:8;9881:2;9877:17;9848:56;:::i;:::-;9843:2;9836:5;9832:14;9825:80;;;9924:3;9966:2;9962;9958:11;9952:18;9995:2;9985:8;9982:16;9979:36;;;10011:1;10008;10001:12;9979:36;10047:56;10095:7;10084:8;10080:2;10076:17;10047:56;:::i;:::-;10042:2;10035:5;10031:14;10024:80;;;10123:3;10113:13;;10158:51;10205:2;10201;10197:11;10158:51;:::i;:::-;10142:14;;;10135:75;;;;10146:5;8354:1886;-1:-1:-1;;;;8354:1886:5:o;10245:127::-;10306:10;10301:3;10297:20;10294:1;10287:31;10337:4;10334:1;10327:15;10361:4;10358:1;10351:15;10377:127;10438:10;10433:3;10429:20;10426:1;10419:31;10469:4;10466:1;10459:15;10493:4;10490:1;10483:15;10509:135;10548:3;10569:17;;;10566:43;;10589:18;;:::i;:::-;-1:-1:-1;10636:1:5;10625:13;;10509:135::o;12127:936::-;12222:6;12253:2;12296;12284:9;12275:7;12271:23;12267:32;12264:52;;;12312:1;12309;12302:12;12264:52;12345:9;12339:16;12374:18;12415:2;12407:6;12404:14;12401:34;;;12431:1;12428;12421:12;12401:34;12469:6;12458:9;12454:22;12444:32;;12514:7;12507:4;12503:2;12499:13;12495:27;12485:55;;12536:1;12533;12526:12;12485:55;12565:2;12559:9;12587:2;12583;12580:10;12577:36;;;12593:18;;:::i;:::-;12639:2;12636:1;12632:10;12622:20;;12662:28;12686:2;12682;12678:11;12662:28;:::i;:::-;12724:15;;;12794:11;;;12790:20;;;12755:12;;;;12822:19;;;12819:39;;;12854:1;12851;12844:12;12819:39;12878:11;;;;12898:135;12914:6;12909:3;12906:15;12898:135;;;12980:10;;12968:23;;12931:12;;;;13011;;;;12898:135;;;13052:5;12127:936;-1:-1:-1;;;;;;;;12127:936:5:o;13068:251::-;13138:6;13191:2;13179:9;13170:7;13166:23;13162:32;13159:52;;;13207:1;13204;13197:12;13159:52;13239:9;13233:16;13258:31;13283:5;13258:31;:::i;13324:128::-;13364:3;13395:1;13391:6;13388:1;13385:13;13382:39;;;13401:18;;:::i;:::-;-1:-1:-1;13437:9:5;;13324:128::o;13457:127::-;13518:10;13513:3;13509:20;13506:1;13499:31;13549:4;13546:1;13539:15;13573:4;13570:1;13563:15;13589:125;13629:4;13657:1;13654;13651:8;13648:34;;;13662:18;;:::i;:::-;-1:-1:-1;13699:9:5;;13589:125::o;14099:217::-;14139:1;14165;14155:132;;14209:10;14204:3;14200:20;14197:1;14190:31;14244:4;14241:1;14234:15;14272:4;14269:1;14262:15;14155:132;-1:-1:-1;14301:9:5;;14099:217::o;14321:168::-;14361:7;14427:1;14423;14419:6;14415:14;14412:1;14409:21;14404:1;14397:9;14390:17;14386:45;14383:71;;;14434:18;;:::i;:::-;-1:-1:-1;14474:9:5;;14321:168::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./OracleInterface.sol\";\nimport \"./Ownable.sol\";\nimport \"./SafeMath.sol\";\n\n/// @title Commitments\n/// @author Oliver Song\n/// @notice Takes commitments and handles payouts for bill outcomes\ncontract Commitments is Ownable {\n    // mappings\n    mapping(address => bytes32[]) private userToCommitments;\n    mapping(bytes32 => Commitment[]) private billToCommitments;\n    mapping(bytes32 => bool) internal billPaidOut;\n\n    // bill outcomes oracle\n    address internal billOracleAddr = address(0);\n    OracleInterface internal billOracle = OracleInterface(billOracleAddr);\n\n    //constants\n    uint internal minimumCommitment = 1000000000000;  // 1000 gwei\n    uint internal housePercentage = 2;\n\n    event Transferral(address, address, uint);\n\n    using SafeMath for uint;\n\n    struct Commitment {\n        address user;\n        bytes32 billId;\n        uint amount;\n        bool inSupport;\n    }\n\n    /// @notice determines whether or not the user has already committed to the given bill\n    /// @param _user address of a user\n    /// @param _billId id of a bill\n    /// @return true if the given user has already placed a commitment on the given bill\n    function _commitmentIsValid(address _user, bytes32 _billId) private view returns (bool) {\n        bytes32[] storage userCommitments = userToCommitments[_user];\n        if (userCommitments.length > 0) {\n            for (uint n = 0; n < userCommitments.length; n++) {\n                if (userCommitments[n] == _billId) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    /// @notice gets a list ids of all currently commitable bill\n    /// @return array of bill ids\n    function getCommitableBills() public view returns (bytes32[] memory) {\n        return billOracle.getPendingBills();\n    }\n\n    /// @notice returns the full data of the specified bill\n    /// @param _billId the id of the desired bill\n    function getBill(bytes32 _billId) public view returns (OracleInterface.Bill memory) {\n        return billOracle.getBill(_billId);\n    }\n\n    /// @notice returns the full data of the most recent commitable bill\n    function getMostRecentBill() public view returns (OracleInterface.Bill memory) {\n        return billOracle.getMostRecentBill(true);\n    }\n\n    /// @notice gets the current bills on which the user has commitments\n    /// @return array of bill ids\n    function getUserCommitments() public view returns (bytes32[] memory) {\n        return userToCommitments[msg.sender];\n    }\n\n    /// @notice gets the current commitments for the bill\n    /// @param _billId the id of the desired bill\n    /// @return array of Commitments\n    function getBillCommitments(bytes32 _billId) public view returns (Commitment[] memory) {\n        return billToCommitments[_billId];\n    }\n\n    /// @notice gets a user's commitment\n    /// @param _billId the id of the desired bill\n    /// @return amount commitment amount, or 0 if no commitment found\n    /// @return inSupport in support of bill or not, or 0 if no commitment found\n    function getUserCommitment(bytes32 _billId) public view returns (uint amount, bool inSupport) {\n        // FIXME: perhaps should iterate through usercommitments instead\n        // actually, probably shouldn't be iterating at all if possible\n        Commitment[] storage commitments = billToCommitments[_billId];\n        for (uint n = 0; n < commitments.length; n++) {\n            if (commitments[n].user == msg.sender) {\n                return (commitments[n].amount, commitments[n].inSupport);\n            }\n        }\n        // FIXME could gate this with a require and instead\n        // add a method \"userHasCommitment\".\n        // Could also gate billid on existing bill\n        return (0, false);\n    }\n\n    /// @notice places a non-rescindable commitment on the given bill\n    /// @param _amount the id of the bill on which to commitment\n    /// @param _billId the id of the bill on which to commitment\n    /// @param _inSupport commitment in favor of bill passing (vs against)\n    function placeCommitment(uint _amount, bytes32 _billId, bool _inSupport) public payable {\n        require(msg.value == _amount);\n\n        // commitment must be above a certain minimum\n        require(msg.value >= minimumCommitment, \"Commitment amount must be >= minimum commitment\");\n\n        // make sure that bill exists\n        require(billOracle.billExists(_billId), \"Specified bill not found\");\n\n        // validate\n        require(_commitmentIsValid(msg.sender, _billId), \"Commitment is not valid\");\n\n        // bill must still be open for commitment\n        require(billOracle.billIsPending(_billId), \"Bill not open for commitment\");\n\n        // add the new commitment\n        Commitment[] storage commitments = billToCommitments[_billId];\n        commitments.push(Commitment(msg.sender, _billId, msg.value, _inSupport));\n\n        // add the mapping\n        bytes32[] storage userCommitments = userToCommitments[msg.sender];\n        userCommitments.push(_billId);\n    }\n\n    function _payOutWinnings(address _user, uint _amount) private {\n        emit Transferral(address(this), _user, _amount);\n        payable(_user).transfer(_amount);\n    }\n\n    function _transferToHouse() private {\n        emit Transferral(address(this), owner, address(this).balance);\n        payable(owner).transfer(address(this).balance);\n    }\n\n    function _isWinningCommitment(OracleInterface.BillOutcome _outcome, bool inSupport) private pure returns (bool) {\n        require(_outcome != OracleInterface.BillOutcome.Pending);\n\n        if (_outcome == OracleInterface.BillOutcome.BecameLaw) {\n            if (inSupport) {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            if (inSupport) {\n                return false;\n            } else {\n                return true;\n            }\n        }\n    }\n\n    /// @notice calculates the amount to be paid out for a commitment\n    /// @param _winningTotal the total monetary amount of winning commitments\n    /// @param _losingTotal the total monetary amount of losing commitments\n    /// @param _committedAmount the amount of this particular commitment\n    /// @return an amount in wei\n    function _calculatePayout(uint _winningTotal, uint _losingTotal, uint _committedAmount, bool _keepCommitment) private view returns (uint) {\n        uint percentWinningTotal = _committedAmount.div(_winningTotal);\n\n        // calculate raw share\n        uint winningAmount = 0;\n        if (_keepCommitment) {\n            winningAmount = _losingTotal.mul(percentWinningTotal) + _committedAmount;\n        } else {\n            winningAmount = _losingTotal.mul(percentWinningTotal);\n        }\n\n        // if share has been rounded down to zero, fix that\n        if (winningAmount == 0) {\n            winningAmount = minimumCommitment;\n        }\n\n        // take out house cut\n        return winningAmount - winningAmount.mul(housePercentage).div(100);\n    }\n\n    /// @notice calculates how much to pay out to each winner, then pays each winner the appropriate amount\n    /// @param _billId the unique id of the bill\n    /// @param _outcome the bill's outcome\n    function _payOutForBill(bytes32 _billId, OracleInterface.BillOutcome _outcome) private {\n        require(_outcome != OracleInterface.BillOutcome.Pending);\n\n        Commitment[] storage commitments = billToCommitments[_billId];\n        uint losingTotal = 0;\n        uint winningTotal = 0;\n        uint totalPot = 0;\n        uint[] memory payouts = new uint[](commitments.length);\n\n        //count winning commitments & get total\n        for (uint n = 0; n < commitments.length; n++) {\n            uint amount = commitments[n].amount;\n            if (_isWinningCommitment(_outcome, commitments[n].inSupport)) {\n                winningTotal = winningTotal.add(amount);\n            } else {\n                losingTotal = losingTotal.add(amount);\n            }\n        }\n        totalPot = losingTotal.add(winningTotal);\n\n        //calculate payouts\n        for (uint n = 0; n < commitments.length; n++) {\n            if (_outcome == OracleInterface.BillOutcome.BecameLaw) {\n                // in the passing case, supporters get detractors' commitments\n                // minus their own commitment, which goes to legislator\n                if (_isWinningCommitment(_outcome, commitments[n].inSupport)) {\n                    payouts[n] = _calculatePayout(winningTotal, totalPot, commitments[n].amount, false);\n                } else {\n                    payouts[n] = 0;\n                }\n            } else {\n                // in the rejected case, detractors get supporters' commitments\n                // plus their own back. Legislators get nothing.\n                if (_isWinningCommitment(_outcome, commitments[n].inSupport)) {\n                    payouts[n] = _calculatePayout(winningTotal, totalPot, commitments[n].amount, true);\n                } else {\n                    payouts[n] = 0;\n                }\n            }\n        }\n\n        // calculate legislator payout\n        uint legislatorPayout = 0;\n        if (_outcome == OracleInterface.BillOutcome.BecameLaw) {\n            // legislator gets support total\n            legislatorPayout = winningTotal;\n        }\n\n\n        // pay out to users\n        for (uint n = 0; n < payouts.length; n++) {\n            if (payouts[n] != 0) {\n                _payOutWinnings(commitments[n].user, payouts[n]);\n            }\n        }\n\n        // pay out to legislators\n        if (legislatorPayout != 0) {\n            address sponsor = billOracle.getBillSponsorAddress(_billId);\n            _payOutWinnings(sponsor, legislatorPayout);\n        }\n\n        // transfer the remainder to the house\n        _transferToHouse();\n\n        // mark bill as paid out\n        billPaidOut[_billId] = true;\n    }\n\n\n    /// @notice check the outcome of the given bill; if ready, will trigger calculation of payout, and actual payout to winners\n    /// @param _billId the id of the bill to check\n    /// @return the outcome of the given bill\n    function checkOutcome(bytes32 _billId) external onlyOwner returns (OracleInterface.BillOutcome)  {\n        OracleInterface.Bill memory b = getBill(_billId);\n\n        if (b.outcome != OracleInterface.BillOutcome.Pending && !billPaidOut[_billId]) {\n            _payOutForBill(_billId, b.outcome);\n        }\n\n        return b.outcome;\n    }\n\n\n    /// @notice sets the address of the oracle contract to use\n    /// @dev setting a wrong address may result in false return value, or error\n    /// @param _oracleAddress the address of the oracle\n    /// @return true if connection to the new oracle address was successful\n    function setOracleAddress(address _oracleAddress) external onlyOwner returns (bool) {\n        billOracleAddr = _oracleAddress;\n        billOracle = OracleInterface(billOracleAddr);\n        return billOracle.testConnection();\n    }\n\n    /// @notice gets the address of the oracle being used\n    /// @return the address of the currently set oracle\n    function getOracleAddress() external view returns (address) {\n        return billOracleAddr;\n    }\n\n    /// @notice for testing; tests that the oracle is callable\n    /// @return true if connection successful\n    function testOracleConnection() public view returns (bool) {\n        return billOracle.testConnection();\n    }\n}\n",
  "sourcePath": "/Users/oliversong/Development/open-lobby/client/contracts/Commitments.sol",
  "ast": {
    "absolutePath": "project:/contracts/Commitments.sol",
    "exportedSymbols": {
      "Commitments": [
        828
      ],
      "OracleInterface": [
        946
      ],
      "Ownable": [
        1007
      ],
      "SafeMath": [
        1106
      ]
    },
    "id": 829,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "absolutePath": "project:/contracts/OracleInterface.sol",
        "file": "./OracleInterface.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 829,
        "sourceUnit": 947,
        "src": "66:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 829,
        "sourceUnit": 1008,
        "src": "98:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 829,
        "sourceUnit": 1107,
        "src": "122:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1007,
              "src": "287:7:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "287:7:0"
          }
        ],
        "canonicalName": "Commitments",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "148:115:0",
          "text": "@title Commitments\n @author Oliver Song\n @notice Takes commitments and handles payouts for bill outcomes"
        },
        "fullyImplemented": true,
        "id": 828,
        "linearizedBaseContracts": [
          828,
          1007
        ],
        "name": "Commitments",
        "nameLocation": "272:11:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "userToCommitments",
            "nameLocation": "355:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 828,
            "src": "317:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
              "typeString": "mapping(address => bytes32[])"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 8,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "325:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "317:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                "typeString": "mapping(address => bytes32[])"
              },
              "valueType": {
                "baseType": {
                  "id": 9,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "336:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "id": 10,
                "nodeType": "ArrayTypeName",
                "src": "336:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 18,
            "mutability": "mutable",
            "name": "billToCommitments",
            "nameLocation": "419:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 828,
            "src": "378:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct Commitments.Commitment[])"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 13,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "386:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "378:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct Commitments.Commitment[])"
              },
              "valueType": {
                "baseType": {
                  "id": 15,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 14,
                    "name": "Commitment",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 60,
                    "src": "397:10:0"
                  },
                  "referencedDeclaration": 60,
                  "src": "397:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Commitment_$60_storage_ptr",
                    "typeString": "struct Commitments.Commitment"
                  }
                },
                "id": 16,
                "nodeType": "ArrayTypeName",
                "src": "397:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                  "typeString": "struct Commitments.Commitment[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "billPaidOut",
            "nameLocation": "476:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 828,
            "src": "442:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 19,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "450:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "442:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 20,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "461:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "billOracleAddr",
            "nameLocation": "539:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 828,
            "src": "522:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "522:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 26,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "564:1:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 25,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "556:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 24,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "556:7:0",
                  "typeDescriptions": {}
                }
              },
              "id": 27,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "556:10:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 34,
            "mutability": "mutable",
            "name": "billOracle",
            "nameLocation": "597:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 828,
            "src": "572:69:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OracleInterface_$946",
              "typeString": "contract OracleInterface"
            },
            "typeName": {
              "id": 30,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29,
                "name": "OracleInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 946,
                "src": "572:15:0"
              },
              "referencedDeclaration": 946,
              "src": "572:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OracleInterface_$946",
                "typeString": "contract OracleInterface"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 32,
                  "name": "billOracleAddr",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28,
                  "src": "626:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 31,
                "name": "OracleInterface",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 946,
                "src": "610:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_OracleInterface_$946_$",
                  "typeString": "type(contract OracleInterface)"
                }
              },
              "id": 33,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "610:31:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OracleInterface_$946",
                "typeString": "contract OracleInterface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 37,
            "mutability": "mutable",
            "name": "minimumCommitment",
            "nameLocation": "678:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 828,
            "src": "664:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 35,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "664:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030303030303030",
              "id": 36,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "698:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              },
              "value": "1000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 40,
            "mutability": "mutable",
            "name": "housePercentage",
            "nameLocation": "745:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 828,
            "src": "731:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "731:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 39,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "763:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "070ded6608617d161bf9727e9573e5b793a0bc0cff5c7029cf2e78afe1d471ec",
            "id": 48,
            "name": "Transferral",
            "nameLocation": "777:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "789:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "798:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "798:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "807:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "807:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "788:24:0"
            },
            "src": "771:42:0"
          },
          {
            "global": false,
            "id": 51,
            "libraryName": {
              "id": 49,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1106,
              "src": "825:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "819:24:0",
            "typeName": {
              "id": 50,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "838:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Commitments.Commitment",
            "id": 60,
            "members": [
              {
                "constant": false,
                "id": 53,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "885:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 60,
                "src": "877:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 52,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "877:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 55,
                "mutability": "mutable",
                "name": "billId",
                "nameLocation": "907:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 60,
                "src": "899:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 54,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "899:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "928:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 60,
                "src": "923:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 56,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "923:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "inSupport",
                "nameLocation": "949:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 60,
                "src": "944:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 58,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "944:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Commitment",
            "nameLocation": "856:10:0",
            "nodeType": "StructDefinition",
            "scope": 828,
            "src": "849:116:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "1314:333:0",
              "statements": [
                {
                  "assignments": [
                    74
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 74,
                      "mutability": "mutable",
                      "name": "userCommitments",
                      "nameLocation": "1342:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 109,
                      "src": "1324:33:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 72,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1324:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 73,
                        "nodeType": "ArrayTypeName",
                        "src": "1324:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78,
                  "initialValue": {
                    "baseExpression": {
                      "id": 75,
                      "name": "userToCommitments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1360:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                        "typeString": "mapping(address => bytes32[] storage ref)"
                      }
                    },
                    "id": 77,
                    "indexExpression": {
                      "id": 76,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "1378:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1360:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1324:60:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 79,
                        "name": "userCommitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1398:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[] storage pointer"
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1398:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1423:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1398:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 106,
                  "nodeType": "IfStatement",
                  "src": "1394:226:0",
                  "trueBody": {
                    "id": 105,
                    "nodeType": "Block",
                    "src": "1426:194:0",
                    "statements": [
                      {
                        "body": {
                          "id": 103,
                          "nodeType": "Block",
                          "src": "1490:120:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 98,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 94,
                                    "name": "userCommitments",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74,
                                    "src": "1512:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                      "typeString": "bytes32[] storage pointer"
                                    }
                                  },
                                  "id": 96,
                                  "indexExpression": {
                                    "id": 95,
                                    "name": "n",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 84,
                                    "src": "1528:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1512:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 97,
                                  "name": "_billId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65,
                                  "src": "1534:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "1512:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 102,
                              "nodeType": "IfStatement",
                              "src": "1508:88:0",
                              "trueBody": {
                                "id": 101,
                                "nodeType": "Block",
                                "src": "1543:53:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "hexValue": "66616c7365",
                                      "id": 99,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1572:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "false"
                                    },
                                    "functionReturnParameters": 69,
                                    "id": 100,
                                    "nodeType": "Return",
                                    "src": "1565:12:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87,
                            "name": "n",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1457:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 88,
                              "name": "userCommitments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "1461:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[] storage pointer"
                              }
                            },
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1461:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1457:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 104,
                        "initializationExpression": {
                          "assignments": [
                            84
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 84,
                              "mutability": "mutable",
                              "name": "n",
                              "nameLocation": "1450:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 104,
                              "src": "1445:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 83,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1445:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 86,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 85,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1454:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1445:10:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 92,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1485:3:0",
                            "subExpression": {
                              "id": 91,
                              "name": "n",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84,
                              "src": "1485:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 93,
                          "nodeType": "ExpressionStatement",
                          "src": "1485:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "1440:170:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1636:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 69,
                  "id": 108,
                  "nodeType": "Return",
                  "src": "1629:11:0"
                }
              ]
            },
            "documentation": {
              "id": 61,
              "nodeType": "StructuredDocumentation",
              "src": "971:250:0",
              "text": "@notice determines whether or not the user has already committed to the given bill\n @param _user address of a user\n @param _billId id of a bill\n @return true if the given user has already placed a commitment on the given bill"
            },
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_commitmentIsValid",
            "nameLocation": "1235:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "1262:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1254:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_billId",
                  "nameLocation": "1277:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1269:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1253:32:0"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1308:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1308:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1307:6:0"
            },
            "scope": 828,
            "src": "1226:421:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "1821:52:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 117,
                        "name": "billOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1838:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleInterface_$946",
                          "typeString": "contract OracleInterface"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPendingBills",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 897,
                      "src": "1838:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (bytes32[] memory)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1838:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "functionReturnParameters": 116,
                  "id": 120,
                  "nodeType": "Return",
                  "src": "1831:35:0"
                }
              ]
            },
            "documentation": {
              "id": 111,
              "nodeType": "StructuredDocumentation",
              "src": "1653:94:0",
              "text": "@notice gets a list ids of all currently commitable bill\n @return array of bill ids"
            },
            "functionSelector": "7bef7ce1",
            "id": 122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCommitableBills",
            "nameLocation": "1761:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1779:2:0"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1803:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 113,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1803:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 114,
                    "nodeType": "ArrayTypeName",
                    "src": "1803:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1802:18:0"
            },
            "scope": 828,
            "src": "1752:121:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "2073:51:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 133,
                        "name": "_billId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 125,
                        "src": "2109:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 131,
                        "name": "billOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "2090:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleInterface_$946",
                          "typeString": "contract OracleInterface"
                        }
                      },
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getBill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 925,
                      "src": "2090:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Bill_$887_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct OracleInterface.Bill memory)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2090:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bill_$887_memory_ptr",
                      "typeString": "struct OracleInterface.Bill memory"
                    }
                  },
                  "functionReturnParameters": 130,
                  "id": 135,
                  "nodeType": "Return",
                  "src": "2083:34:0"
                }
              ]
            },
            "documentation": {
              "id": 123,
              "nodeType": "StructuredDocumentation",
              "src": "1879:105:0",
              "text": "@notice returns the full data of the specified bill\n @param _billId the id of the desired bill"
            },
            "functionSelector": "342c196c",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBill",
            "nameLocation": "1998:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 125,
                  "mutability": "mutable",
                  "name": "_billId",
                  "nameLocation": "2014:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2006:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 124,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2005:17:0"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 137,
                  "src": "2044:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Bill_$887_memory_ptr",
                    "typeString": "struct OracleInterface.Bill"
                  },
                  "typeName": {
                    "id": 128,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 127,
                      "name": "OracleInterface.Bill",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 887,
                      "src": "2044:20:0"
                    },
                    "referencedDeclaration": 887,
                    "src": "2044:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bill_$887_storage_ptr",
                      "typeString": "struct OracleInterface.Bill"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2043:29:0"
            },
            "scope": 828,
            "src": "1989:135:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "2282:58:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2328:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 144,
                        "name": "billOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "2299:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleInterface_$946",
                          "typeString": "contract OracleInterface"
                        }
                      },
                      "id": 145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMostRecentBill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 933,
                      "src": "2299:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bool_$returns$_t_struct$_Bill_$887_memory_ptr_$",
                        "typeString": "function (bool) view external returns (struct OracleInterface.Bill memory)"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2299:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bill_$887_memory_ptr",
                      "typeString": "struct OracleInterface.Bill memory"
                    }
                  },
                  "functionReturnParameters": 143,
                  "id": 148,
                  "nodeType": "Return",
                  "src": "2292:41:0"
                }
              ]
            },
            "documentation": {
              "id": 138,
              "nodeType": "StructuredDocumentation",
              "src": "2130:68:0",
              "text": "@notice returns the full data of the most recent commitable bill"
            },
            "functionSelector": "71fe7e01",
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMostRecentBill",
            "nameLocation": "2212:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2229:2:0"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "2253:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Bill_$887_memory_ptr",
                    "typeString": "struct OracleInterface.Bill"
                  },
                  "typeName": {
                    "id": 141,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 140,
                      "name": "OracleInterface.Bill",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 887,
                      "src": "2253:20:0"
                    },
                    "referencedDeclaration": 887,
                    "src": "2253:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bill_$887_storage_ptr",
                      "typeString": "struct OracleInterface.Bill"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2252:29:0"
            },
            "scope": 828,
            "src": "2203:137:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "2522:53:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 157,
                      "name": "userToCommitments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "2539:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                        "typeString": "mapping(address => bytes32[] storage ref)"
                      }
                    },
                    "id": 160,
                    "indexExpression": {
                      "expression": {
                        "id": 158,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2557:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2557:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2539:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "functionReturnParameters": 156,
                  "id": 161,
                  "nodeType": "Return",
                  "src": "2532:36:0"
                }
              ]
            },
            "documentation": {
              "id": 151,
              "nodeType": "StructuredDocumentation",
              "src": "2346:102:0",
              "text": "@notice gets the current bills on which the user has commitments\n @return array of bill ids"
            },
            "functionSelector": "9aeeb709",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserCommitments",
            "nameLocation": "2462:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2480:2:0"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "2504:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 153,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2504:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 154,
                    "nodeType": "ArrayTypeName",
                    "src": "2504:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2503:18:0"
            },
            "scope": 828,
            "src": "2453:122:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 177,
              "nodeType": "Block",
              "src": "2813:50:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 173,
                      "name": "billToCommitments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2830:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct Commitments.Commitment storage ref[] storage ref)"
                      }
                    },
                    "id": 175,
                    "indexExpression": {
                      "id": 174,
                      "name": "_billId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "2848:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2830:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage",
                      "typeString": "struct Commitments.Commitment storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 172,
                  "id": 176,
                  "nodeType": "Return",
                  "src": "2823:33:0"
                }
              ]
            },
            "documentation": {
              "id": 164,
              "nodeType": "StructuredDocumentation",
              "src": "2581:140:0",
              "text": "@notice gets the current commitments for the bill\n @param _billId the id of the desired bill\n @return array of Commitments"
            },
            "functionSelector": "79d57d30",
            "id": 178,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBillCommitments",
            "nameLocation": "2735:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "_billId",
                  "nameLocation": "2762:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "2754:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2754:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2753:17:0"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 178,
                  "src": "2792:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Commitment_$60_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Commitments.Commitment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 169,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 168,
                        "name": "Commitment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 60,
                        "src": "2792:10:0"
                      },
                      "referencedDeclaration": 60,
                      "src": "2792:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$60_storage_ptr",
                        "typeString": "struct Commitments.Commitment"
                      }
                    },
                    "id": 170,
                    "nodeType": "ArrayTypeName",
                    "src": "2792:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                      "typeString": "struct Commitments.Commitment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2791:21:0"
            },
            "scope": 828,
            "src": "2726:137:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "3205:613:0",
              "statements": [
                {
                  "assignments": [
                    192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 192,
                      "mutability": "mutable",
                      "name": "commitments",
                      "nameLocation": "3381:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 233,
                      "src": "3360:32:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                        "typeString": "struct Commitments.Commitment[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 190,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 189,
                            "name": "Commitment",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 60,
                            "src": "3360:10:0"
                          },
                          "referencedDeclaration": 60,
                          "src": "3360:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Commitment_$60_storage_ptr",
                            "typeString": "struct Commitments.Commitment"
                          }
                        },
                        "id": 191,
                        "nodeType": "ArrayTypeName",
                        "src": "3360:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                          "typeString": "struct Commitments.Commitment[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 196,
                  "initialValue": {
                    "baseExpression": {
                      "id": 193,
                      "name": "billToCommitments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3395:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct Commitments.Commitment storage ref[] storage ref)"
                      }
                    },
                    "id": 195,
                    "indexExpression": {
                      "id": 194,
                      "name": "_billId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 181,
                      "src": "3413:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3395:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage",
                      "typeString": "struct Commitments.Commitment storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3360:61:0"
                },
                {
                  "body": {
                    "id": 227,
                    "nodeType": "Block",
                    "src": "3477:152:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 208,
                                "name": "commitments",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 192,
                                "src": "3495:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                                  "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                }
                              },
                              "id": 210,
                              "indexExpression": {
                                "id": 209,
                                "name": "n",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 198,
                                "src": "3507:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3495:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Commitment_$60_storage",
                                "typeString": "struct Commitments.Commitment storage ref"
                              }
                            },
                            "id": 211,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "user",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 53,
                            "src": "3495:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 212,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3518:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3518:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3495:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 226,
                        "nodeType": "IfStatement",
                        "src": "3491:128:0",
                        "trueBody": {
                          "id": 225,
                          "nodeType": "Block",
                          "src": "3530:89:0",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 215,
                                        "name": "commitments",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 192,
                                        "src": "3556:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 217,
                                      "indexExpression": {
                                        "id": 216,
                                        "name": "n",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 198,
                                        "src": "3568:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3556:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Commitment_$60_storage",
                                        "typeString": "struct Commitments.Commitment storage ref"
                                      }
                                    },
                                    "id": 218,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 57,
                                    "src": "3556:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 219,
                                        "name": "commitments",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 192,
                                        "src": "3579:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 221,
                                      "indexExpression": {
                                        "id": 220,
                                        "name": "n",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 198,
                                        "src": "3591:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3579:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Commitment_$60_storage",
                                        "typeString": "struct Commitments.Commitment storage ref"
                                      }
                                    },
                                    "id": 222,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "inSupport",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 59,
                                    "src": "3579:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 223,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3555:49:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                                  "typeString": "tuple(uint256,bool)"
                                }
                              },
                              "functionReturnParameters": 187,
                              "id": 224,
                              "nodeType": "Return",
                              "src": "3548:56:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 201,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 198,
                      "src": "3448:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 202,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 192,
                        "src": "3452:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                        }
                      },
                      "id": 203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3452:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3448:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 228,
                  "initializationExpression": {
                    "assignments": [
                      198
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "n",
                        "nameLocation": "3441:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 228,
                        "src": "3436:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3436:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 200,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3445:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3436:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3472:3:0",
                      "subExpression": {
                        "id": 205,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "3472:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 207,
                    "nodeType": "ExpressionStatement",
                    "src": "3472:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3431:198:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "30",
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3802:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3805:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 231,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3801:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_bool_$",
                      "typeString": "tuple(int_const 0,bool)"
                    }
                  },
                  "functionReturnParameters": 187,
                  "id": 232,
                  "nodeType": "Return",
                  "src": "3794:17:0"
                }
              ]
            },
            "documentation": {
              "id": 179,
              "nodeType": "StructuredDocumentation",
              "src": "2869:237:0",
              "text": "@notice gets a user's commitment\n @param _billId the id of the desired bill\n @return amount commitment amount, or 0 if no commitment found\n @return inSupport in support of bill or not, or 0 if no commitment found"
            },
            "functionSelector": "528de27f",
            "id": 234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserCommitment",
            "nameLocation": "3120:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 181,
                  "mutability": "mutable",
                  "name": "_billId",
                  "nameLocation": "3146:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "3138:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 180,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3138:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3137:17:0"
            },
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3181:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "3176:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3176:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "mutability": "mutable",
                  "name": "inSupport",
                  "nameLocation": "3194:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "3189:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3189:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3175:29:0"
            },
            "scope": 828,
            "src": "3111:707:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 322,
              "nodeType": "Block",
              "src": "4187:888:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 245,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4205:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4205:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 247,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "4218:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4205:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4197:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4197:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "4197:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 252,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4299:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4299:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 254,
                          "name": "minimumCommitment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "4312:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4299:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d6d69746d656e7420616d6f756e74206d757374206265203e3d206d696e696d756d20636f6d6d69746d656e74",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4331:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa758ddcd0691b1462c43f70c8d239a0ebb1235dbeb8532a26952b626fb1647b",
                          "typeString": "literal_string \"Commitment amount must be >= minimum commitment\""
                        },
                        "value": "Commitment amount must be >= minimum commitment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa758ddcd0691b1462c43f70c8d239a0ebb1235dbeb8532a26952b626fb1647b",
                          "typeString": "literal_string \"Commitment amount must be >= minimum commitment\""
                        }
                      ],
                      "id": 251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4291:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4291:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "4291:90:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 262,
                            "name": "_billId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "4460:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 260,
                            "name": "billOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "4438:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OracleInterface_$946",
                              "typeString": "contract OracleInterface"
                            }
                          },
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "billExists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 910,
                          "src": "4438:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view external returns (bool)"
                          }
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4438:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5370656369666965642062696c6c206e6f7420666f756e64",
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4470:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_82991fc044c2bd0bea42197f7c1960b35df518d3cdc9253e2195a4d5c8d5cf56",
                          "typeString": "literal_string \"Specified bill not found\""
                        },
                        "value": "Specified bill not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_82991fc044c2bd0bea42197f7c1960b35df518d3cdc9253e2195a4d5c8d5cf56",
                          "typeString": "literal_string \"Specified bill not found\""
                        }
                      ],
                      "id": 259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4430:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4430:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "4430:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 269,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4555:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4555:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 271,
                            "name": "_billId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "4567:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 268,
                          "name": "_commitmentIsValid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 110,
                          "src": "4536:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (address,bytes32) view returns (bool)"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4536:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d6d69746d656e74206973206e6f742076616c6964",
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4577:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_747dc72168f8439c429b54742d6708b5364735cc5b535e1efd5a8ea232c7b1d8",
                          "typeString": "literal_string \"Commitment is not valid\""
                        },
                        "value": "Commitment is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_747dc72168f8439c429b54742d6708b5364735cc5b535e1efd5a8ea232c7b1d8",
                          "typeString": "literal_string \"Commitment is not valid\""
                        }
                      ],
                      "id": 267,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4528:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4528:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "4528:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 279,
                            "name": "_billId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "4697:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 277,
                            "name": "billOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34,
                            "src": "4672:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OracleInterface_$946",
                              "typeString": "contract OracleInterface"
                            }
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "billIsPending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 917,
                          "src": "4672:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view external returns (bool)"
                          }
                        },
                        "id": 280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4672:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42696c6c206e6f74206f70656e20666f7220636f6d6d69746d656e74",
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4707:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c33a961069d5bf03ae6ed78e31473cca3cab60fdb6d3407dd96e8c0a73d9444",
                          "typeString": "literal_string \"Bill not open for commitment\""
                        },
                        "value": "Bill not open for commitment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c33a961069d5bf03ae6ed78e31473cca3cab60fdb6d3407dd96e8c0a73d9444",
                          "typeString": "literal_string \"Bill not open for commitment\""
                        }
                      ],
                      "id": 276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4664:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4664:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 283,
                  "nodeType": "ExpressionStatement",
                  "src": "4664:74:0"
                },
                {
                  "assignments": [
                    288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 288,
                      "mutability": "mutable",
                      "name": "commitments",
                      "nameLocation": "4804:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 322,
                      "src": "4783:32:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                        "typeString": "struct Commitments.Commitment[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 286,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 285,
                            "name": "Commitment",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 60,
                            "src": "4783:10:0"
                          },
                          "referencedDeclaration": 60,
                          "src": "4783:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Commitment_$60_storage_ptr",
                            "typeString": "struct Commitments.Commitment"
                          }
                        },
                        "id": 287,
                        "nodeType": "ArrayTypeName",
                        "src": "4783:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                          "typeString": "struct Commitments.Commitment[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 292,
                  "initialValue": {
                    "baseExpression": {
                      "id": 289,
                      "name": "billToCommitments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "4818:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct Commitments.Commitment storage ref[] storage ref)"
                      }
                    },
                    "id": 291,
                    "indexExpression": {
                      "id": 290,
                      "name": "_billId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "4836:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4818:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage",
                      "typeString": "struct Commitments.Commitment storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4783:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 297,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4882:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4882:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 299,
                            "name": "_billId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 239,
                            "src": "4894:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 300,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4903:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "4903:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 302,
                            "name": "_inSupport",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "4914:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 296,
                          "name": "Commitment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60,
                          "src": "4871:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Commitment_$60_storage_ptr_$",
                            "typeString": "type(struct Commitments.Commitment storage pointer)"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4871:54:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$60_memory_ptr",
                          "typeString": "struct Commitments.Commitment memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Commitment_$60_memory_ptr",
                          "typeString": "struct Commitments.Commitment memory"
                        }
                      ],
                      "expression": {
                        "id": 293,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 288,
                        "src": "4854:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                        }
                      },
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4854:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr_$_t_struct$_Commitment_$60_storage_$returns$__$bound_to$_t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Commitments.Commitment storage ref[] storage pointer,struct Commitments.Commitment storage ref)"
                      }
                    },
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4854:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "4854:72:0"
                },
                {
                  "assignments": [
                    310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 310,
                      "mutability": "mutable",
                      "name": "userCommitments",
                      "nameLocation": "4982:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 322,
                      "src": "4964:33:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 308,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4964:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 309,
                        "nodeType": "ArrayTypeName",
                        "src": "4964:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 315,
                  "initialValue": {
                    "baseExpression": {
                      "id": 311,
                      "name": "userToCommitments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "5000:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                        "typeString": "mapping(address => bytes32[] storage ref)"
                      }
                    },
                    "id": 314,
                    "indexExpression": {
                      "expression": {
                        "id": 312,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5018:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5018:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5000:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4964:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 319,
                        "name": "_billId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 239,
                        "src": "5060:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 316,
                        "name": "userCommitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 310,
                        "src": "5039:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[] storage pointer"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5039:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5039:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "5039:29:0"
                }
              ]
            },
            "documentation": {
              "id": 235,
              "nodeType": "StructuredDocumentation",
              "src": "3824:270:0",
              "text": "@notice places a non-rescindable commitment on the given bill\n @param _amount the id of the bill on which to commitment\n @param _billId the id of the bill on which to commitment\n @param _inSupport commitment in favor of bill passing (vs against)"
            },
            "functionSelector": "5f0012fe",
            "id": 323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeCommitment",
            "nameLocation": "4108:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4129:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "4124:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4124:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 239,
                  "mutability": "mutable",
                  "name": "_billId",
                  "nameLocation": "4146:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "4138:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 238,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4138:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 241,
                  "mutability": "mutable",
                  "name": "_inSupport",
                  "nameLocation": "4160:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "4155:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 240,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4155:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4123:48:0"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4187:0:0"
            },
            "scope": 828,
            "src": "4099:976:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "5143:106:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 333,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5178:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Commitments_$828",
                              "typeString": "contract Commitments"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Commitments_$828",
                              "typeString": "contract Commitments"
                            }
                          ],
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5170:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 331,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5170:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5170:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 335,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "5185:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 336,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "5192:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 330,
                      "name": "Transferral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "5158:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5158:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 338,
                  "nodeType": "EmitStatement",
                  "src": "5153:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 344,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 327,
                        "src": "5234:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 341,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 325,
                            "src": "5218:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5210:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 339,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5210:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5210:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5210:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5210:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "5210:32:0"
                }
              ]
            },
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOutWinnings",
            "nameLocation": "5090:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5114:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "5106:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5106:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 327,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5126:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "5121:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 326,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5121:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5105:29:0"
            },
            "returnParameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5143:0:0"
            },
            "scope": 828,
            "src": "5081:168:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 376,
              "nodeType": "Block",
              "src": "5291:134:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 354,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5326:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Commitments_$828",
                              "typeString": "contract Commitments"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Commitments_$828",
                              "typeString": "contract Commitments"
                            }
                          ],
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5318:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 352,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5318:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5318:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 356,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 951,
                        "src": "5333:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 359,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "5348:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Commitments_$828",
                                "typeString": "contract Commitments"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Commitments_$828",
                                "typeString": "contract Commitments"
                              }
                            ],
                            "id": 358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5340:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 357,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5340:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5340:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "5340:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 351,
                      "name": "Transferral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "5306:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5306:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 363,
                  "nodeType": "EmitStatement",
                  "src": "5301:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 371,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "5404:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Commitments_$828",
                                "typeString": "contract Commitments"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Commitments_$828",
                                "typeString": "contract Commitments"
                              }
                            ],
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5396:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 369,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5396:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5396:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "5396:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 366,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 951,
                            "src": "5380:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5372:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 364,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5372:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5372:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "5372:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5372:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 375,
                  "nodeType": "ExpressionStatement",
                  "src": "5372:46:0"
                }
              ]
            },
            "id": 377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferToHouse",
            "nameLocation": "5264:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 349,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5280:2:0"
            },
            "returnParameters": {
              "id": 350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5291:0:0"
            },
            "scope": 828,
            "src": "5255:170:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 419,
              "nodeType": "Block",
              "src": "5543:412:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_BillOutcome_$891",
                          "typeString": "enum OracleInterface.BillOutcome"
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 388,
                          "name": "_outcome",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 380,
                          "src": "5561:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BillOutcome_$891",
                            "typeString": "enum OracleInterface.BillOutcome"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 389,
                              "name": "OracleInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "5573:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterface_$946_$",
                                "typeString": "type(contract OracleInterface)"
                              }
                            },
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "BillOutcome",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 891,
                            "src": "5573:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BillOutcome_$891_$",
                              "typeString": "type(enum OracleInterface.BillOutcome)"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 888,
                          "src": "5573:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BillOutcome_$891",
                            "typeString": "enum OracleInterface.BillOutcome"
                          }
                        },
                        "src": "5561:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5553:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5553:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "5553:56:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_BillOutcome_$891",
                      "typeString": "enum OracleInterface.BillOutcome"
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 395,
                      "name": "_outcome",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 380,
                      "src": "5624:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BillOutcome_$891",
                        "typeString": "enum OracleInterface.BillOutcome"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 396,
                          "name": "OracleInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 946,
                          "src": "5636:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OracleInterface_$946_$",
                            "typeString": "type(contract OracleInterface)"
                          }
                        },
                        "id": 397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "BillOutcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 891,
                        "src": "5636:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BillOutcome_$891_$",
                          "typeString": "type(enum OracleInterface.BillOutcome)"
                        }
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BecameLaw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 889,
                      "src": "5636:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BillOutcome_$891",
                        "typeString": "enum OracleInterface.BillOutcome"
                      }
                    },
                    "src": "5624:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 417,
                    "nodeType": "Block",
                    "src": "5815:134:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 409,
                          "name": "inSupport",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 382,
                          "src": "5833:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 415,
                          "nodeType": "Block",
                          "src": "5895:44:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5920:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 386,
                              "id": 414,
                              "nodeType": "Return",
                              "src": "5913:11:0"
                            }
                          ]
                        },
                        "id": 416,
                        "nodeType": "IfStatement",
                        "src": "5829:110:0",
                        "trueBody": {
                          "id": 412,
                          "nodeType": "Block",
                          "src": "5844:45:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5869:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 386,
                              "id": 411,
                              "nodeType": "Return",
                              "src": "5862:12:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 418,
                  "nodeType": "IfStatement",
                  "src": "5620:329:0",
                  "trueBody": {
                    "id": 408,
                    "nodeType": "Block",
                    "src": "5675:134:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 400,
                          "name": "inSupport",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 382,
                          "src": "5693:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 406,
                          "nodeType": "Block",
                          "src": "5754:45:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5779:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 386,
                              "id": 405,
                              "nodeType": "Return",
                              "src": "5772:12:0"
                            }
                          ]
                        },
                        "id": 407,
                        "nodeType": "IfStatement",
                        "src": "5689:110:0",
                        "trueBody": {
                          "id": 403,
                          "nodeType": "Block",
                          "src": "5704:44:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5729:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 386,
                              "id": 402,
                              "nodeType": "Return",
                              "src": "5722:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "id": 420,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isWinningCommitment",
            "nameLocation": "5440:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "_outcome",
                  "nameLocation": "5489:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "5461:36:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BillOutcome_$891",
                    "typeString": "enum OracleInterface.BillOutcome"
                  },
                  "typeName": {
                    "id": 379,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 378,
                      "name": "OracleInterface.BillOutcome",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 891,
                      "src": "5461:27:0"
                    },
                    "referencedDeclaration": 891,
                    "src": "5461:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BillOutcome_$891",
                      "typeString": "enum OracleInterface.BillOutcome"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "inSupport",
                  "nameLocation": "5504:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "5499:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5499:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5460:54:0"
            },
            "returnParameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 385,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 420,
                  "src": "5537:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 384,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5537:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5536:6:0"
            },
            "scope": 828,
            "src": "5431:524:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 484,
              "nodeType": "Block",
              "src": "6429:613:0",
              "statements": [
                {
                  "assignments": [
                    435
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 435,
                      "mutability": "mutable",
                      "name": "percentWinningTotal",
                      "nameLocation": "6444:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 484,
                      "src": "6439:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 434,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6439:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 440,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 438,
                        "name": "_winningTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "6487:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 436,
                        "name": "_committedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 427,
                        "src": "6466:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1059,
                      "src": "6466:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6466:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6439:62:0"
                },
                {
                  "assignments": [
                    442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 442,
                      "mutability": "mutable",
                      "name": "winningAmount",
                      "nameLocation": "6548:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 484,
                      "src": "6543:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 441,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6543:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 444,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6564:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6543:22:0"
                },
                {
                  "condition": {
                    "id": 445,
                    "name": "_keepCommitment",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 429,
                    "src": "6579:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 463,
                    "nodeType": "Block",
                    "src": "6699:78:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 456,
                            "name": "winningAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "6713:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 459,
                                "name": "percentWinningTotal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 435,
                                "src": "6746:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 457,
                                "name": "_losingTotal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 425,
                                "src": "6729:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1044,
                              "src": "6729:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6729:37:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6713:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 462,
                        "nodeType": "ExpressionStatement",
                        "src": "6713:53:0"
                      }
                    ]
                  },
                  "id": 464,
                  "nodeType": "IfStatement",
                  "src": "6575:202:0",
                  "trueBody": {
                    "id": 455,
                    "nodeType": "Block",
                    "src": "6596:97:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 446,
                            "name": "winningAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "6610:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 449,
                                  "name": "percentWinningTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 435,
                                  "src": "6643:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 447,
                                  "name": "_losingTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 425,
                                  "src": "6626:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 448,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1044,
                                "src": "6626:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6626:37:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 451,
                              "name": "_committedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 427,
                              "src": "6666:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6626:56:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6610:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 454,
                        "nodeType": "ExpressionStatement",
                        "src": "6610:72:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 465,
                      "name": "winningAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "6851:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6868:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6851:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 473,
                  "nodeType": "IfStatement",
                  "src": "6847:82:0",
                  "trueBody": {
                    "id": 472,
                    "nodeType": "Block",
                    "src": "6871:58:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 468,
                            "name": "winningAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 442,
                            "src": "6885:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 469,
                            "name": "minimumCommitment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "6901:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6885:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 471,
                        "nodeType": "ExpressionStatement",
                        "src": "6885:33:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 474,
                      "name": "winningAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 442,
                      "src": "6976:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "313030",
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7031:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 477,
                              "name": "housePercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "7010:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 475,
                              "name": "winningAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 442,
                              "src": "6992:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1044,
                            "src": "6992:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6992:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1059,
                        "src": "6992:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6992:43:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6976:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 433,
                  "id": 483,
                  "nodeType": "Return",
                  "src": "6969:66:0"
                }
              ]
            },
            "documentation": {
              "id": 421,
              "nodeType": "StructuredDocumentation",
              "src": "5961:325:0",
              "text": "@notice calculates the amount to be paid out for a commitment\n @param _winningTotal the total monetary amount of winning commitments\n @param _losingTotal the total monetary amount of losing commitments\n @param _committedAmount the amount of this particular commitment\n @return an amount in wei"
            },
            "id": 485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculatePayout",
            "nameLocation": "6300:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "mutability": "mutable",
                  "name": "_winningTotal",
                  "nameLocation": "6322:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "6317:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6317:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 425,
                  "mutability": "mutable",
                  "name": "_losingTotal",
                  "nameLocation": "6342:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "6337:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 424,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6337:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 427,
                  "mutability": "mutable",
                  "name": "_committedAmount",
                  "nameLocation": "6361:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "6356:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 426,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6356:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 429,
                  "mutability": "mutable",
                  "name": "_keepCommitment",
                  "nameLocation": "6384:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "6379:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6379:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6316:84:0"
            },
            "returnParameters": {
              "id": 433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 485,
                  "src": "6423:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 431,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6423:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6422:6:0"
            },
            "scope": 828,
            "src": "6291:751:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 738,
              "nodeType": "Block",
              "src": "7335:2561:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_BillOutcome_$891",
                          "typeString": "enum OracleInterface.BillOutcome"
                        },
                        "id": 499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 495,
                          "name": "_outcome",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "7353:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BillOutcome_$891",
                            "typeString": "enum OracleInterface.BillOutcome"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 496,
                              "name": "OracleInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "7365:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterface_$946_$",
                                "typeString": "type(contract OracleInterface)"
                              }
                            },
                            "id": 497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "BillOutcome",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 891,
                            "src": "7365:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BillOutcome_$891_$",
                              "typeString": "type(enum OracleInterface.BillOutcome)"
                            }
                          },
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 888,
                          "src": "7365:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BillOutcome_$891",
                            "typeString": "enum OracleInterface.BillOutcome"
                          }
                        },
                        "src": "7353:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7345:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7345:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "7345:56:0"
                },
                {
                  "assignments": [
                    506
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 506,
                      "mutability": "mutable",
                      "name": "commitments",
                      "nameLocation": "7433:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "7412:32:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                        "typeString": "struct Commitments.Commitment[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 504,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 503,
                            "name": "Commitment",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 60,
                            "src": "7412:10:0"
                          },
                          "referencedDeclaration": 60,
                          "src": "7412:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Commitment_$60_storage_ptr",
                            "typeString": "struct Commitments.Commitment"
                          }
                        },
                        "id": 505,
                        "nodeType": "ArrayTypeName",
                        "src": "7412:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                          "typeString": "struct Commitments.Commitment[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 510,
                  "initialValue": {
                    "baseExpression": {
                      "id": 507,
                      "name": "billToCommitments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "7447:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct Commitments.Commitment storage ref[] storage ref)"
                      }
                    },
                    "id": 509,
                    "indexExpression": {
                      "id": 508,
                      "name": "_billId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "7465:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7447:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage",
                      "typeString": "struct Commitments.Commitment storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7412:61:0"
                },
                {
                  "assignments": [
                    512
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 512,
                      "mutability": "mutable",
                      "name": "losingTotal",
                      "nameLocation": "7488:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "7483:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 511,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7483:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 514,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7502:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7483:20:0"
                },
                {
                  "assignments": [
                    516
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 516,
                      "mutability": "mutable",
                      "name": "winningTotal",
                      "nameLocation": "7518:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "7513:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 515,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7513:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 518,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7533:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7513:21:0"
                },
                {
                  "assignments": [
                    520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 520,
                      "mutability": "mutable",
                      "name": "totalPot",
                      "nameLocation": "7549:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "7544:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 519,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7544:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 522,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7560:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7544:17:0"
                },
                {
                  "assignments": [
                    527
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 527,
                      "mutability": "mutable",
                      "name": "payouts",
                      "nameLocation": "7585:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "7571:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 525,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7571:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 526,
                        "nodeType": "ArrayTypeName",
                        "src": "7571:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 534,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 531,
                          "name": "commitments",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 506,
                          "src": "7606:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                            "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                          }
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "7606:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7595:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 528,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7599:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 529,
                        "nodeType": "ArrayTypeName",
                        "src": "7599:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7595:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7571:54:0"
                },
                {
                  "body": {
                    "id": 577,
                    "nodeType": "Block",
                    "src": "7730:283:0",
                    "statements": [
                      {
                        "assignments": [
                          547
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 547,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "7749:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 577,
                            "src": "7744:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 546,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7744:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 552,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 548,
                              "name": "commitments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 506,
                              "src": "7758:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                                "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                              }
                            },
                            "id": 550,
                            "indexExpression": {
                              "id": 549,
                              "name": "n",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 536,
                              "src": "7770:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7758:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Commitment_$60_storage",
                              "typeString": "struct Commitments.Commitment storage ref"
                            }
                          },
                          "id": 551,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57,
                          "src": "7758:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7744:35:0"
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 554,
                              "name": "_outcome",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 491,
                              "src": "7818:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BillOutcome_$891",
                                "typeString": "enum OracleInterface.BillOutcome"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 555,
                                  "name": "commitments",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 506,
                                  "src": "7828:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                                    "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                  }
                                },
                                "id": 557,
                                "indexExpression": {
                                  "id": 556,
                                  "name": "n",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 536,
                                  "src": "7840:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7828:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Commitment_$60_storage",
                                  "typeString": "struct Commitments.Commitment storage ref"
                                }
                              },
                              "id": 558,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "inSupport",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59,
                              "src": "7828:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_BillOutcome_$891",
                                "typeString": "enum OracleInterface.BillOutcome"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 553,
                            "name": "_isWinningCommitment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "7797:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_BillOutcome_$891_$_t_bool_$returns$_t_bool_$",
                              "typeString": "function (enum OracleInterface.BillOutcome,bool) pure returns (bool)"
                            }
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7797:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 575,
                          "nodeType": "Block",
                          "src": "7933:70:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 573,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 568,
                                  "name": "losingTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 512,
                                  "src": "7951:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 571,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 547,
                                      "src": "7981:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 569,
                                      "name": "losingTotal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 512,
                                      "src": "7965:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 570,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1105,
                                    "src": "7965:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 572,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7965:23:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7951:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 574,
                              "nodeType": "ExpressionStatement",
                              "src": "7951:37:0"
                            }
                          ]
                        },
                        "id": 576,
                        "nodeType": "IfStatement",
                        "src": "7793:210:0",
                        "trueBody": {
                          "id": 567,
                          "nodeType": "Block",
                          "src": "7855:72:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 560,
                                  "name": "winningTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 516,
                                  "src": "7873:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 563,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 547,
                                      "src": "7905:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 561,
                                      "name": "winningTotal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 516,
                                      "src": "7888:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 562,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1105,
                                    "src": "7888:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 564,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7888:24:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7873:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 566,
                              "nodeType": "ExpressionStatement",
                              "src": "7873:39:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 539,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 536,
                      "src": "7701:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 540,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "7705:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                        }
                      },
                      "id": 541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7705:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7701:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 578,
                  "initializationExpression": {
                    "assignments": [
                      536
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 536,
                        "mutability": "mutable",
                        "name": "n",
                        "nameLocation": "7694:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 578,
                        "src": "7689:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7689:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 538,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7698:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7689:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7725:3:0",
                      "subExpression": {
                        "id": 543,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "7725:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 545,
                    "nodeType": "ExpressionStatement",
                    "src": "7725:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "7684:329:0"
                },
                {
                  "expression": {
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 579,
                      "name": "totalPot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "8022:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 582,
                          "name": "winningTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 516,
                          "src": "8049:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 580,
                          "name": "losingTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 512,
                          "src": "8033:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1105,
                        "src": "8033:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8033:29:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8022:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "8022:40:0"
                },
                {
                  "body": {
                    "id": 665,
                    "nodeType": "Block",
                    "src": "8147:938:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_BillOutcome_$891",
                            "typeString": "enum OracleInterface.BillOutcome"
                          },
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 597,
                            "name": "_outcome",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "8165:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BillOutcome_$891",
                              "typeString": "enum OracleInterface.BillOutcome"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 598,
                                "name": "OracleInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 946,
                                "src": "8177:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OracleInterface_$946_$",
                                  "typeString": "type(contract OracleInterface)"
                                }
                              },
                              "id": 599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "BillOutcome",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 891,
                              "src": "8177:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_BillOutcome_$891_$",
                                "typeString": "type(enum OracleInterface.BillOutcome)"
                              }
                            },
                            "id": 600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "BecameLaw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 889,
                            "src": "8177:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BillOutcome_$891",
                              "typeString": "enum OracleInterface.BillOutcome"
                            }
                          },
                          "src": "8165:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 663,
                          "nodeType": "Block",
                          "src": "8652:423:0",
                          "statements": [
                            {
                              "condition": {
                                "arguments": [
                                  {
                                    "id": 634,
                                    "name": "_outcome",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 491,
                                    "src": "8840:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_BillOutcome_$891",
                                      "typeString": "enum OracleInterface.BillOutcome"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 635,
                                        "name": "commitments",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 506,
                                        "src": "8850:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 637,
                                      "indexExpression": {
                                        "id": 636,
                                        "name": "n",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 587,
                                        "src": "8862:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8850:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Commitment_$60_storage",
                                        "typeString": "struct Commitments.Commitment storage ref"
                                      }
                                    },
                                    "id": 638,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "inSupport",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 59,
                                    "src": "8850:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_BillOutcome_$891",
                                      "typeString": "enum OracleInterface.BillOutcome"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 633,
                                  "name": "_isWinningCommitment",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 420,
                                  "src": "8819:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_enum$_BillOutcome_$891_$_t_bool_$returns$_t_bool_$",
                                    "typeString": "function (enum OracleInterface.BillOutcome,bool) pure returns (bool)"
                                  }
                                },
                                "id": 639,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8819:56:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 661,
                                "nodeType": "Block",
                                "src": "9006:55:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 659,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 655,
                                          "name": "payouts",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 527,
                                          "src": "9028:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 657,
                                        "indexExpression": {
                                          "id": 656,
                                          "name": "n",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 587,
                                          "src": "9036:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "9028:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 658,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9041:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "9028:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 660,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9028:14:0"
                                  }
                                ]
                              },
                              "id": 662,
                              "nodeType": "IfStatement",
                              "src": "8815:246:0",
                              "trueBody": {
                                "id": 654,
                                "nodeType": "Block",
                                "src": "8877:123:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 652,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 640,
                                          "name": "payouts",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 527,
                                          "src": "8899:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 642,
                                        "indexExpression": {
                                          "id": 641,
                                          "name": "n",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 587,
                                          "src": "8907:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "8899:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "id": 644,
                                            "name": "winningTotal",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 516,
                                            "src": "8929:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 645,
                                            "name": "totalPot",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 520,
                                            "src": "8943:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 646,
                                                "name": "commitments",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 506,
                                                "src": "8953:11:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                                                  "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                                }
                                              },
                                              "id": 648,
                                              "indexExpression": {
                                                "id": 647,
                                                "name": "n",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 587,
                                                "src": "8965:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "8953:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Commitment_$60_storage",
                                                "typeString": "struct Commitments.Commitment storage ref"
                                              }
                                            },
                                            "id": 649,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "amount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 57,
                                            "src": "8953:21:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "hexValue": "74727565",
                                            "id": 650,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8976:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "value": "true"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          ],
                                          "id": 643,
                                          "name": "_calculatePayout",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 485,
                                          "src": "8912:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                                            "typeString": "function (uint256,uint256,uint256,bool) view returns (uint256)"
                                          }
                                        },
                                        "id": 651,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8912:69:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8899:82:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 653,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8899:82:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 664,
                        "nodeType": "IfStatement",
                        "src": "8161:914:0",
                        "trueBody": {
                          "id": 632,
                          "nodeType": "Block",
                          "src": "8216:430:0",
                          "statements": [
                            {
                              "condition": {
                                "arguments": [
                                  {
                                    "id": 603,
                                    "name": "_outcome",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 491,
                                    "src": "8410:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_BillOutcome_$891",
                                      "typeString": "enum OracleInterface.BillOutcome"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 604,
                                        "name": "commitments",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 506,
                                        "src": "8420:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 606,
                                      "indexExpression": {
                                        "id": 605,
                                        "name": "n",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 587,
                                        "src": "8432:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8420:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Commitment_$60_storage",
                                        "typeString": "struct Commitments.Commitment storage ref"
                                      }
                                    },
                                    "id": 607,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "inSupport",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 59,
                                    "src": "8420:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_BillOutcome_$891",
                                      "typeString": "enum OracleInterface.BillOutcome"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 602,
                                  "name": "_isWinningCommitment",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 420,
                                  "src": "8389:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_enum$_BillOutcome_$891_$_t_bool_$returns$_t_bool_$",
                                    "typeString": "function (enum OracleInterface.BillOutcome,bool) pure returns (bool)"
                                  }
                                },
                                "id": 608,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8389:56:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 630,
                                "nodeType": "Block",
                                "src": "8577:55:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 628,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 624,
                                          "name": "payouts",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 527,
                                          "src": "8599:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 626,
                                        "indexExpression": {
                                          "id": 625,
                                          "name": "n",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 587,
                                          "src": "8607:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "8599:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 627,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8612:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "8599:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 629,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8599:14:0"
                                  }
                                ]
                              },
                              "id": 631,
                              "nodeType": "IfStatement",
                              "src": "8385:247:0",
                              "trueBody": {
                                "id": 623,
                                "nodeType": "Block",
                                "src": "8447:124:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 621,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 609,
                                          "name": "payouts",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 527,
                                          "src": "8469:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 611,
                                        "indexExpression": {
                                          "id": 610,
                                          "name": "n",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 587,
                                          "src": "8477:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "8469:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "id": 613,
                                            "name": "winningTotal",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 516,
                                            "src": "8499:12:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 614,
                                            "name": "totalPot",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 520,
                                            "src": "8513:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 615,
                                                "name": "commitments",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 506,
                                                "src": "8523:11:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                                                  "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                                }
                                              },
                                              "id": 617,
                                              "indexExpression": {
                                                "id": 616,
                                                "name": "n",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 587,
                                                "src": "8535:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "8523:14:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Commitment_$60_storage",
                                                "typeString": "struct Commitments.Commitment storage ref"
                                              }
                                            },
                                            "id": 618,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "amount",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 57,
                                            "src": "8523:21:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "hexValue": "66616c7365",
                                            "id": 619,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8546:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            },
                                            "value": "false"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_bool",
                                              "typeString": "bool"
                                            }
                                          ],
                                          "id": 612,
                                          "name": "_calculatePayout",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 485,
                                          "src": "8482:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                                            "typeString": "function (uint256,uint256,uint256,bool) view returns (uint256)"
                                          }
                                        },
                                        "id": 620,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8482:70:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8469:83:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 622,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8469:83:0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 590,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "8118:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 591,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 506,
                        "src": "8122:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                        }
                      },
                      "id": 592,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8122:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8118:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 666,
                  "initializationExpression": {
                    "assignments": [
                      587
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 587,
                        "mutability": "mutable",
                        "name": "n",
                        "nameLocation": "8111:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 666,
                        "src": "8106:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 586,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8106:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 589,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8115:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8106:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8142:3:0",
                      "subExpression": {
                        "id": 594,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "8142:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 596,
                    "nodeType": "ExpressionStatement",
                    "src": "8142:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "8101:984:0"
                },
                {
                  "assignments": [
                    668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 668,
                      "mutability": "mutable",
                      "name": "legislatorPayout",
                      "nameLocation": "9139:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 738,
                      "src": "9134:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 667,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9134:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 670,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9158:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9134:25:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_BillOutcome_$891",
                      "typeString": "enum OracleInterface.BillOutcome"
                    },
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 671,
                      "name": "_outcome",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 491,
                      "src": "9173:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BillOutcome_$891",
                        "typeString": "enum OracleInterface.BillOutcome"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 672,
                          "name": "OracleInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 946,
                          "src": "9185:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OracleInterface_$946_$",
                            "typeString": "type(contract OracleInterface)"
                          }
                        },
                        "id": 673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "BillOutcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 891,
                        "src": "9185:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BillOutcome_$891_$",
                          "typeString": "type(enum OracleInterface.BillOutcome)"
                        }
                      },
                      "id": 674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BecameLaw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 889,
                      "src": "9185:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BillOutcome_$891",
                        "typeString": "enum OracleInterface.BillOutcome"
                      }
                    },
                    "src": "9173:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 681,
                  "nodeType": "IfStatement",
                  "src": "9169:156:0",
                  "trueBody": {
                    "id": 680,
                    "nodeType": "Block",
                    "src": "9224:101:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 676,
                            "name": "legislatorPayout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 668,
                            "src": "9283:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 677,
                            "name": "winningTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "9302:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9283:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 679,
                        "nodeType": "ExpressionStatement",
                        "src": "9283:31:0"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 710,
                    "nodeType": "Block",
                    "src": "9406:126:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 693,
                              "name": "payouts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "9424:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 695,
                            "indexExpression": {
                              "id": 694,
                              "name": "n",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 683,
                              "src": "9432:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9424:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9438:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9424:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 709,
                        "nodeType": "IfStatement",
                        "src": "9420:102:0",
                        "trueBody": {
                          "id": 708,
                          "nodeType": "Block",
                          "src": "9441:81:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 699,
                                        "name": "commitments",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 506,
                                        "src": "9475:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Commitment_$60_storage_$dyn_storage_ptr",
                                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 701,
                                      "indexExpression": {
                                        "id": 700,
                                        "name": "n",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 683,
                                        "src": "9487:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9475:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Commitment_$60_storage",
                                        "typeString": "struct Commitments.Commitment storage ref"
                                      }
                                    },
                                    "id": 702,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "user",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 53,
                                    "src": "9475:19:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 703,
                                      "name": "payouts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 527,
                                      "src": "9496:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 705,
                                    "indexExpression": {
                                      "id": 704,
                                      "name": "n",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 683,
                                      "src": "9504:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9496:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 698,
                                  "name": "_payOutWinnings",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 348,
                                  "src": "9459:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 706,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9459:48:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 707,
                              "nodeType": "ExpressionStatement",
                              "src": "9459:48:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 686,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 683,
                      "src": "9381:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 687,
                        "name": "payouts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "9385:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9385:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9381:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 711,
                  "initializationExpression": {
                    "assignments": [
                      683
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 683,
                        "mutability": "mutable",
                        "name": "n",
                        "nameLocation": "9374:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 711,
                        "src": "9369:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 682,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9369:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 685,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9378:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9369:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9401:3:0",
                      "subExpression": {
                        "id": 690,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "9401:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 692,
                    "nodeType": "ExpressionStatement",
                    "src": "9401:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "9364:168:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 712,
                      "name": "legislatorPayout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 668,
                      "src": "9580:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9600:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9580:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 728,
                  "nodeType": "IfStatement",
                  "src": "9576:167:0",
                  "trueBody": {
                    "id": 727,
                    "nodeType": "Block",
                    "src": "9603:140:0",
                    "statements": [
                      {
                        "assignments": [
                          716
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 716,
                            "mutability": "mutable",
                            "name": "sponsor",
                            "nameLocation": "9625:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 727,
                            "src": "9617:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 715,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9617:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 721,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 719,
                              "name": "_billId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 488,
                              "src": "9668:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 717,
                              "name": "billOracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "9635:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OracleInterface_$946",
                                "typeString": "contract OracleInterface"
                              }
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getBillSponsorAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 940,
                            "src": "9635:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9635:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9617:59:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 723,
                              "name": "sponsor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 716,
                              "src": "9706:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 724,
                              "name": "legislatorPayout",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "9715:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 722,
                            "name": "_payOutWinnings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 348,
                            "src": "9690:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9690:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 726,
                        "nodeType": "ExpressionStatement",
                        "src": "9690:42:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 729,
                      "name": "_transferToHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 377,
                      "src": "9800:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9800:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 731,
                  "nodeType": "ExpressionStatement",
                  "src": "9800:18:0"
                },
                {
                  "expression": {
                    "id": 736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 732,
                        "name": "billPaidOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "9862:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 734,
                      "indexExpression": {
                        "id": 733,
                        "name": "_billId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 488,
                        "src": "9874:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9862:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9885:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9862:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 737,
                  "nodeType": "ExpressionStatement",
                  "src": "9862:27:0"
                }
              ]
            },
            "documentation": {
              "id": 486,
              "nodeType": "StructuredDocumentation",
              "src": "7048:195:0",
              "text": "@notice calculates how much to pay out to each winner, then pays each winner the appropriate amount\n @param _billId the unique id of the bill\n @param _outcome the bill's outcome"
            },
            "id": 739,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOutForBill",
            "nameLocation": "7257:14:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "mutability": "mutable",
                  "name": "_billId",
                  "nameLocation": "7280:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "7272:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 487,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7272:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 491,
                  "mutability": "mutable",
                  "name": "_outcome",
                  "nameLocation": "7317:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "7289:36:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BillOutcome_$891",
                    "typeString": "enum OracleInterface.BillOutcome"
                  },
                  "typeName": {
                    "id": 490,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 489,
                      "name": "OracleInterface.BillOutcome",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 891,
                      "src": "7289:27:0"
                    },
                    "referencedDeclaration": 891,
                    "src": "7289:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BillOutcome_$891",
                      "typeString": "enum OracleInterface.BillOutcome"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7271:55:0"
            },
            "returnParameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7335:0:0"
            },
            "scope": 828,
            "src": "7248:2648:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 781,
              "nodeType": "Block",
              "src": "10225:240:0",
              "statements": [
                {
                  "assignments": [
                    754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 754,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "10263:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 781,
                      "src": "10235:29:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bill_$887_memory_ptr",
                        "typeString": "struct OracleInterface.Bill"
                      },
                      "typeName": {
                        "id": 753,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 752,
                          "name": "OracleInterface.Bill",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 887,
                          "src": "10235:20:0"
                        },
                        "referencedDeclaration": 887,
                        "src": "10235:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bill_$887_storage_ptr",
                          "typeString": "struct OracleInterface.Bill"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 758,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 756,
                        "name": "_billId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 742,
                        "src": "10275:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 755,
                      "name": "getBill",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "10267:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_Bill_$887_memory_ptr_$",
                        "typeString": "function (bytes32) view returns (struct OracleInterface.Bill memory)"
                      }
                    },
                    "id": 757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10267:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bill_$887_memory_ptr",
                      "typeString": "struct OracleInterface.Bill memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10235:48:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_BillOutcome_$891",
                        "typeString": "enum OracleInterface.BillOutcome"
                      },
                      "id": 764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 759,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 754,
                          "src": "10298:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bill_$887_memory_ptr",
                            "typeString": "struct OracleInterface.Bill memory"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "outcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 886,
                        "src": "10298:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BillOutcome_$891",
                          "typeString": "enum OracleInterface.BillOutcome"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 761,
                            "name": "OracleInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "10311:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_OracleInterface_$946_$",
                              "typeString": "type(contract OracleInterface)"
                            }
                          },
                          "id": 762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "BillOutcome",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 891,
                          "src": "10311:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_BillOutcome_$891_$",
                            "typeString": "type(enum OracleInterface.BillOutcome)"
                          }
                        },
                        "id": 763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Pending",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 888,
                        "src": "10311:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BillOutcome_$891",
                          "typeString": "enum OracleInterface.BillOutcome"
                        }
                      },
                      "src": "10298:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "10350:21:0",
                      "subExpression": {
                        "baseExpression": {
                          "id": 765,
                          "name": "billPaidOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "10351:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 767,
                        "indexExpression": {
                          "id": 766,
                          "name": "_billId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 742,
                          "src": "10363:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10351:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10298:73:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 777,
                  "nodeType": "IfStatement",
                  "src": "10294:138:0",
                  "trueBody": {
                    "id": 776,
                    "nodeType": "Block",
                    "src": "10373:59:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 771,
                              "name": "_billId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 742,
                              "src": "10402:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 772,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 754,
                                "src": "10411:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Bill_$887_memory_ptr",
                                  "typeString": "struct OracleInterface.Bill memory"
                                }
                              },
                              "id": 773,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "outcome",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 886,
                              "src": "10411:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BillOutcome_$891",
                                "typeString": "enum OracleInterface.BillOutcome"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_enum$_BillOutcome_$891",
                                "typeString": "enum OracleInterface.BillOutcome"
                              }
                            ],
                            "id": 770,
                            "name": "_payOutForBill",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 739,
                            "src": "10387:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_enum$_BillOutcome_$891_$returns$__$",
                              "typeString": "function (bytes32,enum OracleInterface.BillOutcome)"
                            }
                          },
                          "id": 774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10387:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 775,
                        "nodeType": "ExpressionStatement",
                        "src": "10387:34:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "id": 778,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 754,
                      "src": "10449:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bill_$887_memory_ptr",
                        "typeString": "struct OracleInterface.Bill memory"
                      }
                    },
                    "id": 779,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "outcome",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 886,
                    "src": "10449:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BillOutcome_$891",
                      "typeString": "enum OracleInterface.BillOutcome"
                    }
                  },
                  "functionReturnParameters": 749,
                  "id": 780,
                  "nodeType": "Return",
                  "src": "10442:16:0"
                }
              ]
            },
            "documentation": {
              "id": 740,
              "nodeType": "StructuredDocumentation",
              "src": "9903:220:0",
              "text": "@notice check the outcome of the given bill; if ready, will trigger calculation of payout, and actual payout to winners\n @param _billId the id of the bill to check\n @return the outcome of the given bill"
            },
            "functionSelector": "52311c14",
            "id": 782,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 745,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 744,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 979,
                  "src": "10176:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10176:9:0"
              }
            ],
            "name": "checkOutcome",
            "nameLocation": "10137:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 742,
                  "mutability": "mutable",
                  "name": "_billId",
                  "nameLocation": "10158:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "10150:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 741,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10150:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10149:17:0"
            },
            "returnParameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 748,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 782,
                  "src": "10195:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BillOutcome_$891",
                    "typeString": "enum OracleInterface.BillOutcome"
                  },
                  "typeName": {
                    "id": 747,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 746,
                      "name": "OracleInterface.BillOutcome",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 891,
                      "src": "10195:27:0"
                    },
                    "referencedDeclaration": 891,
                    "src": "10195:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BillOutcome_$891",
                      "typeString": "enum OracleInterface.BillOutcome"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10194:29:0"
            },
            "scope": 828,
            "src": "10128:337:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 806,
              "nodeType": "Block",
              "src": "10831:146:0",
              "statements": [
                {
                  "expression": {
                    "id": 794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 792,
                      "name": "billOracleAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "10841:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 793,
                      "name": "_oracleAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 785,
                      "src": "10858:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10841:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 795,
                  "nodeType": "ExpressionStatement",
                  "src": "10841:31:0"
                },
                {
                  "expression": {
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 796,
                      "name": "billOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "10882:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OracleInterface_$946",
                        "typeString": "contract OracleInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 798,
                          "name": "billOracleAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "10911:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 797,
                        "name": "OracleInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 946,
                        "src": "10895:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OracleInterface_$946_$",
                          "typeString": "type(contract OracleInterface)"
                        }
                      },
                      "id": 799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10895:31:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OracleInterface_$946",
                        "typeString": "contract OracleInterface"
                      }
                    },
                    "src": "10882:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OracleInterface_$946",
                      "typeString": "contract OracleInterface"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "10882:44:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 802,
                        "name": "billOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "10943:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleInterface_$946",
                          "typeString": "contract OracleInterface"
                        }
                      },
                      "id": 803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "testConnection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 945,
                      "src": "10943:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$__$returns$_t_bool_$",
                        "typeString": "function () pure external returns (bool)"
                      }
                    },
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10943:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 791,
                  "id": 805,
                  "nodeType": "Return",
                  "src": "10936:34:0"
                }
              ]
            },
            "documentation": {
              "id": 783,
              "nodeType": "StructuredDocumentation",
              "src": "10472:270:0",
              "text": "@notice sets the address of the oracle contract to use\n @dev setting a wrong address may result in false return value, or error\n @param _oracleAddress the address of the oracle\n @return true if connection to the new oracle address was successful"
            },
            "functionSelector": "4c69c00f",
            "id": 807,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 788,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 787,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 979,
                  "src": "10806:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10806:9:0"
              }
            ],
            "name": "setOracleAddress",
            "nameLocation": "10756:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 785,
                  "mutability": "mutable",
                  "name": "_oracleAddress",
                  "nameLocation": "10781:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "10773:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 784,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10773:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10772:24:0"
            },
            "returnParameters": {
              "id": 791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 790,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 807,
                  "src": "10825:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10825:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10824:6:0"
            },
            "scope": 828,
            "src": "10747:230:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 815,
              "nodeType": "Block",
              "src": "11157:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 813,
                    "name": "billOracleAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28,
                    "src": "11174:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 812,
                  "id": 814,
                  "nodeType": "Return",
                  "src": "11167:21:0"
                }
              ]
            },
            "documentation": {
              "id": 808,
              "nodeType": "StructuredDocumentation",
              "src": "10983:109:0",
              "text": "@notice gets the address of the oracle being used\n @return the address of the currently set oracle"
            },
            "functionSelector": "b18b78dd",
            "id": 816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOracleAddress",
            "nameLocation": "11106:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11122:2:0"
            },
            "returnParameters": {
              "id": 812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 811,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "11148:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11148:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11147:9:0"
            },
            "scope": 828,
            "src": "11097:98:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 826,
              "nodeType": "Block",
              "src": "11369:51:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 822,
                        "name": "billOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "11386:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleInterface_$946",
                          "typeString": "contract OracleInterface"
                        }
                      },
                      "id": 823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "testConnection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 945,
                      "src": "11386:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$__$returns$_t_bool_$",
                        "typeString": "function () pure external returns (bool)"
                      }
                    },
                    "id": 824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11386:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 821,
                  "id": 825,
                  "nodeType": "Return",
                  "src": "11379:34:0"
                }
              ]
            },
            "documentation": {
              "id": 817,
              "nodeType": "StructuredDocumentation",
              "src": "11201:104:0",
              "text": "@notice for testing; tests that the oracle is callable\n @return true if connection successful"
            },
            "functionSelector": "2ce3707e",
            "id": 827,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOracleConnection",
            "nameLocation": "11319:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11339:2:0"
            },
            "returnParameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 820,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 827,
                  "src": "11363:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 819,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11363:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11362:6:0"
            },
            "scope": 828,
            "src": "11310:110:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 829,
        "src": "263:11159:0",
        "usedErrors": []
      }
    ],
    "src": "32:11391:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-07-14T08:37:42.812Z",
  "devdoc": {
    "author": "Oliver Song",
    "kind": "dev",
    "methods": {
      "checkOutcome(bytes32)": {
        "params": {
          "_billId": "the id of the bill to check"
        },
        "returns": {
          "_0": "the outcome of the given bill"
        }
      },
      "getBill(bytes32)": {
        "params": {
          "_billId": "the id of the desired bill"
        }
      },
      "getBillCommitments(bytes32)": {
        "params": {
          "_billId": "the id of the desired bill"
        },
        "returns": {
          "_0": "array of Commitments"
        }
      },
      "getCommitableBills()": {
        "returns": {
          "_0": "array of bill ids"
        }
      },
      "getOracleAddress()": {
        "returns": {
          "_0": "the address of the currently set oracle"
        }
      },
      "getUserCommitment(bytes32)": {
        "params": {
          "_billId": "the id of the desired bill"
        },
        "returns": {
          "amount": "commitment amount, or 0 if no commitment found",
          "inSupport": "in support of bill or not, or 0 if no commitment found"
        }
      },
      "getUserCommitments()": {
        "returns": {
          "_0": "array of bill ids"
        }
      },
      "placeCommitment(uint256,bytes32,bool)": {
        "params": {
          "_amount": "the id of the bill on which to commitment",
          "_billId": "the id of the bill on which to commitment",
          "_inSupport": "commitment in favor of bill passing (vs against)"
        }
      },
      "setOracleAddress(address)": {
        "details": "setting a wrong address may result in false return value, or error",
        "params": {
          "_oracleAddress": "the address of the oracle"
        },
        "returns": {
          "_0": "true if connection to the new oracle address was successful"
        }
      },
      "testOracleConnection()": {
        "returns": {
          "_0": "true if connection successful"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Commitments",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "checkOutcome(bytes32)": {
        "notice": "check the outcome of the given bill; if ready, will trigger calculation of payout, and actual payout to winners"
      },
      "getBill(bytes32)": {
        "notice": "returns the full data of the specified bill"
      },
      "getBillCommitments(bytes32)": {
        "notice": "gets the current commitments for the bill"
      },
      "getCommitableBills()": {
        "notice": "gets a list ids of all currently commitable bill"
      },
      "getMostRecentBill()": {
        "notice": "returns the full data of the most recent commitable bill"
      },
      "getOracleAddress()": {
        "notice": "gets the address of the oracle being used"
      },
      "getUserCommitment(bytes32)": {
        "notice": "gets a user's commitment"
      },
      "getUserCommitments()": {
        "notice": "gets the current bills on which the user has commitments"
      },
      "placeCommitment(uint256,bytes32,bool)": {
        "notice": "places a non-rescindable commitment on the given bill"
      },
      "setOracleAddress(address)": {
        "notice": "sets the address of the oracle contract to use"
      },
      "testOracleConnection()": {
        "notice": "for testing; tests that the oracle is callable"
      }
    },
    "notice": "Takes commitments and handles payouts for bill outcomes",
    "version": 1
  }
}