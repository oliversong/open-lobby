{
  "contractName": "Commitments",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Transferral",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCommitableBills",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_billId",
          "type": "bytes32"
        }
      ],
      "name": "getBill",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "amendsBill",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "sponsor",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "sponsorAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "dateOfIntroduction",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "committees",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "latestAction",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "latestActionDate",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "legislationNumber",
              "type": "string"
            },
            {
              "internalType": "enum OracleInterface.BillOutcome",
              "name": "outcome",
              "type": "uint8"
            }
          ],
          "internalType": "struct OracleInterface.Bill",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getMostRecentBill",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "amendsBill",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "sponsor",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "sponsorAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "dateOfIntroduction",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "committees",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "latestAction",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "latestActionDate",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "legislationNumber",
              "type": "string"
            },
            {
              "internalType": "enum OracleInterface.BillOutcome",
              "name": "outcome",
              "type": "uint8"
            }
          ],
          "internalType": "struct OracleInterface.Bill",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getUserCommitments",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_billId",
          "type": "bytes32"
        }
      ],
      "name": "getBillCommitments",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "billId",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "inSupport",
              "type": "bool"
            }
          ],
          "internalType": "struct Commitments.Commitment[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_billId",
          "type": "bytes32"
        }
      ],
      "name": "getUserCommitment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "inSupport",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_billId",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "_inSupport",
          "type": "bool"
        }
      ],
      "name": "placeCommitment",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "sendPendingPayouts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_billId",
          "type": "bytes32"
        }
      ],
      "name": "checkOutcomeAndGeneratePayouts",
      "outputs": [
        {
          "internalType": "enum OracleInterface.BillOutcome",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_oracleAddress",
          "type": "address"
        }
      ],
      "name": "setOracleAddress",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOracleAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "testOracleConnection",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Transferral\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_billId\",\"type\":\"bytes32\"}],\"name\":\"checkOutcomeAndGeneratePayouts\",\"outputs\":[{\"internalType\":\"enum OracleInterface.BillOutcome\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_billId\",\"type\":\"bytes32\"}],\"name\":\"getBill\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"amendsBill\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sponsor\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"sponsorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dateOfIntroduction\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"committees\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"latestAction\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"latestActionDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"legislationNumber\",\"type\":\"string\"},{\"internalType\":\"enum OracleInterface.BillOutcome\",\"name\":\"outcome\",\"type\":\"uint8\"}],\"internalType\":\"struct OracleInterface.Bill\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_billId\",\"type\":\"bytes32\"}],\"name\":\"getBillCommitments\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"billId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inSupport\",\"type\":\"bool\"}],\"internalType\":\"struct Commitments.Commitment[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCommitableBills\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMostRecentBill\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"amendsBill\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"sponsor\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"sponsorAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dateOfIntroduction\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"committees\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"latestAction\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"latestActionDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"legislationNumber\",\"type\":\"string\"},{\"internalType\":\"enum OracleInterface.BillOutcome\",\"name\":\"outcome\",\"type\":\"uint8\"}],\"internalType\":\"struct OracleInterface.Bill\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOracleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_billId\",\"type\":\"bytes32\"}],\"name\":\"getUserCommitment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"inSupport\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserCommitments\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_billId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"_inSupport\",\"type\":\"bool\"}],\"name\":\"placeCommitment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendPendingPayouts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracleAddress\",\"type\":\"address\"}],\"name\":\"setOracleAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOracleConnection\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Oliver Song\",\"kind\":\"dev\",\"methods\":{\"checkOutcomeAndGeneratePayouts(bytes32)\":{\"params\":{\"_billId\":\"the id of the bill to check\"},\"returns\":{\"_0\":\"the outcome of the given bill\"}},\"getBill(bytes32)\":{\"params\":{\"_billId\":\"the id of the desired bill\"}},\"getBillCommitments(bytes32)\":{\"params\":{\"_billId\":\"the id of the desired bill\"},\"returns\":{\"_0\":\"array of Commitments\"}},\"getCommitableBills()\":{\"returns\":{\"_0\":\"array of bill ids\"}},\"getOracleAddress()\":{\"returns\":{\"_0\":\"the address of the currently set oracle\"}},\"getUserCommitment(bytes32)\":{\"params\":{\"_billId\":\"the id of the desired bill\"},\"returns\":{\"amount\":\"commitment amount, or 0 if no commitment found\",\"inSupport\":\"in support of bill or not, or 0 if no commitment found\"}},\"getUserCommitments()\":{\"returns\":{\"_0\":\"array of bill ids\"}},\"placeCommitment(uint256,bytes32,bool)\":{\"params\":{\"_amount\":\"the id of the bill on which to commitment\",\"_billId\":\"the id of the bill on which to commitment\",\"_inSupport\":\"commitment in favor of bill passing (vs against)\"}},\"setOracleAddress(address)\":{\"details\":\"setting a wrong address may result in false return value, or error\",\"params\":{\"_oracleAddress\":\"the address of the oracle\"},\"returns\":{\"_0\":\"true if connection to the new oracle address was successful\"}},\"testOracleConnection()\":{\"returns\":{\"_0\":\"true if connection successful\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Commitments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkOutcomeAndGeneratePayouts(bytes32)\":{\"notice\":\"check the outcome of the given bill; if ready, will trigger calculation of payout, and actual payout to winners\"},\"getBill(bytes32)\":{\"notice\":\"returns the full data of the specified bill\"},\"getBillCommitments(bytes32)\":{\"notice\":\"gets the current commitments for the bill\"},\"getCommitableBills()\":{\"notice\":\"gets a list ids of all currently commitable bill\"},\"getMostRecentBill()\":{\"notice\":\"returns the full data of the most recent commitable bill\"},\"getOracleAddress()\":{\"notice\":\"gets the address of the oracle being used\"},\"getUserCommitment(bytes32)\":{\"notice\":\"gets a user's commitment\"},\"getUserCommitments()\":{\"notice\":\"gets the current bills on which the user has commitments\"},\"placeCommitment(uint256,bytes32,bool)\":{\"notice\":\"places a non-rescindable commitment on the given bill\"},\"sendPendingPayouts()\":{\"notice\":\"pays users\"},\"setOracleAddress(address)\":{\"notice\":\"sets the address of the oracle contract to use\"},\"testOracleConnection()\":{\"notice\":\"for testing; tests that the oracle is callable\"}},\"notice\":\"Takes commitments and handles payouts for bill outcomes\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Commitments.sol\":\"Commitments\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Commitments.sol\":{\"keccak256\":\"0xde7c39ce502a5b86e327c43a47e9b002ca4a5e3c7f9fd2e085fd6a04324a44b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17be44f24be507f9c3ad7db647f660766fab34f38b2fc0989b583f7ef9660ac8\",\"dweb:/ipfs/QmeQq4wvwyATwYgY9Zdm7YEABrrBw23Z5X3DqRjhcbvLaP\"]},\"project:/contracts/OracleInterface.sol\":{\"keccak256\":\"0xb43b589abf31eb4af0226ca7ba73a993ed8b1e1c32ffff9dc8463099341b23a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8c3564ed9b66175c75cae5e45d6b3b6926be4b70e05899571c65c77beb437c1\",\"dweb:/ipfs/QmS4eDkoPPJEJ6obFyEdn9P8jXLaxFS7ssqZsz2KXy5bK4\"]},\"project:/contracts/Ownable.sol\":{\"keccak256\":\"0x36590ed9936e54f6bcf78724e37194bc81164251b3a8a511de2aec6068d22e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b836d8766d0945a102b3eb7d5ef20e7c1f95ed4b681024d15b95a329dc62c85\",\"dweb:/ipfs/QmcBxMuUphyQ2pAaVEvDtNF7fZ5PphHRw3JcBxVe7eXd5f\"]},\"project:/contracts/SafeMath.sol\":{\"keccak256\":\"0x1c40ff10e515e41f566c70340548c736bcf4a47dab402a5878b7785f5f3b7306\",\"urls\":[\"bzz-raw://81d9f9a7ffa2b8122635eedbd4667b5dfe27079e9b466194a60a0056e2a61123\",\"dweb:/ipfs/QmYbSdgLDaZbJBEVMKS2jVAstydzNvUVUjBYJLKskZrtcg\"]}},\"version\":1}",
  "bytecode": "0x6080604052600580546001600160a01b031990811690915560068054909116905564e8d4a51000600755600260085534801561003a57600080fd5b50600080546001600160a01b03191633179055611b2c8061005c6000396000f3fe6080604052600436106100dd5760003560e01c806371fe7e011161007f5780638da5cb5b116100595780638da5cb5b146102495780639aeeb70914610281578063b18b78dd14610296578063f2fde38b146102b457600080fd5b806371fe7e01146101e557806379d57d30146101fa5780637bef7ce11461022757600080fd5b80634326d601116100bb5780634326d601146101505780634c69c00f1461017d578063528de27f1461019d5780635f0012fe146101d257600080fd5b80631a4bd9a6146100e25780632ce3707e146100f9578063342c196c14610123575b600080fd5b3480156100ee57600080fd5b506100f76102d4565b005b34801561010557600080fd5b5061010e61037f565b60405190151581526020015b60405180910390f35b34801561012f57600080fd5b5061014361013e3660046113ee565b6103f2565b60405161011a919061149b565b34801561015c57600080fd5b5061017061016b3660046113ee565b610471565b60405161011a91906115af565b34801561018957600080fd5b5061010e6101983660046115d2565b6104ed565b3480156101a957600080fd5b506101bd6101b83660046113ee565b61058e565b6040805192835290151560208301520161011a565b6100f76101e03660046115fd565b61065d565b3480156101f157600080fd5b5061014361094c565b34801561020657600080fd5b5061021a6102153660046113ee565b6109c5565b60405161011a9190611636565b34801561023357600080fd5b5061023c610a67565b60405161011a91906116a5565b34801561025557600080fd5b50600054610269906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b34801561028d57600080fd5b5061023c610ad9565b3480156102a257600080fd5b506005546001600160a01b0316610269565b3480156102c057600080fd5b506100f76102cf3660046115d2565b610b3a565b6000546001600160a01b031633146102eb57600080fd5b60005b600454811015610368576103566004828154811061030e5761030e6116e9565b6000918252602090912060029091020154600480546001600160a01b03909216918490811061033f5761033f6116e9565b906000526020600020906002020160010154610bbf565b8061036081611715565b9150506102ee565b50610371610c4a565b61037d6004600061132d565b565b60065460408051630d04a85760e21b815290516000926001600160a01b031691633412a15c9160048083019260209291908290030181865afa1580156103c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ed919061172e565b905090565b6103fa61134e565b600654604051630d0b065b60e21b8152600481018490526001600160a01b039091169063342c196c90602401600060405180830381865afa158015610443573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261046b9190810190611842565b92915050565b600080546001600160a01b0316331461048957600080fd5b6000610494836103f2565b9050600081610140015160028111156104af576104af611463565b141580156104cc575060008381526003602052604090205460ff16155b156104e0576104e083826101400151610cd7565b610140015190505b919050565b600080546001600160a01b0316331461050557600080fd5b600580546001600160a01b0384166001600160a01b03199182168117909255600680549091168217905560408051630d04a85760e21b81529051633412a15c916004808201926020929091908290030181865afa15801561056a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046b919061172e565b60008181526002602052604081208190815b815481101561065057336001600160a01b03168282815481106105c5576105c56116e9565b60009182526020909120600490910201546001600160a01b03160361063e578181815481106105f6576105f66116e9565b90600052602060002090600402016002015482828154811061061a5761061a6116e9565b6000918252602090912060036004909202010154909660ff90911695509350505050565b8061064881611715565b9150506105a0565b5060009485945092505050565b82341461066957600080fd5b6007543410156106d85760405162461bcd60e51b815260206004820152602f60248201527f436f6d6d69746d656e7420616d6f756e74206d757374206265203e3d206d696e60448201526e1a5b5d5b4818dbdb5b5a5d1b595b9d608a1b60648201526084015b60405180910390fd5b6006546040516001625c874f60e01b03198152600481018490526001600160a01b039091169063ffa378b190602401602060405180830381865afa158015610724573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610748919061172e565b6107945760405162461bcd60e51b815260206004820152601860248201527f5370656369666965642062696c6c206e6f7420666f756e64000000000000000060448201526064016106cf565b61079e338361111d565b6107ea5760405162461bcd60e51b815260206004820152601760248201527f436f6d6d69746d656e74206973206e6f742076616c696400000000000000000060448201526064016106cf565b600654604051631b1a69a360e21b8152600481018490526001600160a01b0390911690636c69a68c90602401602060405180830381865afa158015610833573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610857919061172e565b6108a35760405162461bcd60e51b815260206004820152601c60248201527f42696c6c206e6f74206f70656e20666f7220636f6d6d69746d656e740000000060448201526064016106cf565b60008281526002602081815260408084208151608081018352338082528185018981523483860190815298151560608401908152845460018082018755958a52878a209451600490910290940180546001600160a01b0319166001600160a01b0390951694909417845590518385015597519582019590955595516003909601805460ff1916961515969096179095559183528381529082208054938401815582529020015550565b61095461134e565b60065460405163b6f0623f60e01b8152600160048201526001600160a01b039091169063b6f0623f90602401600060405180830381865afa15801561099d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ed9190810190611842565b606060026000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610a5c576000848152602090819020604080516080810182526004860290920180546001600160a01b03168352600180820154848601526002820154928401929092526003015460ff161515606083015290835290920191016109fa565b505050509050919050565b600654604080516314b45ce960e21b815290516060926001600160a01b0316916352d173a49160048083019260009291908290030181865afa158015610ab1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ed91908101906119ad565b33600090815260016020908152604091829020805483518184028101840190945280845260609392830182828015610b3057602002820191906000526020600020905b815481526020019060010190808311610b1c575b5050505050905090565b6000546001600160a01b03163314610b5157600080fd5b6001600160a01b038116610b6457600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080513081526001600160a01b03841660208201529081018290527f070ded6608617d161bf9727e9573e5b793a0bc0cff5c7029cf2e78afe1d471ec9060600160405180910390a18015610c46576040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610c44573d6000803e3d6000fd5b505b5050565b600054604080513081526001600160a01b0390921660208301524782820152517f070ded6608617d161bf9727e9573e5b793a0bc0cff5c7029cf2e78afe1d471ec9181900360600190a1471561037d57600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610cd4573d6000803e3d6000fd5b50565b6000816002811115610ceb57610ceb611463565b03610cf557600080fd5b6000828152600260205260408120908080805b8454811015610da1576000858281548110610d2557610d256116e9565b9060005260206000209060040201600201549050610d6b87878481548110610d4f57610d4f6116e9565b600091825260209091206003600490920201015460ff166111e0565b15610d8157610d7a8482611244565b9350610d8e565b610d8b8582611244565b94505b5080610d9981611715565b915050610d08565b50610dac8383611244565b905060005b8454811015610fdf576000858281548110610dce57610dce6116e9565b60009182526020909120600490910201546001600160a01b031690506001876002811115610dfe57610dfe611463565b03610eea57610e1987878481548110610d4f57610d4f6116e9565b15610ee5576000610e508585898681548110610e3757610e376116e9565b9060005260206000209060040201600201546000611262565b604080518082019091526001600160a01b038481168252602082019283526004805460018101825560009190915291517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b600290930292830180546001600160a01b0319169190921617905590517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90910155505b610fcc565b610f0087878481548110610d4f57610d4f6116e9565b15610fcc576000610f378585898681548110610f1e57610f1e6116e9565b9060005260206000209060040201600201546001611262565b604080518082019091526001600160a01b038481168252602082019283526004805460018101825560009190915291517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b600290930292830180546001600160a01b0319169190921617905590517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90910155505b5080610fd781611715565b915050610db1565b506001856002811115610ff457610ff4611463565b036110fd57600654604051634f2e6cd960e01b8152600481018890526000916001600160a01b031690634f2e6cd990602401602060405180830381865afa158015611043573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110679190611a53565b604080518082019091526001600160a01b039182168152602081018581526004805460018101825560009190915291517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b600290930292830180546001600160a01b031916919094161790925590517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90910155505b50505060009283525050600360205260409020805460ff19166001179055565b6001600160a01b03821660009081526001602090815260408083208054825181850281018501909352808352849383018282801561117a57602002820191906000526020600020905b815481526020019060010190808311611166575b505050505090506000815111156111d65760005b81518110156111d457838282815181106111aa576111aa6116e9565b6020026020010151036111c25760009250505061046b565b806111cc81611715565b91505061118e565b505b5060019392505050565b6000808360028111156111f5576111f5611463565b036111ff57600080fd5b600183600281111561121357611213611463565b0361122e5781156112265750600161046b565b50600061046b565b811561123c5750600061046b565b50600161046b565b60006112508284611a70565b90508281101561046b5761046b611a88565b60008061126f84876112e4565b905060008315611295578461128487846112f7565b61128e9190611a70565b90506112a2565b61129f86836112f7565b90505b806000036112af57506007545b6112cf60646112c9600854846112f790919063ffffffff16565b906112e4565b6112d99082611a9e565b979650505050505050565b60006112f08284611ab5565b9392505050565b6000826000036113095750600061046b565b6113138284611ad7565b9050816113208483611ab5565b1461046b5761046b611a88565b5080546000825560020290600052602060002090810190610cd491906113c4565b60405180610160016040528060008019168152602001606081526020016060815260200160006001600160a01b03168152602001600081526020016060815260200160608152602001600081526020016060815260200160608152602001600060028111156113bf576113bf611463565b905290565b5b808211156113ea5780546001600160a01b0319168155600060018201556002016113c5565b5090565b60006020828403121561140057600080fd5b5035919050565b60005b8381101561142257818101518382015260200161140a565b83811115611431576000848401525b50505050565b6000815180845261144f816020860160208601611407565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6003811061149757634e487b7160e01b600052602160045260246000fd5b9052565b6020815281516020820152600060208301516101608060408501526114c4610180850183611437565b91506040850151601f19808685030160608701526114e28483611437565b93506060870151915061150060808701836001600160a01b03169052565b608087015160a087015260a08701519150808685030160c08701526115258483611437565b935060c08701519150808685030160e08701526115428483611437565b935060e087015191506101008281880152808801519250506101208187860301818801526115708584611437565b94508088015192505061014081878603018188015261158f8584611437565b945080880151925050506115a582860182611479565b5090949350505050565b6020810161046b8284611479565b6001600160a01b0381168114610cd457600080fd5b6000602082840312156115e457600080fd5b81356112f0816115bd565b8015158114610cd457600080fd5b60008060006060848603121561161257600080fd5b8335925060208401359150604084013561162b816115ef565b809150509250925092565b602080825282518282018190526000919060409081850190868401855b8281101561169857815180516001600160a01b031685528681015187860152858101518686015260609081015115159085015260809093019290850190600101611653565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156116dd578351835292840192918401916001016116c1565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611727576117276116ff565b5060010190565b60006020828403121561174057600080fd5b81516112f0816115ef565b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff811182821017156117855761178561174b565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156117b4576117b461174b565b604052919050565b600082601f8301126117cd57600080fd5b815167ffffffffffffffff8111156117e7576117e761174b565b6117fa601f8201601f191660200161178b565b81815284602083860101111561180f57600080fd5b611820826020830160208701611407565b949350505050565b80516104e8816115bd565b8051600381106104e857600080fd5b60006020828403121561185457600080fd5b815167ffffffffffffffff8082111561186c57600080fd5b90830190610160828603121561188157600080fd5b611889611761565b8251815260208301518281111561189f57600080fd5b6118ab878286016117bc565b6020830152506040830151828111156118c357600080fd5b6118cf878286016117bc565b6040830152506118e160608401611828565b60608201526080830151608082015260a08301518281111561190257600080fd5b61190e878286016117bc565b60a08301525060c08301518281111561192657600080fd5b611932878286016117bc565b60c08301525060e083015160e0820152610100808401518381111561195657600080fd5b611962888287016117bc565b828401525050610120808401518381111561197c57600080fd5b611988888287016117bc565b828401525050610140915061199e828401611833565b91810191909152949350505050565b600060208083850312156119c057600080fd5b825167ffffffffffffffff808211156119d857600080fd5b818501915085601f8301126119ec57600080fd5b8151818111156119fe576119fe61174b565b8060051b9150611a0f84830161178b565b8181529183018401918481019088841115611a2957600080fd5b938501935b83851015611a4757845182529385019390850190611a2e565b98975050505050505050565b600060208284031215611a6557600080fd5b81516112f0816115bd565b60008219821115611a8357611a836116ff565b500190565b634e487b7160e01b600052600160045260246000fd5b600082821015611ab057611ab06116ff565b500390565b600082611ad257634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611af157611af16116ff565b50029056fea26469706673582212206ac6ce2816c5b7c4ccd2f4fd69c5900d55812ba3bfa4194e0b935114b2e4295464736f6c634300080e0033",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c806371fe7e011161007f5780638da5cb5b116100595780638da5cb5b146102495780639aeeb70914610281578063b18b78dd14610296578063f2fde38b146102b457600080fd5b806371fe7e01146101e557806379d57d30146101fa5780637bef7ce11461022757600080fd5b80634326d601116100bb5780634326d601146101505780634c69c00f1461017d578063528de27f1461019d5780635f0012fe146101d257600080fd5b80631a4bd9a6146100e25780632ce3707e146100f9578063342c196c14610123575b600080fd5b3480156100ee57600080fd5b506100f76102d4565b005b34801561010557600080fd5b5061010e61037f565b60405190151581526020015b60405180910390f35b34801561012f57600080fd5b5061014361013e3660046113ee565b6103f2565b60405161011a919061149b565b34801561015c57600080fd5b5061017061016b3660046113ee565b610471565b60405161011a91906115af565b34801561018957600080fd5b5061010e6101983660046115d2565b6104ed565b3480156101a957600080fd5b506101bd6101b83660046113ee565b61058e565b6040805192835290151560208301520161011a565b6100f76101e03660046115fd565b61065d565b3480156101f157600080fd5b5061014361094c565b34801561020657600080fd5b5061021a6102153660046113ee565b6109c5565b60405161011a9190611636565b34801561023357600080fd5b5061023c610a67565b60405161011a91906116a5565b34801561025557600080fd5b50600054610269906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b34801561028d57600080fd5b5061023c610ad9565b3480156102a257600080fd5b506005546001600160a01b0316610269565b3480156102c057600080fd5b506100f76102cf3660046115d2565b610b3a565b6000546001600160a01b031633146102eb57600080fd5b60005b600454811015610368576103566004828154811061030e5761030e6116e9565b6000918252602090912060029091020154600480546001600160a01b03909216918490811061033f5761033f6116e9565b906000526020600020906002020160010154610bbf565b8061036081611715565b9150506102ee565b50610371610c4a565b61037d6004600061132d565b565b60065460408051630d04a85760e21b815290516000926001600160a01b031691633412a15c9160048083019260209291908290030181865afa1580156103c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ed919061172e565b905090565b6103fa61134e565b600654604051630d0b065b60e21b8152600481018490526001600160a01b039091169063342c196c90602401600060405180830381865afa158015610443573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261046b9190810190611842565b92915050565b600080546001600160a01b0316331461048957600080fd5b6000610494836103f2565b9050600081610140015160028111156104af576104af611463565b141580156104cc575060008381526003602052604090205460ff16155b156104e0576104e083826101400151610cd7565b610140015190505b919050565b600080546001600160a01b0316331461050557600080fd5b600580546001600160a01b0384166001600160a01b03199182168117909255600680549091168217905560408051630d04a85760e21b81529051633412a15c916004808201926020929091908290030181865afa15801561056a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046b919061172e565b60008181526002602052604081208190815b815481101561065057336001600160a01b03168282815481106105c5576105c56116e9565b60009182526020909120600490910201546001600160a01b03160361063e578181815481106105f6576105f66116e9565b90600052602060002090600402016002015482828154811061061a5761061a6116e9565b6000918252602090912060036004909202010154909660ff90911695509350505050565b8061064881611715565b9150506105a0565b5060009485945092505050565b82341461066957600080fd5b6007543410156106d85760405162461bcd60e51b815260206004820152602f60248201527f436f6d6d69746d656e7420616d6f756e74206d757374206265203e3d206d696e60448201526e1a5b5d5b4818dbdb5b5a5d1b595b9d608a1b60648201526084015b60405180910390fd5b6006546040516001625c874f60e01b03198152600481018490526001600160a01b039091169063ffa378b190602401602060405180830381865afa158015610724573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610748919061172e565b6107945760405162461bcd60e51b815260206004820152601860248201527f5370656369666965642062696c6c206e6f7420666f756e64000000000000000060448201526064016106cf565b61079e338361111d565b6107ea5760405162461bcd60e51b815260206004820152601760248201527f436f6d6d69746d656e74206973206e6f742076616c696400000000000000000060448201526064016106cf565b600654604051631b1a69a360e21b8152600481018490526001600160a01b0390911690636c69a68c90602401602060405180830381865afa158015610833573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610857919061172e565b6108a35760405162461bcd60e51b815260206004820152601c60248201527f42696c6c206e6f74206f70656e20666f7220636f6d6d69746d656e740000000060448201526064016106cf565b60008281526002602081815260408084208151608081018352338082528185018981523483860190815298151560608401908152845460018082018755958a52878a209451600490910290940180546001600160a01b0319166001600160a01b0390951694909417845590518385015597519582019590955595516003909601805460ff1916961515969096179095559183528381529082208054938401815582529020015550565b61095461134e565b60065460405163b6f0623f60e01b8152600160048201526001600160a01b039091169063b6f0623f90602401600060405180830381865afa15801561099d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ed9190810190611842565b606060026000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610a5c576000848152602090819020604080516080810182526004860290920180546001600160a01b03168352600180820154848601526002820154928401929092526003015460ff161515606083015290835290920191016109fa565b505050509050919050565b600654604080516314b45ce960e21b815290516060926001600160a01b0316916352d173a49160048083019260009291908290030181865afa158015610ab1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ed91908101906119ad565b33600090815260016020908152604091829020805483518184028101840190945280845260609392830182828015610b3057602002820191906000526020600020905b815481526020019060010190808311610b1c575b5050505050905090565b6000546001600160a01b03163314610b5157600080fd5b6001600160a01b038116610b6457600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080513081526001600160a01b03841660208201529081018290527f070ded6608617d161bf9727e9573e5b793a0bc0cff5c7029cf2e78afe1d471ec9060600160405180910390a18015610c46576040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610c44573d6000803e3d6000fd5b505b5050565b600054604080513081526001600160a01b0390921660208301524782820152517f070ded6608617d161bf9727e9573e5b793a0bc0cff5c7029cf2e78afe1d471ec9181900360600190a1471561037d57600080546040516001600160a01b03909116914780156108fc02929091818181858888f19350505050158015610cd4573d6000803e3d6000fd5b50565b6000816002811115610ceb57610ceb611463565b03610cf557600080fd5b6000828152600260205260408120908080805b8454811015610da1576000858281548110610d2557610d256116e9565b9060005260206000209060040201600201549050610d6b87878481548110610d4f57610d4f6116e9565b600091825260209091206003600490920201015460ff166111e0565b15610d8157610d7a8482611244565b9350610d8e565b610d8b8582611244565b94505b5080610d9981611715565b915050610d08565b50610dac8383611244565b905060005b8454811015610fdf576000858281548110610dce57610dce6116e9565b60009182526020909120600490910201546001600160a01b031690506001876002811115610dfe57610dfe611463565b03610eea57610e1987878481548110610d4f57610d4f6116e9565b15610ee5576000610e508585898681548110610e3757610e376116e9565b9060005260206000209060040201600201546000611262565b604080518082019091526001600160a01b038481168252602082019283526004805460018101825560009190915291517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b600290930292830180546001600160a01b0319169190921617905590517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90910155505b610fcc565b610f0087878481548110610d4f57610d4f6116e9565b15610fcc576000610f378585898681548110610f1e57610f1e6116e9565b9060005260206000209060040201600201546001611262565b604080518082019091526001600160a01b038481168252602082019283526004805460018101825560009190915291517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b600290930292830180546001600160a01b0319169190921617905590517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90910155505b5080610fd781611715565b915050610db1565b506001856002811115610ff457610ff4611463565b036110fd57600654604051634f2e6cd960e01b8152600481018890526000916001600160a01b031690634f2e6cd990602401602060405180830381865afa158015611043573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110679190611a53565b604080518082019091526001600160a01b039182168152602081018581526004805460018101825560009190915291517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b600290930292830180546001600160a01b031916919094161790925590517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c90910155505b50505060009283525050600360205260409020805460ff19166001179055565b6001600160a01b03821660009081526001602090815260408083208054825181850281018501909352808352849383018282801561117a57602002820191906000526020600020905b815481526020019060010190808311611166575b505050505090506000815111156111d65760005b81518110156111d457838282815181106111aa576111aa6116e9565b6020026020010151036111c25760009250505061046b565b806111cc81611715565b91505061118e565b505b5060019392505050565b6000808360028111156111f5576111f5611463565b036111ff57600080fd5b600183600281111561121357611213611463565b0361122e5781156112265750600161046b565b50600061046b565b811561123c5750600061046b565b50600161046b565b60006112508284611a70565b90508281101561046b5761046b611a88565b60008061126f84876112e4565b905060008315611295578461128487846112f7565b61128e9190611a70565b90506112a2565b61129f86836112f7565b90505b806000036112af57506007545b6112cf60646112c9600854846112f790919063ffffffff16565b906112e4565b6112d99082611a9e565b979650505050505050565b60006112f08284611ab5565b9392505050565b6000826000036113095750600061046b565b6113138284611ad7565b9050816113208483611ab5565b1461046b5761046b611a88565b5080546000825560020290600052602060002090810190610cd491906113c4565b60405180610160016040528060008019168152602001606081526020016060815260200160006001600160a01b03168152602001600081526020016060815260200160608152602001600081526020016060815260200160608152602001600060028111156113bf576113bf611463565b905290565b5b808211156113ea5780546001600160a01b0319168155600060018201556002016113c5565b5090565b60006020828403121561140057600080fd5b5035919050565b60005b8381101561142257818101518382015260200161140a565b83811115611431576000848401525b50505050565b6000815180845261144f816020860160208601611407565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b6003811061149757634e487b7160e01b600052602160045260246000fd5b9052565b6020815281516020820152600060208301516101608060408501526114c4610180850183611437565b91506040850151601f19808685030160608701526114e28483611437565b93506060870151915061150060808701836001600160a01b03169052565b608087015160a087015260a08701519150808685030160c08701526115258483611437565b935060c08701519150808685030160e08701526115428483611437565b935060e087015191506101008281880152808801519250506101208187860301818801526115708584611437565b94508088015192505061014081878603018188015261158f8584611437565b945080880151925050506115a582860182611479565b5090949350505050565b6020810161046b8284611479565b6001600160a01b0381168114610cd457600080fd5b6000602082840312156115e457600080fd5b81356112f0816115bd565b8015158114610cd457600080fd5b60008060006060848603121561161257600080fd5b8335925060208401359150604084013561162b816115ef565b809150509250925092565b602080825282518282018190526000919060409081850190868401855b8281101561169857815180516001600160a01b031685528681015187860152858101518686015260609081015115159085015260809093019290850190600101611653565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156116dd578351835292840192918401916001016116c1565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611727576117276116ff565b5060010190565b60006020828403121561174057600080fd5b81516112f0816115ef565b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff811182821017156117855761178561174b565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156117b4576117b461174b565b604052919050565b600082601f8301126117cd57600080fd5b815167ffffffffffffffff8111156117e7576117e761174b565b6117fa601f8201601f191660200161178b565b81815284602083860101111561180f57600080fd5b611820826020830160208701611407565b949350505050565b80516104e8816115bd565b8051600381106104e857600080fd5b60006020828403121561185457600080fd5b815167ffffffffffffffff8082111561186c57600080fd5b90830190610160828603121561188157600080fd5b611889611761565b8251815260208301518281111561189f57600080fd5b6118ab878286016117bc565b6020830152506040830151828111156118c357600080fd5b6118cf878286016117bc565b6040830152506118e160608401611828565b60608201526080830151608082015260a08301518281111561190257600080fd5b61190e878286016117bc565b60a08301525060c08301518281111561192657600080fd5b611932878286016117bc565b60c08301525060e083015160e0820152610100808401518381111561195657600080fd5b611962888287016117bc565b828401525050610120808401518381111561197c57600080fd5b611988888287016117bc565b828401525050610140915061199e828401611833565b91810191909152949350505050565b600060208083850312156119c057600080fd5b825167ffffffffffffffff808211156119d857600080fd5b818501915085601f8301126119ec57600080fd5b8151818111156119fe576119fe61174b565b8060051b9150611a0f84830161178b565b8181529183018401918481019088841115611a2957600080fd5b938501935b83851015611a4757845182529385019390850190611a2e565b98975050505050505050565b600060208284031215611a6557600080fd5b81516112f0816115bd565b60008219821115611a8357611a836116ff565b500190565b634e487b7160e01b600052600160045260246000fd5b600082821015611ab057611ab06116ff565b500390565b600082611ad257634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611af157611af16116ff565b50029056fea26469706673582212206ac6ce2816c5b7c4ccd2f4fd69c5900d55812ba3bfa4194e0b935114b2e4295464736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14491:5",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:5",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "109:92:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "119:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "131:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "142:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "127:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "127:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "119:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "161:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "186:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "179:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "179:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "172:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "172:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "154:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "154:41:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "154:41:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "78:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "89:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "100:4:5",
                "type": ""
              }
            ],
            "src": "14:187:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "276:110:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "322:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "331:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "334:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "324:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "324:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "324:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "297:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "306:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "293:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "293:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "318:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "289:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "289:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "286:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "347:33:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "370:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "357:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "357:23:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "347:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "242:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "253:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "265:6:5",
                "type": ""
              }
            ],
            "src": "206:180:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "444:205:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "454:10:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "463:1:5",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "458:1:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "523:63:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "548:3:5"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "553:1:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "544:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "544:11:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "567:3:5"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "572:1:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "563:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "563:11:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "557:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "557:18:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "537:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "537:39:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "537:39:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "484:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "487:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "481:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "481:13:5"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "495:19:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "497:15:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "506:1:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "509:2:5",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "502:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "502:10:5"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "497:1:5"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "477:3:5",
                    "statements": []
                  },
                  "src": "473:113:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "612:31:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "625:3:5"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "630:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "621:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "621:16:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "639:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "614:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "614:27:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "614:27:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "601:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "604:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "598:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "598:13:5"
                  },
                  "nodeType": "YulIf",
                  "src": "595:48:5"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "422:3:5",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "427:3:5",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "432:6:5",
                "type": ""
              }
            ],
            "src": "391:258:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "704:208:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "714:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "734:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "728:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "728:12:5"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "718:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "756:3:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "761:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "749:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "749:19:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "749:19:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "803:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "810:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "799:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "799:16:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "821:3:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "826:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "817:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "817:14:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "833:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "777:21:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "777:63:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "777:63:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "849:57:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "864:3:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "877:6:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "885:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "873:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "873:15:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "894:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "890:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "890:7:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "869:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "869:29:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "860:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "860:39:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "901:4:5",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "856:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "856:50:5"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "849:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "681:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "688:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "696:3:5",
                "type": ""
              }
            ],
            "src": "654:258:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "961:60:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "978:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "987:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1002:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1007:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "998:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "998:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1011:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "994:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "994:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "983:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "983:31:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "971:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "971:44:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "971:44:5"
                }
              ]
            },
            "name": "abi_encode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "945:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "952:3:5",
                "type": ""
              }
            ],
            "src": "917:104:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1058:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1082:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1087:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1078:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1078:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1068:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1068:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1068:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1115:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1118:4:5",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1108:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1108:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1108:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1139:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1142:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1132:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1132:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1132:15:5"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1026:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1211:186:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1253:111:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1274:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1281:3:5",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1286:10:5",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1277:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1277:20:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1267:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1267:31:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1267:31:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1318:1:5",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1321:4:5",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1311:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1311:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1311:15:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1346:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1349:4:5",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1339:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1339:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1339:15:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1234:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1241:1:5",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1231:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1231:12:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1224:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1224:20:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1221:143:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1380:3:5"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1385:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1373:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1373:18:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1373:18:5"
                }
              ]
            },
            "name": "abi_encode_enum_BillOutcome",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1195:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1202:3:5",
                "type": ""
              }
            ],
            "src": "1158:239:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1545:1705:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1562:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1573:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1555:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1555:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1555:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1596:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1607:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1592:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1592:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1618:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1612:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1612:13:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1585:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1585:41:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1585:41:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1635:42:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1665:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1673:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1661:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1661:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1655:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1655:22:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0",
                      "nodeType": "YulTypedName",
                      "src": "1639:12:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1686:16:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1696:6:5",
                    "type": "",
                    "value": "0x0160"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1690:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1722:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1733:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1718:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1718:18:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1738:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1711:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1711:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1711:30:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1750:66:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0",
                        "nodeType": "YulIdentifier",
                        "src": "1782:12:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1800:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1811:3:5",
                            "type": "",
                            "value": "384"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1796:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1796:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1764:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1764:52:5"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "1754:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1825:44:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1857:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1865:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1853:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1853:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1847:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1847:22:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_1",
                      "nodeType": "YulTypedName",
                      "src": "1829:14:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1878:17:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1892:2:5",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1888:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1888:7:5"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1882:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1915:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1926:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1911:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1911:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "1939:6:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1947:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1935:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1935:22:5"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1959:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1931:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1931:31:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1904:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1904:59:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1904:59:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1972:55:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0_1",
                        "nodeType": "YulIdentifier",
                        "src": "2004:14:5"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "2020:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "1986:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1986:41:5"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "1976:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2036:44:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2068:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2076:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2064:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2064:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2058:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2058:22:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_2",
                      "nodeType": "YulTypedName",
                      "src": "2040:14:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0_2",
                        "nodeType": "YulIdentifier",
                        "src": "2108:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2128:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2139:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2124:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2124:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2089:18:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2089:55:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2089:55:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2164:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2175:3:5",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2160:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2160:19:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2191:6:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2199:3:5",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2187:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2187:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2181:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2181:23:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2153:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2153:52:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2153:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2214:45:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2246:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2254:3:5",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2242:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2242:16:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2236:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2236:23:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_3",
                      "nodeType": "YulTypedName",
                      "src": "2218:14:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2279:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2290:3:5",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2275:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2275:19:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "tail_2",
                                "nodeType": "YulIdentifier",
                                "src": "2304:6:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2312:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2300:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2300:22:5"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2324:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2296:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2296:31:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2268:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2268:60:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2268:60:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2337:55:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0_3",
                        "nodeType": "YulIdentifier",
                        "src": "2369:14:5"
                      },
                      {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "2385:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2351:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2351:41:5"
                  },
                  "variables": [
                    {
                      "name": "tail_3",
                      "nodeType": "YulTypedName",
                      "src": "2341:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2401:45:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2433:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2441:3:5",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2429:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2429:16:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2423:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2423:23:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_4",
                      "nodeType": "YulTypedName",
                      "src": "2405:14:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2466:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2477:3:5",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2462:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2462:19:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "tail_3",
                                "nodeType": "YulIdentifier",
                                "src": "2491:6:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2499:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2487:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2487:22:5"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2511:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2483:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2483:31:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2455:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2455:60:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2455:60:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2524:55:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0_4",
                        "nodeType": "YulIdentifier",
                        "src": "2556:14:5"
                      },
                      {
                        "name": "tail_3",
                        "nodeType": "YulIdentifier",
                        "src": "2572:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2538:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2538:41:5"
                  },
                  "variables": [
                    {
                      "name": "tail_4",
                      "nodeType": "YulTypedName",
                      "src": "2528:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2588:33:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2608:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2616:3:5",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2604:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2604:16:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2598:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2598:23:5"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2592:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2630:13:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2640:3:5",
                    "type": "",
                    "value": "256"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "2634:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2663:9:5"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2674:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2659:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2659:18:5"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2679:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2652:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2652:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2652:30:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2691:44:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2723:6:5"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2731:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2719:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2719:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2713:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2713:22:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_5",
                      "nodeType": "YulTypedName",
                      "src": "2695:14:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2744:13:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2754:3:5",
                    "type": "",
                    "value": "288"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "2748:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2777:9:5"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2788:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2773:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2773:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "tail_4",
                                "nodeType": "YulIdentifier",
                                "src": "2801:6:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2809:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2797:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2797:22:5"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2821:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2793:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2793:31:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2766:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2766:59:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2766:59:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2834:55:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0_5",
                        "nodeType": "YulIdentifier",
                        "src": "2866:14:5"
                      },
                      {
                        "name": "tail_4",
                        "nodeType": "YulIdentifier",
                        "src": "2882:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "2848:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2848:41:5"
                  },
                  "variables": [
                    {
                      "name": "tail_5",
                      "nodeType": "YulTypedName",
                      "src": "2838:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2898:44:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2930:6:5"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "2938:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2926:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2926:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2920:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2920:22:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_6",
                      "nodeType": "YulTypedName",
                      "src": "2902:14:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2951:13:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2961:3:5",
                    "type": "",
                    "value": "320"
                  },
                  "variables": [
                    {
                      "name": "_6",
                      "nodeType": "YulTypedName",
                      "src": "2955:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2984:9:5"
                          },
                          {
                            "name": "_6",
                            "nodeType": "YulIdentifier",
                            "src": "2995:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2980:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2980:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "tail_5",
                                "nodeType": "YulIdentifier",
                                "src": "3008:6:5"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3016:9:5"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3004:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3004:22:5"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3028:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3000:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3000:31:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2973:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2973:59:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2973:59:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3041:55:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memberValue0_6",
                        "nodeType": "YulIdentifier",
                        "src": "3073:14:5"
                      },
                      {
                        "name": "tail_5",
                        "nodeType": "YulIdentifier",
                        "src": "3089:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3055:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3055:41:5"
                  },
                  "variables": [
                    {
                      "name": "tail_6",
                      "nodeType": "YulTypedName",
                      "src": "3045:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3105:44:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3137:6:5"
                          },
                          {
                            "name": "_6",
                            "nodeType": "YulIdentifier",
                            "src": "3145:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3133:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3133:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3127:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3127:22:5"
                  },
                  "variables": [
                    {
                      "name": "memberValue0_7",
                      "nodeType": "YulTypedName",
                      "src": "3109:14:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memberValue0_7",
                        "nodeType": "YulIdentifier",
                        "src": "3186:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3206:9:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3217:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3202:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3202:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_BillOutcome",
                      "nodeType": "YulIdentifier",
                      "src": "3158:27:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3158:63:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3158:63:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3230:14:5",
                  "value": {
                    "name": "tail_6",
                    "nodeType": "YulIdentifier",
                    "src": "3238:6:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3230:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Bill_$900_memory_ptr__to_t_struct$_Bill_$900_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1514:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1525:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1536:4:5",
                "type": ""
              }
            ],
            "src": "1402:1848:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3369:97:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3379:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3391:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3402:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3387:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3387:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3379:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3442:6:5"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3450:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_BillOutcome",
                      "nodeType": "YulIdentifier",
                      "src": "3414:27:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3414:46:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3414:46:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_BillOutcome_$904__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3338:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3349:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3360:4:5",
                "type": ""
              }
            ],
            "src": "3255:211:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3516:86:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3580:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3589:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3592:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3582:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3582:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3582:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3539:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3550:5:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3565:3:5",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3570:1:5",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3561:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3561:11:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3574:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3557:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3557:19:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3546:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3546:31:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3536:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3536:42:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3529:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3529:50:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3526:70:5"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3505:5:5",
                "type": ""
              }
            ],
            "src": "3471:131:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3677:177:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3723:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3732:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3735:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3725:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3725:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3725:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3698:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3707:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3694:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3694:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3719:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3690:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3690:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "3687:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3748:36:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3774:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3761:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3761:23:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3752:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3818:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3793:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3793:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3793:31:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3833:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3843:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3833:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3643:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3654:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3666:6:5",
                "type": ""
              }
            ],
            "src": "3607:247:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3982:135:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3992:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4004:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4015:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4000:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4000:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3992:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4034:9:5"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4045:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4027:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4027:25:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4027:25:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4072:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4083:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4068:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4068:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4102:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4095:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4095:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4088:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4088:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4061:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4061:50:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4061:50:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3943:9:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3954:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3962:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3973:4:5",
                "type": ""
              }
            ],
            "src": "3859:258:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4164:76:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4218:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4227:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4230:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4220:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4220:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4220:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4187:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4208:5:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4201:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4201:13:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4194:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4194:21:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4184:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4184:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4177:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4177:40:5"
                  },
                  "nodeType": "YulIf",
                  "src": "4174:60:5"
                }
              ]
            },
            "name": "validator_revert_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4153:5:5",
                "type": ""
              }
            ],
            "src": "4122:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4346:276:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4392:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4401:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4404:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4394:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4394:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4394:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4367:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4376:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4363:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4363:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4388:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4359:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4359:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "4356:52:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4417:33:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4440:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4427:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4427:23:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4417:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4459:42:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4486:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4497:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4482:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4482:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4469:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4469:32:5"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4459:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4510:45:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4540:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4551:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4536:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4536:18:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4523:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4523:32:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4514:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4586:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "4564:21:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4564:28:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4564:28:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4601:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4611:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4601:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_bytes32t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4296:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4307:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4319:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4327:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4335:6:5",
                "type": ""
              }
            ],
            "src": "4245:377:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4830:764:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4840:12:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4850:2:5",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4844:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4861:32:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4879:9:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4890:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4875:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4875:18:5"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "4865:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4909:9:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4920:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4902:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4902:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4902:21:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4932:17:5",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "4943:6:5"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4936:3:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4958:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4978:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4972:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4972:13:5"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4962:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "5001:6:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5009:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4994:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4994:22:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4994:22:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5025:12:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5035:2:5",
                    "type": "",
                    "value": "64"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "5029:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5046:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5057:9:5"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "5068:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5053:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5053:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5046:3:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5080:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5098:6:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5106:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5094:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5094:15:5"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "5084:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5118:10:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5127:1:5",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5122:1:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5186:382:5",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5200:23:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5216:6:5"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5210:5:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5210:13:5"
                        },
                        "variables": [
                          {
                            "name": "_3",
                            "nodeType": "YulTypedName",
                            "src": "5204:2:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5243:3:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "5258:2:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "5252:5:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5252:9:5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5271:3:5",
                                          "type": "",
                                          "value": "160"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5276:1:5",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "5267:3:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5267:11:5"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5280:1:5",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "5263:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5263:19:5"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "5248:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5248:35:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5236:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5236:48:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5236:48:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5308:3:5"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5313:2:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5304:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5304:12:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "5328:2:5"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "5332:2:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5324:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5324:11:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5318:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5318:18:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5297:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5297:40:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5297:40:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5361:3:5"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "5366:2:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5357:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5357:12:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_3",
                                      "nodeType": "YulIdentifier",
                                      "src": "5381:2:5"
                                    },
                                    {
                                      "name": "_2",
                                      "nodeType": "YulIdentifier",
                                      "src": "5385:2:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5377:3:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5377:11:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5371:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5371:18:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5350:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5350:40:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5350:40:5"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5403:14:5",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5413:4:5",
                          "type": "",
                          "value": "0x60"
                        },
                        "variables": [
                          {
                            "name": "_4",
                            "nodeType": "YulTypedName",
                            "src": "5407:2:5",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5441:3:5"
                                },
                                {
                                  "name": "_4",
                                  "nodeType": "YulIdentifier",
                                  "src": "5446:2:5"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5437:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5437:12:5"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "5475:2:5"
                                            },
                                            {
                                              "name": "_4",
                                              "nodeType": "YulIdentifier",
                                              "src": "5479:2:5"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "5471:3:5"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5471:11:5"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "5465:5:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5465:18:5"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "iszero",
                                    "nodeType": "YulIdentifier",
                                    "src": "5458:6:5"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5458:26:5"
                                }
                              ],
                              "functionName": {
                                "name": "iszero",
                                "nodeType": "YulIdentifier",
                                "src": "5451:6:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5451:34:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5430:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5430:56:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5430:56:5"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5499:21:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5510:3:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5515:4:5",
                              "type": "",
                              "value": "0x80"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5506:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5506:14:5"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5499:3:5"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5533:25:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5547:6:5"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5555:2:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5543:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5543:15:5"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5533:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5148:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5151:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5145:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5145:13:5"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5159:18:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5161:14:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5170:1:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5173:1:5",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5166:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5166:9:5"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5161:1:5"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5141:3:5",
                    "statements": []
                  },
                  "src": "5137:431:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5577:11:5",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5585:3:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5577:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_Commitment_$64_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Commitment_$64_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4799:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4810:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4821:4:5",
                "type": ""
              }
            ],
            "src": "4627:967:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5750:481:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5760:12:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5770:2:5",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5764:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5781:32:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5799:9:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5810:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5795:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5795:18:5"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "5785:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5829:9:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5840:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5822:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5822:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5822:21:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5852:17:5",
                  "value": {
                    "name": "tail_1",
                    "nodeType": "YulIdentifier",
                    "src": "5863:6:5"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "5856:3:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5878:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5898:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5892:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5892:13:5"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5882:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "5921:6:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5929:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5914:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5914:22:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5914:22:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5945:25:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5956:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5967:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5952:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5952:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5945:3:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5979:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5997:6:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6005:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5993:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5993:15:5"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "5983:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6017:10:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6026:1:5",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6021:1:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6085:120:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6106:3:5"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6117:6:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6111:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6111:13:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6099:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6099:26:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6099:26:5"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6138:19:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6149:3:5"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6154:2:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6145:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6145:12:5"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6138:3:5"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6170:25:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6184:6:5"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "6192:2:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6180:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6180:15:5"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6170:6:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6047:1:5"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6050:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6044:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6044:13:5"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6058:18:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6060:14:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6069:1:5"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6072:1:5",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6065:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6065:9:5"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6060:1:5"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6040:3:5",
                    "statements": []
                  },
                  "src": "6036:169:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6214:11:5",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "6222:3:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6214:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5719:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5730:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5741:4:5",
                "type": ""
              }
            ],
            "src": "5599:632:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6337:102:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6347:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6359:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6370:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6355:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6355:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6347:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6389:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6404:6:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6420:3:5",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6425:1:5",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6416:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6416:11:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6429:1:5",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6412:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6412:19:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6400:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6400:32:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6382:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6382:51:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6382:51:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6306:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6317:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6328:4:5",
                "type": ""
              }
            ],
            "src": "6236:203:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6476:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6493:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6500:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6505:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6496:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6496:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6486:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6486:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6486:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6533:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6536:4:5",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6526:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6526:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6526:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6557:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6560:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6550:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6550:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6550:15:5"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "6444:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6608:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6625:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6632:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6637:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6628:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6628:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6618:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6618:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6618:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6665:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6668:4:5",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6658:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6658:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6658:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6689:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6692:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6682:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6682:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6682:15:5"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6576:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6755:88:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6786:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6788:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6788:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6788:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6771:5:5"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6782:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6778:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6778:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6768:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6768:17:5"
                  },
                  "nodeType": "YulIf",
                  "src": "6765:43:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6817:20:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6828:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6835:1:5",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6824:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6824:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "6817:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6737:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "6747:3:5",
                "type": ""
              }
            ],
            "src": "6708:135:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6926:167:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6972:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6981:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6984:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6974:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6974:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6974:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6947:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6956:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6943:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6943:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6968:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6939:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6939:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "6936:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6997:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7016:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7010:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7010:16:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7001:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7057:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_bool",
                      "nodeType": "YulIdentifier",
                      "src": "7035:21:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7035:28:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7035:28:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7072:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7082:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7072:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6892:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6903:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6915:6:5",
                "type": ""
              }
            ],
            "src": "6848:245:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7199:76:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7209:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7221:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7232:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7217:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7217:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7209:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7251:9:5"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7262:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7244:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7244:25:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7244:25:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7168:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7179:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7190:4:5",
                "type": ""
              }
            ],
            "src": "7098:177:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7312:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7329:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7336:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7341:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7332:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7332:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7322:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7322:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7322:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7369:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7372:4:5",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7362:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7362:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7362:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7393:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7396:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7386:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7386:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7386:15:5"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "7280:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7458:209:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7468:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7484:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7478:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7478:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "7468:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7496:37:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7518:6:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7526:6:5",
                        "type": "",
                        "value": "0x0160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7514:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7514:19:5"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "7500:10:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7608:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7610:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7610:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7610:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7551:10:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7563:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7548:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7548:34:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7587:10:5"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7599:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7584:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7584:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "7545:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7545:62:5"
                  },
                  "nodeType": "YulIf",
                  "src": "7542:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7646:2:5",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "7650:10:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7639:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7639:22:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7639:22:5"
                }
              ]
            },
            "name": "allocate_memory_2282",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7447:6:5",
                "type": ""
              }
            ],
            "src": "7412:255:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7717:230:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7727:19:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7743:2:5",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7737:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7737:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "7727:6:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7755:58:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "7777:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "7793:4:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7799:2:5",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7789:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7789:13:5"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7808:2:5",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "7804:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7804:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7785:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7785:27:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7773:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7773:40:5"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "7759:10:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7888:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "7890:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7890:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7890:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7831:10:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7843:18:5",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7828:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7828:34:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "7867:10:5"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "7879:6:5"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7864:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7864:22:5"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "7825:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7825:62:5"
                  },
                  "nodeType": "YulIf",
                  "src": "7822:88:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7926:2:5",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "7930:10:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7919:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7919:22:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7919:22:5"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "7697:4:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7706:6:5",
                "type": ""
              }
            ],
            "src": "7672:275:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8016:433:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8065:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8074:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8077:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8067:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8067:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8067:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8044:6:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8052:4:5",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8040:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8040:17:5"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "8059:3:5"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "8036:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8036:27:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8029:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8029:35:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8026:55:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8090:23:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8106:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8100:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8100:13:5"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8094:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8152:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "8154:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8154:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8154:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8128:2:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8132:18:5",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8125:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8125:26:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8122:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8183:70:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8226:2:5"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8230:4:5",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8222:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8222:13:5"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8241:2:5",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8237:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8237:7:5"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8218:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8218:27:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8247:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8214:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8214:38:5"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "8198:15:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8198:55:5"
                  },
                  "variables": [
                    {
                      "name": "array_1",
                      "nodeType": "YulTypedName",
                      "src": "8187:7:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array_1",
                        "nodeType": "YulIdentifier",
                        "src": "8269:7:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8278:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8262:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8262:19:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8262:19:5"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8329:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8338:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8341:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8331:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8331:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8331:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8304:6:5"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "8312:2:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8300:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8300:15:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8317:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8296:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8296:26:5"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "8324:3:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8293:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8293:35:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8290:55:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "8380:6:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8388:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8376:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8376:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "array_1",
                            "nodeType": "YulIdentifier",
                            "src": "8399:7:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8408:4:5",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8395:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8395:18:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "8415:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "8354:21:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8354:64:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8354:64:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8427:16:5",
                  "value": {
                    "name": "array_1",
                    "nodeType": "YulIdentifier",
                    "src": "8436:7:5"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "8427:5:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "7990:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7998:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "8006:5:5",
                "type": ""
              }
            ],
            "src": "7952:497:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8514:78:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8524:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8539:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8533:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8533:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8524:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8580:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "8555:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8555:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8555:31:5"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8493:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8504:5:5",
                "type": ""
              }
            ],
            "src": "8454:138:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8666:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8676:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8691:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8685:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8685:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8676:5:5"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8731:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8740:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8743:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8733:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8733:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8733:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8720:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8727:1:5",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8717:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8717:12:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8710:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8710:20:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8707:40:5"
                }
              ]
            },
            "name": "abi_decode_enum_BillOutcome_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8645:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8656:5:5",
                "type": ""
              }
            ],
            "src": "8597:156:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8860:1784:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8906:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8915:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8918:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8908:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8908:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8908:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8881:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8890:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8877:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8877:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8902:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8873:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8873:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8870:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8931:30:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8951:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8945:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8945:16:5"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "8935:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8970:28:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8980:18:5",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8974:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9025:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9034:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9037:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9027:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9027:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9027:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9013:6:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9021:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9010:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9010:14:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9007:34:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9050:32:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9064:9:5"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9075:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9060:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9060:22:5"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "9054:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9124:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9133:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9136:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9126:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9126:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9126:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9102:7:5"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "9111:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9098:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9098:16:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9116:6:5",
                        "type": "",
                        "value": "0x0160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9094:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9094:29:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9091:49:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9149:35:5",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_memory_2282",
                      "nodeType": "YulIdentifier",
                      "src": "9162:20:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9162:22:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "9153:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9200:5:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "9213:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9207:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9207:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9193:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9193:24:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9193:24:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9226:34:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "9252:2:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9256:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9248:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9248:11:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9242:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9242:18:5"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "9230:8:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9289:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9298:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9301:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9291:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9291:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9291:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "9275:8:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9285:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9272:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9272:16:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9269:36:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9325:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9332:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9321:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9321:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9370:2:5"
                              },
                              {
                                "name": "offset_1",
                                "nodeType": "YulIdentifier",
                                "src": "9374:8:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9366:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9366:17:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9385:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9337:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9337:56:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9314:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9314:80:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9314:80:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9403:34:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "9429:2:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9433:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9425:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9425:11:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9419:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9419:18:5"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "9407:8:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9466:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9475:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9478:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9468:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9468:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9468:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "9452:8:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9462:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9449:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9449:16:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9446:36:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9502:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9509:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9498:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9498:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9547:2:5"
                              },
                              {
                                "name": "offset_2",
                                "nodeType": "YulIdentifier",
                                "src": "9551:8:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9543:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9543:17:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9562:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9514:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9514:56:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9491:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9491:80:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9491:80:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9591:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9598:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9587:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9587:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9637:2:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9641:2:5",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9633:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9633:11:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9603:29:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9603:42:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9580:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9580:66:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9580:66:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9666:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9673:3:5",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9662:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9662:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9689:2:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9693:3:5",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9685:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9685:12:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9679:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9679:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9655:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9655:44:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9655:44:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9708:35:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "9734:2:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9738:3:5",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9730:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9730:12:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9724:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9724:19:5"
                  },
                  "variables": [
                    {
                      "name": "offset_3",
                      "nodeType": "YulTypedName",
                      "src": "9712:8:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9772:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9781:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9784:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9774:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9774:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9774:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_3",
                        "nodeType": "YulIdentifier",
                        "src": "9758:8:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9768:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9755:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9755:16:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9752:36:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9808:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9815:3:5",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9804:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9804:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "9854:2:5"
                              },
                              {
                                "name": "offset_3",
                                "nodeType": "YulIdentifier",
                                "src": "9858:8:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9850:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9850:17:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9869:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9821:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9821:56:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9797:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9797:81:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9797:81:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9887:35:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "9913:2:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9917:3:5",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9909:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9909:12:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9903:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9903:19:5"
                  },
                  "variables": [
                    {
                      "name": "offset_4",
                      "nodeType": "YulTypedName",
                      "src": "9891:8:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9951:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9960:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9963:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9953:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9953:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9953:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_4",
                        "nodeType": "YulIdentifier",
                        "src": "9937:8:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9947:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9934:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9934:16:5"
                  },
                  "nodeType": "YulIf",
                  "src": "9931:36:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9987:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9994:3:5",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9983:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9983:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10033:2:5"
                              },
                              {
                                "name": "offset_4",
                                "nodeType": "YulIdentifier",
                                "src": "10037:8:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10029:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10029:17:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10048:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10000:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10000:56:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9976:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9976:81:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9976:81:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10077:5:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10084:3:5",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10073:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10073:15:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10100:2:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10104:3:5",
                                "type": "",
                                "value": "224"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10096:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10096:12:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "10090:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10090:19:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10066:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10066:44:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10066:44:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10119:13:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10129:3:5",
                    "type": "",
                    "value": "256"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "10123:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10141:34:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "10167:2:5"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "10171:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10163:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10163:11:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10157:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10157:18:5"
                  },
                  "variables": [
                    {
                      "name": "offset_5",
                      "nodeType": "YulTypedName",
                      "src": "10145:8:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10204:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10213:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10216:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10206:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10206:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10206:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_5",
                        "nodeType": "YulIdentifier",
                        "src": "10190:8:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10200:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10187:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10187:16:5"
                  },
                  "nodeType": "YulIf",
                  "src": "10184:36:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10240:5:5"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "10247:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10236:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10236:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10285:2:5"
                              },
                              {
                                "name": "offset_5",
                                "nodeType": "YulIdentifier",
                                "src": "10289:8:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10281:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10281:17:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10300:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10252:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10252:56:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10229:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10229:80:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10229:80:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10318:13:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10328:3:5",
                    "type": "",
                    "value": "288"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "10322:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10340:34:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "10366:2:5"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "10370:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10362:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10362:11:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10356:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10356:18:5"
                  },
                  "variables": [
                    {
                      "name": "offset_6",
                      "nodeType": "YulTypedName",
                      "src": "10344:8:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10403:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10412:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10415:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "10405:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10405:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10405:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_6",
                        "nodeType": "YulIdentifier",
                        "src": "10389:8:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "10399:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10386:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10386:16:5"
                  },
                  "nodeType": "YulIf",
                  "src": "10383:36:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10439:5:5"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "10446:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10435:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10435:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10484:2:5"
                              },
                              {
                                "name": "offset_6",
                                "nodeType": "YulIdentifier",
                                "src": "10488:8:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10480:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10480:17:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "10499:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_string_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10451:28:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10451:56:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10428:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10428:80:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10428:80:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10517:13:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10527:3:5",
                    "type": "",
                    "value": "320"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "10521:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10550:5:5"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "10557:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10546:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10546:14:5"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "10605:2:5"
                              },
                              {
                                "name": "_5",
                                "nodeType": "YulIdentifier",
                                "src": "10609:2:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10601:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10601:11:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_enum_BillOutcome_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "10562:38:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10562:51:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10539:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10539:75:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10539:75:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10623:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "10633:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "10623:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Bill_$900_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8826:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8837:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8849:6:5",
                "type": ""
              }
            ],
            "src": "8758:1886:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10823:237:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10840:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10851:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10833:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10833:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10833:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10874:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10885:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10870:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10870:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10890:2:5",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10863:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10863:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10863:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10913:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10924:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10909:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10909:18:5"
                      },
                      {
                        "hexValue": "436f6d6d69746d656e7420616d6f756e74206d757374206265203e3d206d696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10929:34:5",
                        "type": "",
                        "value": "Commitment amount must be >= min"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10902:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10902:62:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10902:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10984:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10995:2:5",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10980:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10980:18:5"
                      },
                      {
                        "hexValue": "696d756d20636f6d6d69746d656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11000:17:5",
                        "type": "",
                        "value": "imum commitment"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10973:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10973:45:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10973:45:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11027:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11039:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11050:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11035:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11035:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11027:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fa758ddcd0691b1462c43f70c8d239a0ebb1235dbeb8532a26952b626fb1647b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10800:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10814:4:5",
                "type": ""
              }
            ],
            "src": "10649:411:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11239:174:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11256:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11267:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11249:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11249:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11249:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11290:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11301:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11286:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11286:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11306:2:5",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11279:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11279:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11279:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11329:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11340:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11325:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11325:18:5"
                      },
                      {
                        "hexValue": "5370656369666965642062696c6c206e6f7420666f756e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11345:26:5",
                        "type": "",
                        "value": "Specified bill not found"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11318:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11318:54:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11318:54:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11381:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11393:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11404:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11389:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11389:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11381:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_82991fc044c2bd0bea42197f7c1960b35df518d3cdc9253e2195a4d5c8d5cf56__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11216:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11230:4:5",
                "type": ""
              }
            ],
            "src": "11065:348:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11592:173:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11609:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11620:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11602:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11602:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11602:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11643:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11654:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11639:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11639:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11659:2:5",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11632:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11632:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11632:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11682:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11693:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11678:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11678:18:5"
                      },
                      {
                        "hexValue": "436f6d6d69746d656e74206973206e6f742076616c6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11698:25:5",
                        "type": "",
                        "value": "Commitment is not valid"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11671:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11671:53:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11671:53:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11733:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11745:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11756:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11741:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11741:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11733:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_747dc72168f8439c429b54742d6708b5364735cc5b535e1efd5a8ea232c7b1d8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11569:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11583:4:5",
                "type": ""
              }
            ],
            "src": "11418:347:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11944:178:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11961:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11972:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11954:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11954:21:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11954:21:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11995:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12006:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11991:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11991:18:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12011:2:5",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11984:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11984:30:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11984:30:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12034:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12045:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12030:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12030:18:5"
                      },
                      {
                        "hexValue": "42696c6c206e6f74206f70656e20666f7220636f6d6d69746d656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12050:30:5",
                        "type": "",
                        "value": "Bill not open for commitment"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12023:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12023:58:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12023:58:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12090:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12102:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12113:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12098:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12098:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12090:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6c33a961069d5bf03ae6ed78e31473cca3cab60fdb6d3407dd96e8c0a73d9444__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11921:9:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11935:4:5",
                "type": ""
              }
            ],
            "src": "11770:352:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12233:830:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12243:12:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12253:2:5",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12247:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12300:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12309:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12312:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12302:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12302:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12302:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12275:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12284:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12271:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12271:23:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "12296:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "12267:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12267:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12264:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12325:30:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12345:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12339:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12339:16:5"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "12329:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12364:28:5",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12374:18:5",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "12368:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12419:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12428:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12431:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12421:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12421:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12421:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "12407:6:5"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "12415:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12404:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12404:14:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12401:34:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12444:32:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12458:9:5"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "12469:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12454:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12454:22:5"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "12448:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12524:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12533:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12536:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12526:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12526:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12526:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "12503:2:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12507:4:5",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12499:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12499:13:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "12514:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "12495:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12495:27:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "12488:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12488:35:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12485:55:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12549:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "12565:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "12559:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12559:9:5"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "12553:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12591:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "12593:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12593:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12593:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "12583:2:5"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "12587:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12580:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12580:10:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12577:36:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12622:20:5",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12636:1:5",
                        "type": "",
                        "value": "5"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "12639:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "12632:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12632:10:5"
                  },
                  "variables": [
                    {
                      "name": "_5",
                      "nodeType": "YulTypedName",
                      "src": "12626:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12651:39:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "12682:2:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12686:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12678:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12678:11:5"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "12662:15:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12662:28:5"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "12655:3:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12699:16:5",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "12712:3:5"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "12703:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "12731:3:5"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "12736:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12724:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12724:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12724:15:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12748:19:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "12759:3:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "12764:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12755:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12755:12:5"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "12748:3:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12776:34:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "12798:2:5"
                          },
                          {
                            "name": "_5",
                            "nodeType": "YulIdentifier",
                            "src": "12802:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12794:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12794:11:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "12807:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12790:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12790:20:5"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "12780:6:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12842:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12851:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12854:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12844:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12844:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12844:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "12825:6:5"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "12833:7:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "12822:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12822:19:5"
                  },
                  "nodeType": "YulIf",
                  "src": "12819:39:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12867:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "12882:2:5"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "12886:2:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12878:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12878:11:5"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "12871:3:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12954:79:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "12975:3:5"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "12986:3:5"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "12980:5:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12980:10:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "12968:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12968:23:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12968:23:5"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "13004:19:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "13015:3:5"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "13020:2:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13011:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13011:12:5"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "13004:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "12909:3:5"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "12914:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "12906:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12906:15:5"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "12922:23:5",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "12924:19:5",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "12935:3:5"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "12940:2:5"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "12931:3:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12931:12:5"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "12924:3:5"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "12902:3:5",
                    "statements": []
                  },
                  "src": "12898:135:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13042:15:5",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "13052:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13042:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12199:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "12210:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12222:6:5",
                "type": ""
              }
            ],
            "src": "12127:936:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13225:218:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13235:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13247:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13258:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13243:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13243:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13235:4:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13270:29:5",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13288:3:5",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13293:1:5",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "13284:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13284:11:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13297:1:5",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13280:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13280:19:5"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "13274:2:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13315:9:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13330:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13338:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13326:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13326:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13308:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13308:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13308:34:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13362:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13373:2:5",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13358:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13358:18:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "13382:6:5"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13390:2:5"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13378:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13378:15:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13351:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13351:43:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13351:43:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13414:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13425:2:5",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13410:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13410:18:5"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "13430:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13403:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13403:34:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13403:34:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13178:9:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13189:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13197:6:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13205:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13216:4:5",
                "type": ""
              }
            ],
            "src": "13068:375:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13529:170:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13575:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13584:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13587:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "13577:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13577:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13577:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "13550:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13559:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13546:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13546:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13571:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "13542:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13542:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "13539:52:5"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13600:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13619:9:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "13613:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13613:16:5"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "13604:5:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13663:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "13638:24:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13638:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13638:31:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13678:15:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "13688:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "13678:6:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13495:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "13506:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13518:6:5",
                "type": ""
              }
            ],
            "src": "13448:251:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13752:80:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13779:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13781:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13781:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13781:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13768:1:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13775:1:5"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "13771:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13771:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13765:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13765:13:5"
                  },
                  "nodeType": "YulIf",
                  "src": "13762:39:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13810:16:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13821:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13824:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13817:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13817:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "13810:3:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13735:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13738:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "13744:3:5",
                "type": ""
              }
            ],
            "src": "13704:128:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13869:95:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13886:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13893:3:5",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13898:10:5",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "13889:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13889:20:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13879:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13879:31:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13879:31:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13926:1:5",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13929:4:5",
                        "type": "",
                        "value": "0x01"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13919:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13919:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13919:15:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13950:1:5",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13953:4:5",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "13943:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13943:15:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13943:15:5"
                }
              ]
            },
            "name": "panic_error_0x01",
            "nodeType": "YulFunctionDefinition",
            "src": "13837:127:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14018:76:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14040:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14042:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14042:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14042:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14034:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14037:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14031:2:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14031:8:5"
                  },
                  "nodeType": "YulIf",
                  "src": "14028:34:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14071:17:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14083:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14086:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14079:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14079:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "14071:4:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14000:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14003:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "14009:4:5",
                "type": ""
              }
            ],
            "src": "13969:125:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14145:171:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14176:111:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14197:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14204:3:5",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14209:10:5",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "14200:3:5"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14200:20:5"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14190:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14190:31:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14190:31:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14241:1:5",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14244:4:5",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14234:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14234:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14234:15:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14269:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14272:4:5",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14262:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14262:15:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14262:15:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14165:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14158:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14158:9:5"
                  },
                  "nodeType": "YulIf",
                  "src": "14155:132:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14296:14:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14305:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14308:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "14301:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14301:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "14296:1:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14130:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14133:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "14139:1:5",
                "type": ""
              }
            ],
            "src": "14099:217:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14373:116:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14432:22:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14434:16:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14434:18:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14434:18:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14404:1:5"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14397:6:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14397:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14390:6:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14390:17:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14412:1:5"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14423:1:5",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "14419:3:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14419:6:5"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "14427:1:5"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "14415:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14415:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14409:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14409:21:5"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14386:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14386:45:5"
                  },
                  "nodeType": "YulIf",
                  "src": "14383:71:5"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14463:20:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14478:1:5"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14481:1:5"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "14474:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14474:9:5"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "14463:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14352:1:5",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14355:1:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "14361:7:5",
                "type": ""
              }
            ],
            "src": "14321:168:5"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_BillOutcome(value, pos)\n    {\n        if iszero(lt(value, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_struct$_Bill_$900_memory_ptr__to_t_struct$_Bill_$900_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), mload(value0))\n        let memberValue0 := mload(add(value0, 32))\n        let _1 := 0x0160\n        mstore(add(headStart, 64), _1)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 384))\n        let memberValue0_1 := mload(add(value0, 64))\n        let _2 := not(31)\n        mstore(add(headStart, 96), add(sub(tail_1, headStart), _2))\n        let tail_2 := abi_encode_string(memberValue0_1, tail_1)\n        let memberValue0_2 := mload(add(value0, 96))\n        abi_encode_address(memberValue0_2, add(headStart, 128))\n        mstore(add(headStart, 160), mload(add(value0, 128)))\n        let memberValue0_3 := mload(add(value0, 160))\n        mstore(add(headStart, 192), add(sub(tail_2, headStart), _2))\n        let tail_3 := abi_encode_string(memberValue0_3, tail_2)\n        let memberValue0_4 := mload(add(value0, 192))\n        mstore(add(headStart, 224), add(sub(tail_3, headStart), _2))\n        let tail_4 := abi_encode_string(memberValue0_4, tail_3)\n        let _3 := mload(add(value0, 224))\n        let _4 := 256\n        mstore(add(headStart, _4), _3)\n        let memberValue0_5 := mload(add(value0, _4))\n        let _5 := 288\n        mstore(add(headStart, _5), add(sub(tail_4, headStart), _2))\n        let tail_5 := abi_encode_string(memberValue0_5, tail_4)\n        let memberValue0_6 := mload(add(value0, _5))\n        let _6 := 320\n        mstore(add(headStart, _6), add(sub(tail_5, headStart), _2))\n        let tail_6 := abi_encode_string(memberValue0_6, tail_5)\n        let memberValue0_7 := mload(add(value0, _6))\n        abi_encode_enum_BillOutcome(memberValue0_7, add(headStart, _1))\n        tail := tail_6\n    }\n    function abi_encode_tuple_t_enum$_BillOutcome_$904__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        abi_encode_enum_BillOutcome(value0, headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_bytes32t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Commitment_$64_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Commitment_$64_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            let _4 := 0x60\n            mstore(add(pos, _4), iszero(iszero(mload(add(_3, _4)))))\n            pos := add(pos, 0x80)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_2282() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x0160)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory(add(offset, 0x20), add(array_1, 0x20), _1)\n        array := array_1\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_enum_BillOutcome_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_Bill_$900_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if slt(sub(dataEnd, _2), 0x0160) { revert(0, 0) }\n        let value := allocate_memory_2282()\n        mstore(value, mload(_2))\n        let offset_1 := mload(add(_2, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        mstore(add(value, 32), abi_decode_string_fromMemory(add(_2, offset_1), dataEnd))\n        let offset_2 := mload(add(_2, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        mstore(add(value, 64), abi_decode_string_fromMemory(add(_2, offset_2), dataEnd))\n        mstore(add(value, 96), abi_decode_address_fromMemory(add(_2, 96)))\n        mstore(add(value, 128), mload(add(_2, 128)))\n        let offset_3 := mload(add(_2, 160))\n        if gt(offset_3, _1) { revert(0, 0) }\n        mstore(add(value, 160), abi_decode_string_fromMemory(add(_2, offset_3), dataEnd))\n        let offset_4 := mload(add(_2, 192))\n        if gt(offset_4, _1) { revert(0, 0) }\n        mstore(add(value, 192), abi_decode_string_fromMemory(add(_2, offset_4), dataEnd))\n        mstore(add(value, 224), mload(add(_2, 224)))\n        let _3 := 256\n        let offset_5 := mload(add(_2, _3))\n        if gt(offset_5, _1) { revert(0, 0) }\n        mstore(add(value, _3), abi_decode_string_fromMemory(add(_2, offset_5), dataEnd))\n        let _4 := 288\n        let offset_6 := mload(add(_2, _4))\n        if gt(offset_6, _1) { revert(0, 0) }\n        mstore(add(value, _4), abi_decode_string_fromMemory(add(_2, offset_6), dataEnd))\n        let _5 := 320\n        mstore(add(value, _5), abi_decode_enum_BillOutcome_fromMemory(add(_2, _5)))\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fa758ddcd0691b1462c43f70c8d239a0ebb1235dbeb8532a26952b626fb1647b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"Commitment amount must be >= min\")\n        mstore(add(headStart, 96), \"imum commitment\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_82991fc044c2bd0bea42197f7c1960b35df518d3cdc9253e2195a4d5c8d5cf56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Specified bill not found\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_747dc72168f8439c429b54742d6708b5364735cc5b535e1efd5a8ea232c7b1d8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Commitment is not valid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6c33a961069d5bf03ae6ed78e31473cca3cab60fdb6d3407dd96e8c0a73d9444__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Bill not open for commitment\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n}",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "263:11456:0:-:0;;;544:44;;;-1:-1:-1;;;;;;544:44:0;;;;;;594:69;;;;;;;;720:13;686:47;;785:1;753:33;;263:11456;;;;;;;;;-1:-1:-1;541:5:3;:18;;-1:-1:-1;;;;;;541:18:3;549:10;541:18;;;263:11456:0;;;;;;",
  "deployedSourceMap": "263:11456:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9826:347;;;;;;;;;;;;;:::i;:::-;;11607:110;;;;;;;;;;;;;:::i;:::-;;;179:14:5;;172:22;154:41;;142:2;127:18;11607:110:0;;;;;;;;2079:135;;;;;;;;;;-1:-1:-1;2079:135:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;10405:357::-;;;;;;;;;;-1:-1:-1;10405:357:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;11044:230::-;;;;;;;;;;-1:-1:-1;11044:230:0;;;;;:::i;:::-;;:::i;3201:707::-;;;;;;;;;;-1:-1:-1;3201:707:0;;;;;:::i;:::-;;:::i;:::-;;;;4027:25:5;;;4095:14;;4088:22;4083:2;4068:18;;4061:50;4000:18;3201:707:0;3859:258:5;4189:976:0;;;;;;:::i;:::-;;:::i;2293:137::-;;;;;;;;;;;;;:::i;2816:::-;;;;;;;;;;-1:-1:-1;2816:137:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1842:121::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;279:20:3:-;;;;;;;;;;-1:-1:-1;279:20:3;;;;-1:-1:-1;;;;;279:20:3;;;;;;-1:-1:-1;;;;;6400:32:5;;;6382:51;;6370:2;6355:18;279:20:3;6236:203:5;2543:122:0;;;;;;;;;;;;;:::i;11394:98::-;;;;;;;;;;-1:-1:-1;11471:14:0;;-1:-1:-1;;;;;11471:14:0;11394:98;;899:188:3;;;;;;;;;;-1:-1:-1;899:188:3;;;;;:::i;:::-;;:::i;9826:347:0:-;706:5:3;;-1:-1:-1;;;;;706:5:3;692:10;:19;684:28;;;;;;9918:6:0::1;9913:118;9934:7;:14:::0;9930:18;::::1;9913:118;;;9969:51;9985:7;9993:1;9985:10;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:15:::0;10002:7:::1;:10:::0;;-1:-1:-1;;;;;9985:15:0;;::::1;::::0;10010:1;;10002:10;::::1;;;;;:::i;:::-;;;;;;;;;;;:17;;;9969:15;:51::i;:::-;9950:3:::0;::::1;::::0;::::1;:::i;:::-;;;;9913:118;;;;10088:18;:16;:18::i;:::-;10152:14;10159:7;;10152:14;:::i;:::-;9826:347::o:0;11607:110::-;11683:10;;:27;;;-1:-1:-1;;;11683:27:0;;;;11660:4;;-1:-1:-1;;;;;11683:10:0;;:25;;:27;;;;;;;;;;;;;;:10;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11676:34;;11607:110;:::o;2079:135::-;2134:27;;:::i;:::-;2180:10;;:27;;-1:-1:-1;;;2180:27:0;;;;;7244:25:5;;;-1:-1:-1;;;;;2180:10:0;;;;:18;;7217::5;;2180:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2180:27:0;;;;;;;;;;;;:::i;:::-;2173:34;2079:135;-1:-1:-1;;2079:135:0:o;10405:357::-;10490:27;706:5:3;;-1:-1:-1;;;;;706:5:3;692:10;:19;684:28;;;;;;10530:29:0::1;10562:16;10570:7;10562;:16::i;:::-;10530:48:::0;-1:-1:-1;10606:35:0::1;10593:1;:9;;;:48;;;;;;;;:::i;:::-;;;:73;;;;-1:-1:-1::0;10646:20:0::1;::::0;;;:11:::1;:20;::::0;;;;;::::1;;10645:21;10593:73;10589:140;;;10682:36;10699:7;10708:1;:9;;;10682:16;:36::i;:::-;10746:9;;::::0;;-1:-1:-1;722:1:3::1;10405:357:0::0;;;:::o;11044:230::-;11122:4;706:5:3;;-1:-1:-1;;;;;706:5:3;692:10;:19;684:28;;;;;;11138:14:0::1;:31:::0;;-1:-1:-1;;;;;11138:31:0;::::1;-1:-1:-1::0;;;;;;11138:31:0;;::::1;::::0;::::1;::::0;;;11179:10:::1;:44:::0;;;;::::1;::::0;::::1;::::0;;11240:27:::1;::::0;;-1:-1:-1;;;11240:27:0;;;;:25:::1;::::0;:27:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;11138:31;11240:27:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3201:707::-:0;3266:11;3485:26;;;:17;:26;;;;;3266:11;;;3521:198;3542:18;;3538:22;;3521:198;;;3608:10;-1:-1:-1;;;;;3585:33:0;:11;3597:1;3585:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;3585:19:0;:33;3581:128;;3646:11;3658:1;3646:14;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;3669:11;3681:1;3669:14;;;;;;;;:::i;:::-;;;;;;;;;:24;:14;;;;;:24;;3638:56;;3669:24;;;;;-1:-1:-1;3201:707:0;-1:-1:-1;;;;3201:707:0:o;3581:128::-;3562:3;;;;:::i;:::-;;;;3521:198;;;-1:-1:-1;3892:1:0;;;;-1:-1:-1;3201:707:0;-1:-1:-1;;;3201:707:0:o;4189:976::-;4308:7;4295:9;:20;4287:29;;;;;;4402:17;;4389:9;:30;;4381:90;;;;-1:-1:-1;;;4381:90:0;;10851:2:5;4381:90:0;;;10833:21:5;10890:2;10870:18;;;10863:30;10929:34;10909:18;;;10902:62;-1:-1:-1;;;10980:18:5;;;10973:45;11035:19;;4381:90:0;;;;;;;;;4528:10;;:30;;-1:-1:-1;;;;;;4528:30:0;;;;;7244:25:5;;;-1:-1:-1;;;;;4528:10:0;;;;:21;;7217:18:5;;4528:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4520:67;;;;-1:-1:-1;;;4520:67:0;;11267:2:5;4520:67:0;;;11249:21:5;11306:2;11286:18;;;11279:30;11345:26;11325:18;;;11318:54;11389:18;;4520:67:0;11065:348:5;4520:67:0;4626:39;4645:10;4657:7;4626:18;:39::i;:::-;4618:75;;;;-1:-1:-1;;;4618:75:0;;11620:2:5;4618:75:0;;;11602:21:5;11659:2;11639:18;;;11632:30;11698:25;11678:18;;;11671:53;11741:18;;4618:75:0;11418:347:5;4618:75:0;4762:10;;:33;;-1:-1:-1;;;4762:33:0;;;;;7244:25:5;;;-1:-1:-1;;;;;4762:10:0;;;;:24;;7217:18:5;;4762:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4754:74;;;;-1:-1:-1;;;4754:74:0;;11972:2:5;4754:74:0;;;11954:21:5;12011:2;11991:18;;;11984:30;12050;12030:18;;;12023:58;12098:18;;4754:74:0;11770:352:5;4754:74:0;4873:32;4908:26;;;:17;:26;;;;;;;;4961:54;;;;;;;4972:10;4961:54;;;;;;;;;4993:9;4961:54;;;;;;;;;;;;;;;4944:72;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4944:72:0;-1:-1:-1;;;;;4944:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4944:72:0;;;;;;;;;;;5090:29;;;;;;;;;5129;;;;;;;;;;;;;-1:-1:-1;4189:976:0:o;2293:137::-;2343:27;;:::i;:::-;2389:10;;:34;;-1:-1:-1;;;2389:34:0;;:10;:34;;;154:41:5;-1:-1:-1;;;;;2389:10:0;;;;:28;;127:18:5;;2389:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2389:34:0;;;;;;;;;;;;:::i;2816:137::-;2882:19;2920:17;:26;2938:7;2920:26;;;;;;;;;;;2913:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2913:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2816:137;;;:::o;1842:121::-;1928:10;;:28;;;-1:-1:-1;;;1928:28:0;;;;1893:16;;-1:-1:-1;;;;;1928:10:0;;:26;;:28;;;;;:10;;:28;;;;;;;:10;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1928:28:0;;;;;;;;;;;;:::i;2543:122::-;2647:10;2629:29;;;;:17;:29;;;;;;;;;2622:36;;;;;;;;;;;;;;;;;2594:16;;2622:36;;;2629:29;2622:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2543:122;:::o;899:188:3:-;706:5;;-1:-1:-1;;;;;706:5:3;692:10;:19;684:28;;;;;;-1:-1:-1;;;;;979:22:3;::::1;971:31;;;::::0;::::1;;1038:5;::::0;;1017:37:::1;::::0;-1:-1:-1;;;;;1017:37:3;;::::1;::::0;1038:5;::::1;::::0;1017:37:::1;::::0;::::1;1064:5;:16:::0;;-1:-1:-1;;;;;;1064:16:3::1;-1:-1:-1::0;;;;;1064:16:3;;;::::1;::::0;;;::::1;::::0;;899:188::o;5171:210:0:-;5248:42;;;5268:4;13308:34:5;;-1:-1:-1;;;;;13378:15:5;;13373:2;13358:18;;13351:43;13410:18;;;13403:34;;;5248:42:0;;13258:2:5;13243:18;5248:42:0;;;;;;;5304:12;;5300:75;;5332:32;;-1:-1:-1;;;;;5332:23:0;;;:32;;;;;5356:7;;5332:32;;;;5356:7;5332:23;:32;;;;;;;;;;;;;;;;;;;;;5300:75;5171:210;;:::o;5387:226::-;5465:5;;5438:56;;;5458:4;13308:34:5;;-1:-1:-1;;;;;5465:5:0;;;13373:2:5;13358:18;;13351:43;5472:21:0;13410:18:5;;;13403:34;5438:56:0;;;;;;13258:2:5;5438:56:0;;;5508:21;:26;5504:103;;5558:5;;;5550:46;;-1:-1:-1;;;;;5558:5:0;;;;5574:21;5550:46;;;;;5574:21;;5550:46;5558:5;5550:46;5574:21;5558:5;5550:46;;;;;;;;;;;;;;;;;;;;;5387:226::o;7436:2356::-;7555:35;7543:8;:47;;;;;;;;:::i;:::-;;7535:56;;;;;;7602:32;7637:26;;;:17;:26;;;;;;7602:32;;;7811:329;7832:18;;7828:22;;7811:329;;;7871:11;7885;7897:1;7885:14;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;7871:35;;7924:56;7945:8;7955:11;7967:1;7955:14;;;;;;;;:::i;:::-;;;;;;;;;:24;:14;;;;;:24;;;;7924:20;:56::i;:::-;7920:210;;;8015:24;:12;8032:6;8015:16;:24::i;:::-;8000:39;;7920:210;;;8092:23;:11;8108:6;8092:15;:23::i;:::-;8078:37;;7920:210;-1:-1:-1;7852:3:0;;;;:::i;:::-;;;;7811:329;;;-1:-1:-1;8160:29:0;:11;8176:12;8160:15;:29::i;:::-;8149:40;;8239:6;8234:1087;8255:18;;8251:22;;8234:1087;;;8294:25;8322:11;8334:1;8322:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;8322:19:0;;-1:-1:-1;8322:19:0;8359:8;:49;;;;;;;;:::i;:::-;;8355:956;;8583:56;8604:8;8614:11;8626:1;8614:14;;;;;;;;:::i;8583:56::-;8579:268;;;8663:17;8683:70;8700:12;8714:8;8724:11;8736:1;8724:14;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;8747:5;8683:16;:70::i;:::-;8788:39;;;;;;;;;-1:-1:-1;;;;;8788:39:0;;;;;;;;;;;8775:7;:53;;;;;;;-1:-1:-1;8775:53:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8775:53:0;;;;;;;;;;;;;;;-1:-1:-1;8579:268:0;8355:956;;;9034:56;9055:8;9065:11;9077:1;9065:14;;;;;;;;:::i;9034:56::-;9030:267;;;9114:17;9134:69;9151:12;9165:8;9175:11;9187:1;9175:14;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;9198:4;9134:16;:69::i;:::-;9238:39;;;;;;;;;-1:-1:-1;;;;;9238:39:0;;;;;;;;;;;9225:7;:53;;;;;;;-1:-1:-1;9225:53:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9225:53:0;;;;;;;;;;;;;;;-1:-1:-1;9030:267:0;-1:-1:-1;8275:3:0;;;;:::i;:::-;;;;8234:1087;;;-1:-1:-1;9386:37:0;9374:8;:49;;;;;;;;:::i;:::-;;9370:241;;9502:10;;:41;;-1:-1:-1;;;9502:41:0;;;;;7244:25:5;;;9484:15:0;;-1:-1:-1;;;;;9502:10:0;;:32;;7217:18:5;;9502:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9570:29;;;;;;;;;-1:-1:-1;;;;;9570:29:0;;;;;;;;;;;9557:7;:43;;;;;;;-1:-1:-1;9557:43:0;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9557:43:0;;;;;;;;;;;;;;;;-1:-1:-1;9370:241:0;-1:-1:-1;;;9758:20:0;;;;-1:-1:-1;;9758:11:0;:20;;;;;:27;;-1:-1:-1;;9758:27:0;9781:4;9758:27;;;7436:2356::o;1317:420::-;-1:-1:-1;;;;;1450:24:0;;1399:4;1450:24;;;:17;:24;;;;;;;;1415:59;;;;;;;;;;;;;;;;;1399:4;;1415:59;;1450:24;1415:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1513:1;1488:15;:22;:26;1484:226;;;1535:6;1530:170;1551:15;:22;1547:1;:26;1530:170;;;1624:7;1602:15;1618:1;1602:18;;;;;;;;:::i;:::-;;;;;;;:29;1598:88;;1662:5;1655:12;;;;;;1598:88;1575:3;;;;:::i;:::-;;;;1530:170;;;;1484:226;-1:-1:-1;1726:4:0;;1317:420;-1:-1:-1;;;1317:420:0:o;5619:524::-;5725:4;;5749:8;:47;;;;;;;;:::i;:::-;;5741:56;;;;;;5824:37;5812:8;:49;;;;;;;;:::i;:::-;;5808:329;;5881:9;5877:110;;;-1:-1:-1;5917:4:0;5910:11;;5877:110;-1:-1:-1;5967:5:0;5960:12;;5808:329;6021:9;6017:110;;;-1:-1:-1;6057:5:0;6050:12;;6017:110;-1:-1:-1;6108:4:0;6101:11;;1322:137:4;1380:9;1405:5;1409:1;1405;:5;:::i;:::-;1401:9;;1432:1;1427;:6;;1420:14;;;;:::i;6479:751:0:-;6611:4;;6654:35;:16;6675:13;6654:20;:35::i;:::-;6627:62;;6731:18;6767:15;6763:202;;;6854:16;6814:37;:12;6831:19;6814:16;:37::i;:::-;:56;;;;:::i;:::-;6798:72;;6763:202;;;6917:37;:12;6934:19;6917:16;:37::i;:::-;6901:53;;6763:202;7039:13;7056:1;7039:18;7035:82;;-1:-1:-1;7089:17:0;;7035:82;7180:43;7219:3;7180:34;7198:15;;7180:13;:17;;:34;;;;:::i;:::-;:38;;:43::i;:::-;7164:59;;:13;:59;:::i;:::-;7157:66;6479:751;-1:-1:-1;;;;;;;6479:751:0:o;722:290:4:-;780:7;1000:5;1004:1;1000;:5;:::i;:::-;993:12;722:290;-1:-1:-1;;;722:290:4:o;219:413::-;277:9;519:1;524;519:6;515:45;;-1:-1:-1;548:1:4;541:8;;515:45;574:5;578:1;574;:5;:::i;:::-;570:9;-1:-1:-1;605:1:4;596:5;600:1;570:9;596:5;:::i;:::-;:10;589:18;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;206:180:5:-;265:6;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;-1:-1:-1;357:23:5;;206:180;-1:-1:-1;206:180:5:o;391:258::-;463:1;473:113;487:6;484:1;481:13;473:113;;;563:11;;;557:18;544:11;;;537:39;509:2;502:10;473:113;;;604:6;601:1;598:13;595:48;;;639:1;630:6;625:3;621:16;614:27;595:48;;391:258;;;:::o;654:::-;696:3;734:5;728:12;761:6;756:3;749:19;777:63;833:6;826:4;821:3;817:14;810:4;803:5;799:16;777:63;:::i;:::-;894:2;873:15;-1:-1:-1;;869:29:5;860:39;;;;901:4;856:50;;654:258;-1:-1:-1;;654:258:5:o;1026:127::-;1087:10;1082:3;1078:20;1075:1;1068:31;1118:4;1115:1;1108:15;1142:4;1139:1;1132:15;1158:239;1241:1;1234:5;1231:12;1221:143;;1286:10;1281:3;1277:20;1274:1;1267:31;1321:4;1318:1;1311:15;1349:4;1346:1;1339:15;1221:143;1373:18;;1158:239::o;1402:1848::-;1573:2;1562:9;1555:21;1618:6;1612:13;1607:2;1596:9;1592:18;1585:41;1536:4;1673:2;1665:6;1661:15;1655:22;1696:6;1738:2;1733;1722:9;1718:18;1711:30;1764:52;1811:3;1800:9;1796:19;1782:12;1764:52;:::i;:::-;1750:66;;1865:2;1857:6;1853:15;1847:22;1892:2;1888:7;1959:2;1947:9;1939:6;1935:22;1931:31;1926:2;1915:9;1911:18;1904:59;1986:41;2020:6;2004:14;1986:41;:::i;:::-;1972:55;;2076:2;2068:6;2064:15;2058:22;2036:44;;2089:55;2139:3;2128:9;2124:19;2108:14;-1:-1:-1;;;;;983:31:5;971:44;;917:104;2089:55;2199:3;2191:6;2187:16;2181:23;2175:3;2164:9;2160:19;2153:52;2254:3;2246:6;2242:16;2236:23;2214:45;;2324:2;2312:9;2304:6;2300:22;2296:31;2290:3;2279:9;2275:19;2268:60;2351:41;2385:6;2369:14;2351:41;:::i;:::-;2337:55;;2441:3;2433:6;2429:16;2423:23;2401:45;;2511:2;2499:9;2491:6;2487:22;2483:31;2477:3;2466:9;2462:19;2455:60;2538:41;2572:6;2556:14;2538:41;:::i;:::-;2524:55;;2616:3;2608:6;2604:16;2598:23;2588:33;;2640:3;2679:2;2674;2663:9;2659:18;2652:30;2731:2;2723:6;2719:15;2713:22;2691:44;;;2754:3;2821:2;2809:9;2801:6;2797:22;2793:31;2788:2;2777:9;2773:18;2766:59;2848:41;2882:6;2866:14;2848:41;:::i;:::-;2834:55;;2938:2;2930:6;2926:15;2920:22;2898:44;;;2961:3;3028:2;3016:9;3008:6;3004:22;3000:31;2995:2;2984:9;2980:18;2973:59;3055:41;3089:6;3073:14;3055:41;:::i;:::-;3041:55;;3145:2;3137:6;3133:15;3127:22;3105:44;;;;3158:63;3217:2;3206:9;3202:18;3186:14;3158:63;:::i;:::-;-1:-1:-1;3238:6:5;;1402:1848;-1:-1:-1;;;;1402:1848:5:o;3255:211::-;3402:2;3387:18;;3414:46;3391:9;3442:6;3414:46;:::i;3471:131::-;-1:-1:-1;;;;;3546:31:5;;3536:42;;3526:70;;3592:1;3589;3582:12;3607:247;3666:6;3719:2;3707:9;3698:7;3694:23;3690:32;3687:52;;;3735:1;3732;3725:12;3687:52;3774:9;3761:23;3793:31;3818:5;3793:31;:::i;4122:118::-;4208:5;4201:13;4194:21;4187:5;4184:32;4174:60;;4230:1;4227;4220:12;4245:377;4319:6;4327;4335;4388:2;4376:9;4367:7;4363:23;4359:32;4356:52;;;4404:1;4401;4394:12;4356:52;4440:9;4427:23;4417:33;;4497:2;4486:9;4482:18;4469:32;4459:42;;4551:2;4540:9;4536:18;4523:32;4564:28;4586:5;4564:28;:::i;:::-;4611:5;4601:15;;;4245:377;;;;;:::o;4627:967::-;4850:2;4902:21;;;4972:13;;4875:18;;;4994:22;;;4821:4;;4850:2;5035;;5053:18;;;;5094:15;;;4821:4;5137:431;5151:6;5148:1;5145:13;5137:431;;;5210:13;;5252:9;;-1:-1:-1;;;;;5248:35:5;5236:48;;5324:11;;;5318:18;5304:12;;;5297:40;5377:11;;;5371:18;5357:12;;;5350:40;5413:4;5471:11;;;5465:18;5458:26;5451:34;5437:12;;;5430:56;5515:4;5506:14;;;;5543:15;;;;5280:1;5166:9;5137:431;;;-1:-1:-1;5585:3:5;;4627:967;-1:-1:-1;;;;;;;4627:967:5:o;5599:632::-;5770:2;5822:21;;;5892:13;;5795:18;;;5914:22;;;5741:4;;5770:2;5993:15;;;;5967:2;5952:18;;;5741:4;6036:169;6050:6;6047:1;6044:13;6036:169;;;6111:13;;6099:26;;6180:15;;;;6145:12;;;;6072:1;6065:9;6036:169;;;-1:-1:-1;6222:3:5;;5599:632;-1:-1:-1;;;;;;5599:632:5:o;6444:127::-;6505:10;6500:3;6496:20;6493:1;6486:31;6536:4;6533:1;6526:15;6560:4;6557:1;6550:15;6576:127;6637:10;6632:3;6628:20;6625:1;6618:31;6668:4;6665:1;6658:15;6692:4;6689:1;6682:15;6708:135;6747:3;6768:17;;;6765:43;;6788:18;;:::i;:::-;-1:-1:-1;6835:1:5;6824:13;;6708:135::o;6848:245::-;6915:6;6968:2;6956:9;6947:7;6943:23;6939:32;6936:52;;;6984:1;6981;6974:12;6936:52;7016:9;7010:16;7035:28;7057:5;7035:28;:::i;7280:127::-;7341:10;7336:3;7332:20;7329:1;7322:31;7372:4;7369:1;7362:15;7396:4;7393:1;7386:15;7412:255;7484:2;7478:9;7526:6;7514:19;;7563:18;7548:34;;7584:22;;;7545:62;7542:88;;;7610:18;;:::i;:::-;7646:2;7639:22;7412:255;:::o;7672:275::-;7743:2;7737:9;7808:2;7789:13;;-1:-1:-1;;7785:27:5;7773:40;;7843:18;7828:34;;7864:22;;;7825:62;7822:88;;;7890:18;;:::i;:::-;7926:2;7919:22;7672:275;;-1:-1:-1;7672:275:5:o;7952:497::-;8006:5;8059:3;8052:4;8044:6;8040:17;8036:27;8026:55;;8077:1;8074;8067:12;8026:55;8106:6;8100:13;8132:18;8128:2;8125:26;8122:52;;;8154:18;;:::i;:::-;8198:55;8241:2;8222:13;;-1:-1:-1;;8218:27:5;8247:4;8214:38;8198:55;:::i;:::-;8278:2;8269:7;8262:19;8324:3;8317:4;8312:2;8304:6;8300:15;8296:26;8293:35;8290:55;;;8341:1;8338;8331:12;8290:55;8354:64;8415:2;8408:4;8399:7;8395:18;8388:4;8380:6;8376:17;8354:64;:::i;:::-;8436:7;7952:497;-1:-1:-1;;;;7952:497:5:o;8454:138::-;8533:13;;8555:31;8533:13;8555:31;:::i;8597:156::-;8685:13;;8727:1;8717:12;;8707:40;;8743:1;8740;8733:12;8758:1886;8849:6;8902:2;8890:9;8881:7;8877:23;8873:32;8870:52;;;8918:1;8915;8908:12;8870:52;8951:9;8945:16;8980:18;9021:2;9013:6;9010:14;9007:34;;;9037:1;9034;9027:12;9007:34;9060:22;;;;9116:6;9098:16;;;9094:29;9091:49;;;9136:1;9133;9126:12;9091:49;9162:22;;:::i;:::-;9213:2;9207:9;9200:5;9193:24;9256:2;9252;9248:11;9242:18;9285:2;9275:8;9272:16;9269:36;;;9301:1;9298;9291:12;9269:36;9337:56;9385:7;9374:8;9370:2;9366:17;9337:56;:::i;:::-;9332:2;9325:5;9321:14;9314:80;;9433:2;9429;9425:11;9419:18;9462:2;9452:8;9449:16;9446:36;;;9478:1;9475;9468:12;9446:36;9514:56;9562:7;9551:8;9547:2;9543:17;9514:56;:::i;:::-;9509:2;9502:5;9498:14;9491:80;;9603:42;9641:2;9637;9633:11;9603:42;:::i;:::-;9598:2;9591:5;9587:14;9580:66;9693:3;9689:2;9685:12;9679:19;9673:3;9666:5;9662:15;9655:44;9738:3;9734:2;9730:12;9724:19;9768:2;9758:8;9755:16;9752:36;;;9784:1;9781;9774:12;9752:36;9821:56;9869:7;9858:8;9854:2;9850:17;9821:56;:::i;:::-;9815:3;9808:5;9804:15;9797:81;;9917:3;9913:2;9909:12;9903:19;9947:2;9937:8;9934:16;9931:36;;;9963:1;9960;9953:12;9931:36;10000:56;10048:7;10037:8;10033:2;10029:17;10000:56;:::i;:::-;9994:3;9987:5;9983:15;9976:81;;10104:3;10100:2;10096:12;10090:19;10084:3;10077:5;10073:15;10066:44;10129:3;10171:2;10167;10163:11;10157:18;10200:2;10190:8;10187:16;10184:36;;;10216:1;10213;10206:12;10184:36;10252:56;10300:7;10289:8;10285:2;10281:17;10252:56;:::i;:::-;10247:2;10240:5;10236:14;10229:80;;;10328:3;10370:2;10366;10362:11;10356:18;10399:2;10389:8;10386:16;10383:36;;;10415:1;10412;10405:12;10383:36;10451:56;10499:7;10488:8;10484:2;10480:17;10451:56;:::i;:::-;10446:2;10439:5;10435:14;10428:80;;;10527:3;10517:13;;10562:51;10609:2;10605;10601:11;10562:51;:::i;:::-;10546:14;;;10539:75;;;;10550:5;8758:1886;-1:-1:-1;;;;8758:1886:5:o;12127:936::-;12222:6;12253:2;12296;12284:9;12275:7;12271:23;12267:32;12264:52;;;12312:1;12309;12302:12;12264:52;12345:9;12339:16;12374:18;12415:2;12407:6;12404:14;12401:34;;;12431:1;12428;12421:12;12401:34;12469:6;12458:9;12454:22;12444:32;;12514:7;12507:4;12503:2;12499:13;12495:27;12485:55;;12536:1;12533;12526:12;12485:55;12565:2;12559:9;12587:2;12583;12580:10;12577:36;;;12593:18;;:::i;:::-;12639:2;12636:1;12632:10;12622:20;;12662:28;12686:2;12682;12678:11;12662:28;:::i;:::-;12724:15;;;12794:11;;;12790:20;;;12755:12;;;;12822:19;;;12819:39;;;12854:1;12851;12844:12;12819:39;12878:11;;;;12898:135;12914:6;12909:3;12906:15;12898:135;;;12980:10;;12968:23;;12931:12;;;;13011;;;;12898:135;;;13052:5;12127:936;-1:-1:-1;;;;;;;;12127:936:5:o;13448:251::-;13518:6;13571:2;13559:9;13550:7;13546:23;13542:32;13539:52;;;13587:1;13584;13577:12;13539:52;13619:9;13613:16;13638:31;13663:5;13638:31;:::i;13704:128::-;13744:3;13775:1;13771:6;13768:1;13765:13;13762:39;;;13781:18;;:::i;:::-;-1:-1:-1;13817:9:5;;13704:128::o;13837:127::-;13898:10;13893:3;13889:20;13886:1;13879:31;13929:4;13926:1;13919:15;13953:4;13950:1;13943:15;13969:125;14009:4;14037:1;14034;14031:8;14028:34;;;14042:18;;:::i;:::-;-1:-1:-1;14079:9:5;;13969:125::o;14099:217::-;14139:1;14165;14155:132;;14209:10;14204:3;14200:20;14197:1;14190:31;14244:4;14241:1;14234:15;14272:4;14269:1;14262:15;14155:132;-1:-1:-1;14301:9:5;;14099:217::o;14321:168::-;14361:7;14427:1;14423;14419:6;14415:14;14412:1;14409:21;14404:1;14397:9;14390:17;14386:45;14383:71;;;14434:18;;:::i;:::-;-1:-1:-1;14474:9:5;;14321:168::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./OracleInterface.sol\";\nimport \"./Ownable.sol\";\nimport \"./SafeMath.sol\";\n\n/// @title Commitments\n/// @author Oliver Song\n/// @notice Takes commitments and handles payouts for bill outcomes\ncontract Commitments is Ownable {\n    // mappings\n    mapping(address => bytes32[]) private userToCommitments;\n    mapping(bytes32 => Commitment[]) private billToCommitments;\n    mapping(bytes32 => bool) internal billPaidOut;\n    Payout[] payouts;\n\n    // bill outcomes oracle\n    address internal billOracleAddr = address(0);\n    OracleInterface internal billOracle = OracleInterface(billOracleAddr);\n\n    //constants\n    uint internal minimumCommitment = 1000000000000;  // 1000 gwei\n    uint internal housePercentage = 2;\n\n    event Transferral(address, address, uint);\n\n    using SafeMath for uint;\n\n    struct Commitment {\n        address user;\n        bytes32 billId;\n        uint amount;\n        bool inSupport;\n    }\n\n    struct Payout{\n        address user;\n        uint amount;\n    }\n\n    /// @notice determines whether or not the user has already committed to the given bill\n    /// @param _user address of a user\n    /// @param _billId id of a bill\n    /// @return true if the given user has already placed a commitment on the given bill\n    function _commitmentIsValid(address _user, bytes32 _billId) private view returns (bool) {\n        bytes32[] memory userCommitments = userToCommitments[_user];\n        if (userCommitments.length > 0) {\n            for (uint n = 0; n < userCommitments.length; n++) {\n                if (userCommitments[n] == _billId) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    /// @notice gets a list ids of all currently commitable bill\n    /// @return array of bill ids\n    function getCommitableBills() public view returns (bytes32[] memory) {\n        return billOracle.getPendingBills();\n    }\n\n    /// @notice returns the full data of the specified bill\n    /// @param _billId the id of the desired bill\n    function getBill(bytes32 _billId) public view returns (OracleInterface.Bill memory) {\n        return billOracle.getBill(_billId);\n    }\n\n    /// @notice returns the full data of the most recent commitable bill\n    function getMostRecentBill() public view returns (OracleInterface.Bill memory) {\n        return billOracle.getMostRecentBill(true);\n    }\n\n    /// @notice gets the current bills on which the user has commitments\n    /// @return array of bill ids\n    function getUserCommitments() public view returns (bytes32[] memory) {\n        return userToCommitments[msg.sender];\n    }\n\n    /// @notice gets the current commitments for the bill\n    /// @param _billId the id of the desired bill\n    /// @return array of Commitments\n    function getBillCommitments(bytes32 _billId) public view returns (Commitment[] memory) {\n        return billToCommitments[_billId];\n    }\n\n    /// @notice gets a user's commitment\n    /// @param _billId the id of the desired bill\n    /// @return amount commitment amount, or 0 if no commitment found\n    /// @return inSupport in support of bill or not, or 0 if no commitment found\n    function getUserCommitment(bytes32 _billId) public view returns (uint amount, bool inSupport) {\n        // FIXME: perhaps should iterate through usercommitments instead\n        // actually, probably shouldn't be iterating at all if possible\n        Commitment[] storage commitments = billToCommitments[_billId];\n        for (uint n = 0; n < commitments.length; n++) {\n            if (commitments[n].user == msg.sender) {\n                return (commitments[n].amount, commitments[n].inSupport);\n            }\n        }\n        // FIXME could gate this with a require and instead\n        // add a method \"userHasCommitment\".\n        // Could also gate billid on existing bill\n        return (0, false);\n    }\n\n    /// @notice places a non-rescindable commitment on the given bill\n    /// @param _amount the id of the bill on which to commitment\n    /// @param _billId the id of the bill on which to commitment\n    /// @param _inSupport commitment in favor of bill passing (vs against)\n    function placeCommitment(uint _amount, bytes32 _billId, bool _inSupport) public payable {\n        require(msg.value == _amount);\n\n        // commitment must be above a certain minimum\n        require(msg.value >= minimumCommitment, \"Commitment amount must be >= minimum commitment\");\n\n        // make sure that bill exists\n        require(billOracle.billExists(_billId), \"Specified bill not found\");\n\n        // validate\n        require(_commitmentIsValid(msg.sender, _billId), \"Commitment is not valid\");\n\n        // bill must still be open for commitment\n        require(billOracle.billIsPending(_billId), \"Bill not open for commitment\");\n\n        // add the new commitment\n        Commitment[] storage commitments = billToCommitments[_billId];\n        commitments.push(Commitment(msg.sender, _billId, msg.value, _inSupport));\n\n        // add the mapping\n        bytes32[] storage userCommitments = userToCommitments[msg.sender];\n        userCommitments.push(_billId);\n    }\n\n    function _payOutWinnings(address _user, uint _amount) private {\n        emit Transferral(address(this), _user, _amount);\n        if (_amount != 0) {\n            payable(_user).transfer(_amount);\n        }\n    }\n\n    function _transferToHouse() private {\n        emit Transferral(address(this), owner, address(this).balance);\n        if (address(this).balance != 0) {\n            payable(owner).transfer(address(this).balance);\n        }\n    }\n\n    function _isWinningCommitment(OracleInterface.BillOutcome _outcome, bool inSupport) private pure returns (bool) {\n        require(_outcome != OracleInterface.BillOutcome.Pending);\n\n        if (_outcome == OracleInterface.BillOutcome.BecameLaw) {\n            if (inSupport) {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            if (inSupport) {\n                return false;\n            } else {\n                return true;\n            }\n        }\n    }\n\n    /// @notice calculates the amount to be paid out for a commitment\n    /// @param _winningTotal the total monetary amount of winning commitments\n    /// @param _losingTotal the total monetary amount of losing commitments\n    /// @param _committedAmount the amount of this particular commitment\n    /// @return an amount in wei\n    function _calculatePayout(uint _winningTotal, uint _losingTotal, uint _committedAmount, bool _keepCommitment) private view returns (uint) {\n        uint percentWinningTotal = _committedAmount.div(_winningTotal);\n\n        // calculate raw share\n        uint winningAmount = 0;\n        if (_keepCommitment) {\n            winningAmount = _losingTotal.mul(percentWinningTotal) + _committedAmount;\n        } else {\n            winningAmount = _losingTotal.mul(percentWinningTotal);\n        }\n\n        // if share has been rounded down to zero, fix that\n        if (winningAmount == 0) {\n            winningAmount = minimumCommitment;\n        }\n\n        // take out house cut\n        return winningAmount - winningAmount.mul(housePercentage).div(100);\n    }\n\n    /// @notice calculates how much to pay out to each winner, then pays each winner the appropriate amount\n    /// @param _billId the unique id of the bill\n    /// @param _outcome the bill's outcome\n    function _generatePayouts(bytes32 _billId, OracleInterface.BillOutcome _outcome) private {\n        require(_outcome != OracleInterface.BillOutcome.Pending);\n\n        Commitment[] storage commitments = billToCommitments[_billId];\n        uint losingTotal = 0;\n        uint winningTotal = 0;\n        uint totalPot = 0;\n\n        // count winning commitments & get total\n        for (uint n = 0; n < commitments.length; n++) {\n            uint amount = commitments[n].amount;\n            if (_isWinningCommitment(_outcome, commitments[n].inSupport)) {\n                winningTotal = winningTotal.add(amount);\n            } else {\n                losingTotal = losingTotal.add(amount);\n            }\n        }\n        totalPot = losingTotal.add(winningTotal);\n\n        // calculate user payouts\n        for (uint n = 0; n < commitments.length; n++) {\n            address targetUserAddress = commitments[n].user;\n            if (_outcome == OracleInterface.BillOutcome.BecameLaw) {\n                // in the passing case, supporters get detractors' commitments\n                // minus their own commitment, which goes to legislator\n                if (_isWinningCommitment(_outcome, commitments[n].inSupport)) {\n                    uint payoutAmount = _calculatePayout(winningTotal, totalPot, commitments[n].amount, false);\n                    payouts.push(Payout(targetUserAddress, payoutAmount));\n                }\n            } else {\n                // in the rejected case, detractors get supporters' commitments\n                // plus their own back. Legislators get nothing.\n                if (_isWinningCommitment(_outcome, commitments[n].inSupport)) {\n                    uint payoutAmount = _calculatePayout(winningTotal, totalPot, commitments[n].amount, true);\n                    payouts.push(Payout(targetUserAddress, payoutAmount));\n                }\n            }\n        }\n\n        // calculate legislator payout\n        if (_outcome == OracleInterface.BillOutcome.BecameLaw) {\n            // legislator gets support total\n            address sponsor = billOracle.getBillSponsorAddress(_billId);\n            payouts.push(Payout(sponsor, winningTotal));\n        }\n\n        // mark bill as paid out. Not actually paid out yet, but awaiting\n        // second function call. Here to prevent double sends.\n        billPaidOut[_billId] = true;\n    }\n\n\n    /// @notice pays users\n    function sendPendingPayouts() external onlyOwner {\n        // pay out to users\n        for (uint n = 0; n < payouts.length; n++) {\n            _payOutWinnings(payouts[n].user, payouts[n].amount);\n        }\n\n        // transfer the remainder to the house\n        _transferToHouse();\n\n        // empty the payouts array\n        delete payouts;\n    }\n\n\n    /// @notice check the outcome of the given bill; if ready, will trigger calculation of payout, and actual payout to winners\n    /// @param _billId the id of the bill to check\n    /// @return the outcome of the given bill\n    function checkOutcomeAndGeneratePayouts(bytes32 _billId) external onlyOwner returns (OracleInterface.BillOutcome)  {\n        OracleInterface.Bill memory b = getBill(_billId);\n\n        if (b.outcome != OracleInterface.BillOutcome.Pending && !billPaidOut[_billId]) {\n            _generatePayouts(_billId, b.outcome);\n        }\n\n        return b.outcome;\n    }\n\n\n    /// @notice sets the address of the oracle contract to use\n    /// @dev setting a wrong address may result in false return value, or error\n    /// @param _oracleAddress the address of the oracle\n    /// @return true if connection to the new oracle address was successful\n    function setOracleAddress(address _oracleAddress) external onlyOwner returns (bool) {\n        billOracleAddr = _oracleAddress;\n        billOracle = OracleInterface(billOracleAddr);\n        return billOracle.testConnection();\n    }\n\n    /// @notice gets the address of the oracle being used\n    /// @return the address of the currently set oracle\n    function getOracleAddress() external view returns (address) {\n        return billOracleAddr;\n    }\n\n    /// @notice for testing; tests that the oracle is callable\n    /// @return true if connection successful\n    function testOracleConnection() public view returns (bool) {\n        return billOracle.testConnection();\n    }\n}\n",
  "sourcePath": "/Users/oliversong/Development/open-lobby/client/contracts/Commitments.sol",
  "ast": {
    "absolutePath": "project:/contracts/Commitments.sol",
    "exportedSymbols": {
      "Commitments": [
        841
      ],
      "OracleInterface": [
        959
      ],
      "Ownable": [
        1020
      ],
      "SafeMath": [
        1119
      ]
    },
    "id": 842,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:32:0"
      },
      {
        "absolutePath": "project:/contracts/OracleInterface.sol",
        "file": "./OracleInterface.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 842,
        "sourceUnit": 960,
        "src": "66:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 842,
        "sourceUnit": 1021,
        "src": "98:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 842,
        "sourceUnit": 1120,
        "src": "122:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1020,
              "src": "287:7:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "287:7:0"
          }
        ],
        "canonicalName": "Commitments",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "148:115:0",
          "text": "@title Commitments\n @author Oliver Song\n @notice Takes commitments and handles payouts for bill outcomes"
        },
        "fullyImplemented": true,
        "id": 841,
        "linearizedBaseContracts": [
          841,
          1020
        ],
        "name": "Commitments",
        "nameLocation": "272:11:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "userToCommitments",
            "nameLocation": "355:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 841,
            "src": "317:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
              "typeString": "mapping(address => bytes32[])"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 8,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "325:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "317:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                "typeString": "mapping(address => bytes32[])"
              },
              "valueType": {
                "baseType": {
                  "id": 9,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "336:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "id": 10,
                "nodeType": "ArrayTypeName",
                "src": "336:9:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 18,
            "mutability": "mutable",
            "name": "billToCommitments",
            "nameLocation": "419:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 841,
            "src": "378:58:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_$",
              "typeString": "mapping(bytes32 => struct Commitments.Commitment[])"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 13,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "386:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "378:32:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_$",
                "typeString": "mapping(bytes32 => struct Commitments.Commitment[])"
              },
              "valueType": {
                "baseType": {
                  "id": 15,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 14,
                    "name": "Commitment",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 64,
                    "src": "397:10:0"
                  },
                  "referencedDeclaration": 64,
                  "src": "397:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Commitment_$64_storage_ptr",
                    "typeString": "struct Commitments.Commitment"
                  }
                },
                "id": 16,
                "nodeType": "ArrayTypeName",
                "src": "397:12:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                  "typeString": "struct Commitments.Commitment[]"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "billPaidOut",
            "nameLocation": "476:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 841,
            "src": "442:45:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 21,
              "keyType": {
                "id": 19,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "450:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "442:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 20,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "461:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "payouts",
            "nameLocation": "502:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 841,
            "src": "493:16:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Payout_$69_storage_$dyn_storage",
              "typeString": "struct Commitments.Payout[]"
            },
            "typeName": {
              "baseType": {
                "id": 24,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 23,
                  "name": "Payout",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 69,
                  "src": "493:6:0"
                },
                "referencedDeclaration": 69,
                "src": "493:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Payout_$69_storage_ptr",
                  "typeString": "struct Commitments.Payout"
                }
              },
              "id": 25,
              "nodeType": "ArrayTypeName",
              "src": "493:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Payout_$69_storage_$dyn_storage_ptr",
                "typeString": "struct Commitments.Payout[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "billOracleAddr",
            "nameLocation": "561:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 841,
            "src": "544:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 27,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "544:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 30,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "586:1:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 29,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "578:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 28,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "578:7:0",
                  "typeDescriptions": {}
                }
              },
              "id": 31,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "578:10:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 38,
            "mutability": "mutable",
            "name": "billOracle",
            "nameLocation": "619:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 841,
            "src": "594:69:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OracleInterface_$959",
              "typeString": "contract OracleInterface"
            },
            "typeName": {
              "id": 34,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33,
                "name": "OracleInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 959,
                "src": "594:15:0"
              },
              "referencedDeclaration": 959,
              "src": "594:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OracleInterface_$959",
                "typeString": "contract OracleInterface"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 36,
                  "name": "billOracleAddr",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 32,
                  "src": "648:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 35,
                "name": "OracleInterface",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 959,
                "src": "632:15:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_OracleInterface_$959_$",
                  "typeString": "type(contract OracleInterface)"
                }
              },
              "id": 37,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "632:31:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OracleInterface_$959",
                "typeString": "contract OracleInterface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 41,
            "mutability": "mutable",
            "name": "minimumCommitment",
            "nameLocation": "700:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 841,
            "src": "686:47:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "686:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030303030303030303030",
              "id": 40,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "720:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000_by_1",
                "typeString": "int_const 1000000000000"
              },
              "value": "1000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 44,
            "mutability": "mutable",
            "name": "housePercentage",
            "nameLocation": "767:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 841,
            "src": "753:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "753:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 43,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "785:1:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "070ded6608617d161bf9727e9573e5b793a0bc0cff5c7029cf2e78afe1d471ec",
            "id": 52,
            "name": "Transferral",
            "nameLocation": "799:11:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "811:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "820:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "829:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "810:24:0"
            },
            "src": "793:42:0"
          },
          {
            "global": false,
            "id": 55,
            "libraryName": {
              "id": 53,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1119,
              "src": "847:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "841:24:0",
            "typeName": {
              "id": 54,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "860:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Commitments.Commitment",
            "id": 64,
            "members": [
              {
                "constant": false,
                "id": 57,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "907:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 64,
                "src": "899:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 56,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "899:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 59,
                "mutability": "mutable",
                "name": "billId",
                "nameLocation": "929:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 64,
                "src": "921:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 58,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "921:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 61,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "950:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 64,
                "src": "945:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 60,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "945:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 63,
                "mutability": "mutable",
                "name": "inSupport",
                "nameLocation": "971:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 64,
                "src": "966:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 62,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "966:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Commitment",
            "nameLocation": "878:10:0",
            "nodeType": "StructDefinition",
            "scope": 841,
            "src": "871:116:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Commitments.Payout",
            "id": 69,
            "members": [
              {
                "constant": false,
                "id": 66,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "1024:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 69,
                "src": "1016:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 65,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1016:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 68,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1043:6:0",
                "nodeType": "VariableDeclaration",
                "scope": 69,
                "src": "1038:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 67,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1038:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Payout",
            "nameLocation": "1000:6:0",
            "nodeType": "StructDefinition",
            "scope": 841,
            "src": "993:63:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "1405:332:0",
              "statements": [
                {
                  "assignments": [
                    83
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 83,
                      "mutability": "mutable",
                      "name": "userCommitments",
                      "nameLocation": "1432:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 118,
                      "src": "1415:32:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 81,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1415:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 82,
                        "nodeType": "ArrayTypeName",
                        "src": "1415:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87,
                  "initialValue": {
                    "baseExpression": {
                      "id": 84,
                      "name": "userToCommitments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1450:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                        "typeString": "mapping(address => bytes32[] storage ref)"
                      }
                    },
                    "id": 86,
                    "indexExpression": {
                      "id": 85,
                      "name": "_user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 72,
                      "src": "1468:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1450:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1415:59:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 88,
                        "name": "userCommitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 83,
                        "src": "1488:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[] memory"
                        }
                      },
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1488:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1513:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1488:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 115,
                  "nodeType": "IfStatement",
                  "src": "1484:226:0",
                  "trueBody": {
                    "id": 114,
                    "nodeType": "Block",
                    "src": "1516:194:0",
                    "statements": [
                      {
                        "body": {
                          "id": 112,
                          "nodeType": "Block",
                          "src": "1580:120:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 103,
                                    "name": "userCommitments",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 83,
                                    "src": "1602:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                      "typeString": "bytes32[] memory"
                                    }
                                  },
                                  "id": 105,
                                  "indexExpression": {
                                    "id": 104,
                                    "name": "n",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 93,
                                    "src": "1618:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1602:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 106,
                                  "name": "_billId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74,
                                  "src": "1624:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "1602:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 111,
                              "nodeType": "IfStatement",
                              "src": "1598:88:0",
                              "trueBody": {
                                "id": 110,
                                "nodeType": "Block",
                                "src": "1633:53:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "hexValue": "66616c7365",
                                      "id": 108,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1662:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "false"
                                    },
                                    "functionReturnParameters": 78,
                                    "id": 109,
                                    "nodeType": "Return",
                                    "src": "1655:12:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 96,
                            "name": "n",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 93,
                            "src": "1547:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 97,
                              "name": "userCommitments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "1551:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1551:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1547:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 113,
                        "initializationExpression": {
                          "assignments": [
                            93
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 93,
                              "mutability": "mutable",
                              "name": "n",
                              "nameLocation": "1540:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 113,
                              "src": "1535:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 92,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1535:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 95,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1544:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1535:10:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1575:3:0",
                            "subExpression": {
                              "id": 100,
                              "name": "n",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "1575:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 102,
                          "nodeType": "ExpressionStatement",
                          "src": "1575:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "1530:170:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1726:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 78,
                  "id": 117,
                  "nodeType": "Return",
                  "src": "1719:11:0"
                }
              ]
            },
            "documentation": {
              "id": 70,
              "nodeType": "StructuredDocumentation",
              "src": "1062:250:0",
              "text": "@notice determines whether or not the user has already committed to the given bill\n @param _user address of a user\n @param _billId id of a bill\n @return true if the given user has already placed a commitment on the given bill"
            },
            "id": 119,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_commitmentIsValid",
            "nameLocation": "1326:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "1353:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1345:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1345:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "_billId",
                  "nameLocation": "1368:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1360:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1344:32:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1399:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1399:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1398:6:0"
            },
            "scope": 841,
            "src": "1317:420:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 130,
              "nodeType": "Block",
              "src": "1911:52:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 126,
                        "name": "billOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "1928:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleInterface_$959",
                          "typeString": "contract OracleInterface"
                        }
                      },
                      "id": 127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getPendingBills",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 910,
                      "src": "1928:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (bytes32[] memory)"
                      }
                    },
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1928:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "functionReturnParameters": 125,
                  "id": 129,
                  "nodeType": "Return",
                  "src": "1921:35:0"
                }
              ]
            },
            "documentation": {
              "id": 120,
              "nodeType": "StructuredDocumentation",
              "src": "1743:94:0",
              "text": "@notice gets a list ids of all currently commitable bill\n @return array of bill ids"
            },
            "functionSelector": "7bef7ce1",
            "id": 131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCommitableBills",
            "nameLocation": "1851:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1869:2:0"
            },
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "1893:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 122,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1893:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 123,
                    "nodeType": "ArrayTypeName",
                    "src": "1893:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1892:18:0"
            },
            "scope": 841,
            "src": "1842:121:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "2163:51:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 142,
                        "name": "_billId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "2199:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 140,
                        "name": "billOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "2180:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleInterface_$959",
                          "typeString": "contract OracleInterface"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getBill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 938,
                      "src": "2180:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_struct$_Bill_$900_memory_ptr_$",
                        "typeString": "function (bytes32) view external returns (struct OracleInterface.Bill memory)"
                      }
                    },
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2180:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bill_$900_memory_ptr",
                      "typeString": "struct OracleInterface.Bill memory"
                    }
                  },
                  "functionReturnParameters": 139,
                  "id": 144,
                  "nodeType": "Return",
                  "src": "2173:34:0"
                }
              ]
            },
            "documentation": {
              "id": 132,
              "nodeType": "StructuredDocumentation",
              "src": "1969:105:0",
              "text": "@notice returns the full data of the specified bill\n @param _billId the id of the desired bill"
            },
            "functionSelector": "342c196c",
            "id": 146,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBill",
            "nameLocation": "2088:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "_billId",
                  "nameLocation": "2104:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "2096:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2096:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2095:17:0"
            },
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "2134:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Bill_$900_memory_ptr",
                    "typeString": "struct OracleInterface.Bill"
                  },
                  "typeName": {
                    "id": 137,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 136,
                      "name": "OracleInterface.Bill",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 900,
                      "src": "2134:20:0"
                    },
                    "referencedDeclaration": 900,
                    "src": "2134:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bill_$900_storage_ptr",
                      "typeString": "struct OracleInterface.Bill"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2133:29:0"
            },
            "scope": 841,
            "src": "2079:135:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "2372:58:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2418:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 153,
                        "name": "billOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "2389:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleInterface_$959",
                          "typeString": "contract OracleInterface"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMostRecentBill",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 946,
                      "src": "2389:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bool_$returns$_t_struct$_Bill_$900_memory_ptr_$",
                        "typeString": "function (bool) view external returns (struct OracleInterface.Bill memory)"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2389:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bill_$900_memory_ptr",
                      "typeString": "struct OracleInterface.Bill memory"
                    }
                  },
                  "functionReturnParameters": 152,
                  "id": 157,
                  "nodeType": "Return",
                  "src": "2382:41:0"
                }
              ]
            },
            "documentation": {
              "id": 147,
              "nodeType": "StructuredDocumentation",
              "src": "2220:68:0",
              "text": "@notice returns the full data of the most recent commitable bill"
            },
            "functionSelector": "71fe7e01",
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMostRecentBill",
            "nameLocation": "2302:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2319:2:0"
            },
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "2343:27:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Bill_$900_memory_ptr",
                    "typeString": "struct OracleInterface.Bill"
                  },
                  "typeName": {
                    "id": 150,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 149,
                      "name": "OracleInterface.Bill",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 900,
                      "src": "2343:20:0"
                    },
                    "referencedDeclaration": 900,
                    "src": "2343:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bill_$900_storage_ptr",
                      "typeString": "struct OracleInterface.Bill"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2342:29:0"
            },
            "scope": 841,
            "src": "2293:137:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 171,
              "nodeType": "Block",
              "src": "2612:53:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 166,
                      "name": "userToCommitments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "2629:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                        "typeString": "mapping(address => bytes32[] storage ref)"
                      }
                    },
                    "id": 169,
                    "indexExpression": {
                      "expression": {
                        "id": 167,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2647:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2647:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2629:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "functionReturnParameters": 165,
                  "id": 170,
                  "nodeType": "Return",
                  "src": "2622:36:0"
                }
              ]
            },
            "documentation": {
              "id": 160,
              "nodeType": "StructuredDocumentation",
              "src": "2436:102:0",
              "text": "@notice gets the current bills on which the user has commitments\n @return array of bill ids"
            },
            "functionSelector": "9aeeb709",
            "id": 172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserCommitments",
            "nameLocation": "2552:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2570:2:0"
            },
            "returnParameters": {
              "id": 165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 172,
                  "src": "2594:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 162,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2594:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 163,
                    "nodeType": "ArrayTypeName",
                    "src": "2594:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2593:18:0"
            },
            "scope": 841,
            "src": "2543:122:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 186,
              "nodeType": "Block",
              "src": "2903:50:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 182,
                      "name": "billToCommitments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "2920:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct Commitments.Commitment storage ref[] storage ref)"
                      }
                    },
                    "id": 184,
                    "indexExpression": {
                      "id": 183,
                      "name": "_billId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 175,
                      "src": "2938:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2920:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage",
                      "typeString": "struct Commitments.Commitment storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 181,
                  "id": 185,
                  "nodeType": "Return",
                  "src": "2913:33:0"
                }
              ]
            },
            "documentation": {
              "id": 173,
              "nodeType": "StructuredDocumentation",
              "src": "2671:140:0",
              "text": "@notice gets the current commitments for the bill\n @param _billId the id of the desired bill\n @return array of Commitments"
            },
            "functionSelector": "79d57d30",
            "id": 187,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBillCommitments",
            "nameLocation": "2825:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "_billId",
                  "nameLocation": "2852:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "2844:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2844:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2843:17:0"
            },
            "returnParameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 187,
                  "src": "2882:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Commitment_$64_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct Commitments.Commitment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 178,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 177,
                        "name": "Commitment",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 64,
                        "src": "2882:10:0"
                      },
                      "referencedDeclaration": 64,
                      "src": "2882:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$64_storage_ptr",
                        "typeString": "struct Commitments.Commitment"
                      }
                    },
                    "id": 179,
                    "nodeType": "ArrayTypeName",
                    "src": "2882:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                      "typeString": "struct Commitments.Commitment[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2881:21:0"
            },
            "scope": 841,
            "src": "2816:137:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "3295:613:0",
              "statements": [
                {
                  "assignments": [
                    201
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 201,
                      "mutability": "mutable",
                      "name": "commitments",
                      "nameLocation": "3471:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 242,
                      "src": "3450:32:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                        "typeString": "struct Commitments.Commitment[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 199,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 198,
                            "name": "Commitment",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 64,
                            "src": "3450:10:0"
                          },
                          "referencedDeclaration": 64,
                          "src": "3450:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Commitment_$64_storage_ptr",
                            "typeString": "struct Commitments.Commitment"
                          }
                        },
                        "id": 200,
                        "nodeType": "ArrayTypeName",
                        "src": "3450:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                          "typeString": "struct Commitments.Commitment[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 205,
                  "initialValue": {
                    "baseExpression": {
                      "id": 202,
                      "name": "billToCommitments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "3485:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct Commitments.Commitment storage ref[] storage ref)"
                      }
                    },
                    "id": 204,
                    "indexExpression": {
                      "id": 203,
                      "name": "_billId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "3503:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3485:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage",
                      "typeString": "struct Commitments.Commitment storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3450:61:0"
                },
                {
                  "body": {
                    "id": 236,
                    "nodeType": "Block",
                    "src": "3567:152:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 217,
                                "name": "commitments",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 201,
                                "src": "3585:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                                  "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                }
                              },
                              "id": 219,
                              "indexExpression": {
                                "id": 218,
                                "name": "n",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 207,
                                "src": "3597:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3585:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Commitment_$64_storage",
                                "typeString": "struct Commitments.Commitment storage ref"
                              }
                            },
                            "id": 220,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "user",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57,
                            "src": "3585:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 221,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3608:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3608:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3585:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 235,
                        "nodeType": "IfStatement",
                        "src": "3581:128:0",
                        "trueBody": {
                          "id": 234,
                          "nodeType": "Block",
                          "src": "3620:89:0",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 224,
                                        "name": "commitments",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 201,
                                        "src": "3646:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 226,
                                      "indexExpression": {
                                        "id": 225,
                                        "name": "n",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 207,
                                        "src": "3658:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3646:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Commitment_$64_storage",
                                        "typeString": "struct Commitments.Commitment storage ref"
                                      }
                                    },
                                    "id": 227,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 61,
                                    "src": "3646:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 228,
                                        "name": "commitments",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 201,
                                        "src": "3669:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 230,
                                      "indexExpression": {
                                        "id": 229,
                                        "name": "n",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 207,
                                        "src": "3681:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3669:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Commitment_$64_storage",
                                        "typeString": "struct Commitments.Commitment storage ref"
                                      }
                                    },
                                    "id": 231,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "inSupport",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63,
                                    "src": "3669:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 232,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "3645:49:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                                  "typeString": "tuple(uint256,bool)"
                                }
                              },
                              "functionReturnParameters": 196,
                              "id": 233,
                              "nodeType": "Return",
                              "src": "3638:56:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 210,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "3538:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 211,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "3542:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                        }
                      },
                      "id": 212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3542:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3538:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 237,
                  "initializationExpression": {
                    "assignments": [
                      207
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "n",
                        "nameLocation": "3531:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "3526:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3526:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 209,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3535:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3526:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3562:3:0",
                      "subExpression": {
                        "id": 214,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "3562:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 216,
                    "nodeType": "ExpressionStatement",
                    "src": "3562:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "3521:198:0"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "hexValue": "30",
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3892:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3895:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "id": 240,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3891:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_bool_$",
                      "typeString": "tuple(int_const 0,bool)"
                    }
                  },
                  "functionReturnParameters": 196,
                  "id": 241,
                  "nodeType": "Return",
                  "src": "3884:17:0"
                }
              ]
            },
            "documentation": {
              "id": 188,
              "nodeType": "StructuredDocumentation",
              "src": "2959:237:0",
              "text": "@notice gets a user's commitment\n @param _billId the id of the desired bill\n @return amount commitment amount, or 0 if no commitment found\n @return inSupport in support of bill or not, or 0 if no commitment found"
            },
            "functionSelector": "528de27f",
            "id": 243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserCommitment",
            "nameLocation": "3210:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "_billId",
                  "nameLocation": "3236:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "3228:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3228:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3227:17:0"
            },
            "returnParameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3271:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "3266:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3266:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "inSupport",
                  "nameLocation": "3284:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "3279:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3279:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3265:29:0"
            },
            "scope": 841,
            "src": "3201:707:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 331,
              "nodeType": "Block",
              "src": "4277:888:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 254,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4295:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4295:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 256,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 246,
                          "src": "4308:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4295:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 253,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4287:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4287:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "4287:29:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 261,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4389:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4389:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 263,
                          "name": "minimumCommitment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "4402:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4389:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d6d69746d656e7420616d6f756e74206d757374206265203e3d206d696e696d756d20636f6d6d69746d656e74",
                        "id": 265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4421:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa758ddcd0691b1462c43f70c8d239a0ebb1235dbeb8532a26952b626fb1647b",
                          "typeString": "literal_string \"Commitment amount must be >= minimum commitment\""
                        },
                        "value": "Commitment amount must be >= minimum commitment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa758ddcd0691b1462c43f70c8d239a0ebb1235dbeb8532a26952b626fb1647b",
                          "typeString": "literal_string \"Commitment amount must be >= minimum commitment\""
                        }
                      ],
                      "id": 260,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4381:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4381:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "4381:90:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 271,
                            "name": "_billId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "4550:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 269,
                            "name": "billOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "4528:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OracleInterface_$959",
                              "typeString": "contract OracleInterface"
                            }
                          },
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "billExists",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 923,
                          "src": "4528:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view external returns (bool)"
                          }
                        },
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4528:30:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5370656369666965642062696c6c206e6f7420666f756e64",
                        "id": 273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4560:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_82991fc044c2bd0bea42197f7c1960b35df518d3cdc9253e2195a4d5c8d5cf56",
                          "typeString": "literal_string \"Specified bill not found\""
                        },
                        "value": "Specified bill not found"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_82991fc044c2bd0bea42197f7c1960b35df518d3cdc9253e2195a4d5c8d5cf56",
                          "typeString": "literal_string \"Specified bill not found\""
                        }
                      ],
                      "id": 268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4520:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4520:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 275,
                  "nodeType": "ExpressionStatement",
                  "src": "4520:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 278,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4645:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4645:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 280,
                            "name": "_billId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "4657:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 277,
                          "name": "_commitmentIsValid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 119,
                          "src": "4626:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (address,bytes32) view returns (bool)"
                          }
                        },
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4626:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d6d69746d656e74206973206e6f742076616c6964",
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4667:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_747dc72168f8439c429b54742d6708b5364735cc5b535e1efd5a8ea232c7b1d8",
                          "typeString": "literal_string \"Commitment is not valid\""
                        },
                        "value": "Commitment is not valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_747dc72168f8439c429b54742d6708b5364735cc5b535e1efd5a8ea232c7b1d8",
                          "typeString": "literal_string \"Commitment is not valid\""
                        }
                      ],
                      "id": 276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4618:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4618:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "4618:75:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 288,
                            "name": "_billId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "4787:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 286,
                            "name": "billOracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "4762:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OracleInterface_$959",
                              "typeString": "contract OracleInterface"
                            }
                          },
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "billIsPending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 930,
                          "src": "4762:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view external returns (bool)"
                          }
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4762:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42696c6c206e6f74206f70656e20666f7220636f6d6d69746d656e74",
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4797:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c33a961069d5bf03ae6ed78e31473cca3cab60fdb6d3407dd96e8c0a73d9444",
                          "typeString": "literal_string \"Bill not open for commitment\""
                        },
                        "value": "Bill not open for commitment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c33a961069d5bf03ae6ed78e31473cca3cab60fdb6d3407dd96e8c0a73d9444",
                          "typeString": "literal_string \"Bill not open for commitment\""
                        }
                      ],
                      "id": 285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4754:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4754:74:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "4754:74:0"
                },
                {
                  "assignments": [
                    297
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 297,
                      "mutability": "mutable",
                      "name": "commitments",
                      "nameLocation": "4894:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 331,
                      "src": "4873:32:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                        "typeString": "struct Commitments.Commitment[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 295,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 294,
                            "name": "Commitment",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 64,
                            "src": "4873:10:0"
                          },
                          "referencedDeclaration": 64,
                          "src": "4873:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Commitment_$64_storage_ptr",
                            "typeString": "struct Commitments.Commitment"
                          }
                        },
                        "id": 296,
                        "nodeType": "ArrayTypeName",
                        "src": "4873:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                          "typeString": "struct Commitments.Commitment[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 301,
                  "initialValue": {
                    "baseExpression": {
                      "id": 298,
                      "name": "billToCommitments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "4908:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct Commitments.Commitment storage ref[] storage ref)"
                      }
                    },
                    "id": 300,
                    "indexExpression": {
                      "id": 299,
                      "name": "_billId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "4926:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4908:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage",
                      "typeString": "struct Commitments.Commitment storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4873:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 306,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4972:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4972:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 308,
                            "name": "_billId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 248,
                            "src": "4984:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 309,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4993:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "4993:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 311,
                            "name": "_inSupport",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 250,
                            "src": "5004:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 305,
                          "name": "Commitment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "4961:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Commitment_$64_storage_ptr_$",
                            "typeString": "type(struct Commitments.Commitment storage pointer)"
                          }
                        },
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4961:54:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Commitment_$64_memory_ptr",
                          "typeString": "struct Commitments.Commitment memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Commitment_$64_memory_ptr",
                          "typeString": "struct Commitments.Commitment memory"
                        }
                      ],
                      "expression": {
                        "id": 302,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 297,
                        "src": "4944:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                        }
                      },
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4944:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr_$_t_struct$_Commitment_$64_storage_$returns$__$bound_to$_t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Commitments.Commitment storage ref[] storage pointer,struct Commitments.Commitment storage ref)"
                      }
                    },
                    "id": 313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4944:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 314,
                  "nodeType": "ExpressionStatement",
                  "src": "4944:72:0"
                },
                {
                  "assignments": [
                    319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 319,
                      "mutability": "mutable",
                      "name": "userCommitments",
                      "nameLocation": "5072:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 331,
                      "src": "5054:33:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 317,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5054:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 318,
                        "nodeType": "ArrayTypeName",
                        "src": "5054:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 324,
                  "initialValue": {
                    "baseExpression": {
                      "id": 320,
                      "name": "userToCommitments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "5090:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$",
                        "typeString": "mapping(address => bytes32[] storage ref)"
                      }
                    },
                    "id": 323,
                    "indexExpression": {
                      "expression": {
                        "id": 321,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5108:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5108:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5090:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5054:65:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 328,
                        "name": "_billId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 248,
                        "src": "5150:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 325,
                        "name": "userCommitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 319,
                        "src": "5129:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[] storage pointer"
                        }
                      },
                      "id": 327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5129:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5129:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 330,
                  "nodeType": "ExpressionStatement",
                  "src": "5129:29:0"
                }
              ]
            },
            "documentation": {
              "id": 244,
              "nodeType": "StructuredDocumentation",
              "src": "3914:270:0",
              "text": "@notice places a non-rescindable commitment on the given bill\n @param _amount the id of the bill on which to commitment\n @param _billId the id of the bill on which to commitment\n @param _inSupport commitment in favor of bill passing (vs against)"
            },
            "functionSelector": "5f0012fe",
            "id": 332,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeCommitment",
            "nameLocation": "4198:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4219:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "4214:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4214:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "_billId",
                  "nameLocation": "4236:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "4228:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4228:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "_inSupport",
                  "nameLocation": "4250:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 332,
                  "src": "4245:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4245:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4213:48:0"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4277:0:0"
            },
            "scope": 841,
            "src": "4189:976:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 361,
              "nodeType": "Block",
              "src": "5233:148:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 342,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5268:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Commitments_$841",
                              "typeString": "contract Commitments"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Commitments_$841",
                              "typeString": "contract Commitments"
                            }
                          ],
                          "id": 341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5260:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 340,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5260:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5260:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 344,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 334,
                        "src": "5275:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 345,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 336,
                        "src": "5282:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 339,
                      "name": "Transferral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "5248:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5248:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "EmitStatement",
                  "src": "5243:47:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 348,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "5304:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5315:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5304:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 360,
                  "nodeType": "IfStatement",
                  "src": "5300:75:0",
                  "trueBody": {
                    "id": 359,
                    "nodeType": "Block",
                    "src": "5318:57:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 356,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 336,
                              "src": "5356:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 353,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 334,
                                  "src": "5340:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5332:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 351,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5332:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5332:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "5332:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5332:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 358,
                        "nodeType": "ExpressionStatement",
                        "src": "5332:32:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOutWinnings",
            "nameLocation": "5180:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 334,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5204:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "5196:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5196:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 336,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5216:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 362,
                  "src": "5211:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 335,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5211:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5195:29:0"
            },
            "returnParameters": {
              "id": 338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5233:0:0"
            },
            "scope": 841,
            "src": "5171:210:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 399,
              "nodeType": "Block",
              "src": "5423:190:0",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 368,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5458:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Commitments_$841",
                              "typeString": "contract Commitments"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Commitments_$841",
                              "typeString": "contract Commitments"
                            }
                          ],
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5450:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 366,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5450:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5450:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 370,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 964,
                        "src": "5465:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 373,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "5480:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Commitments_$841",
                                "typeString": "contract Commitments"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Commitments_$841",
                                "typeString": "contract Commitments"
                              }
                            ],
                            "id": 372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5472:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 371,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5472:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5472:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "5472:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 365,
                      "name": "Transferral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "5438:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5438:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 377,
                  "nodeType": "EmitStatement",
                  "src": "5433:61:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 380,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "5516:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Commitments_$841",
                              "typeString": "contract Commitments"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Commitments_$841",
                              "typeString": "contract Commitments"
                            }
                          ],
                          "id": 379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5508:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 378,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5508:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5508:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "5508:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5533:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5508:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 398,
                  "nodeType": "IfStatement",
                  "src": "5504:103:0",
                  "trueBody": {
                    "id": 397,
                    "nodeType": "Block",
                    "src": "5536:71:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 392,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "5582:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Commitments_$841",
                                      "typeString": "contract Commitments"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Commitments_$841",
                                      "typeString": "contract Commitments"
                                    }
                                  ],
                                  "id": 391,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5574:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 390,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5574:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 393,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5574:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "5574:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 387,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 964,
                                  "src": "5558:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 386,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5550:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 385,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5550:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5550:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "5550:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5550:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 396,
                        "nodeType": "ExpressionStatement",
                        "src": "5550:46:0"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 400,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferToHouse",
            "nameLocation": "5396:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5412:2:0"
            },
            "returnParameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5423:0:0"
            },
            "scope": 841,
            "src": "5387:226:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "5731:412:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_BillOutcome_$904",
                          "typeString": "enum OracleInterface.BillOutcome"
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 411,
                          "name": "_outcome",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 403,
                          "src": "5749:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BillOutcome_$904",
                            "typeString": "enum OracleInterface.BillOutcome"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 412,
                              "name": "OracleInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 959,
                              "src": "5761:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterface_$959_$",
                                "typeString": "type(contract OracleInterface)"
                              }
                            },
                            "id": 413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "BillOutcome",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 904,
                            "src": "5761:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BillOutcome_$904_$",
                              "typeString": "type(enum OracleInterface.BillOutcome)"
                            }
                          },
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 901,
                          "src": "5761:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BillOutcome_$904",
                            "typeString": "enum OracleInterface.BillOutcome"
                          }
                        },
                        "src": "5749:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5741:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5741:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "5741:56:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_BillOutcome_$904",
                      "typeString": "enum OracleInterface.BillOutcome"
                    },
                    "id": 422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 418,
                      "name": "_outcome",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "5812:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BillOutcome_$904",
                        "typeString": "enum OracleInterface.BillOutcome"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 419,
                          "name": "OracleInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 959,
                          "src": "5824:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OracleInterface_$959_$",
                            "typeString": "type(contract OracleInterface)"
                          }
                        },
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "BillOutcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 904,
                        "src": "5824:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BillOutcome_$904_$",
                          "typeString": "type(enum OracleInterface.BillOutcome)"
                        }
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BecameLaw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 902,
                      "src": "5824:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BillOutcome_$904",
                        "typeString": "enum OracleInterface.BillOutcome"
                      }
                    },
                    "src": "5812:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 440,
                    "nodeType": "Block",
                    "src": "6003:134:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 432,
                          "name": "inSupport",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 405,
                          "src": "6021:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 438,
                          "nodeType": "Block",
                          "src": "6083:44:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 436,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6108:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 409,
                              "id": 437,
                              "nodeType": "Return",
                              "src": "6101:11:0"
                            }
                          ]
                        },
                        "id": 439,
                        "nodeType": "IfStatement",
                        "src": "6017:110:0",
                        "trueBody": {
                          "id": 435,
                          "nodeType": "Block",
                          "src": "6032:45:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6057:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 409,
                              "id": 434,
                              "nodeType": "Return",
                              "src": "6050:12:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 441,
                  "nodeType": "IfStatement",
                  "src": "5808:329:0",
                  "trueBody": {
                    "id": 431,
                    "nodeType": "Block",
                    "src": "5863:134:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 423,
                          "name": "inSupport",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 405,
                          "src": "5881:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 429,
                          "nodeType": "Block",
                          "src": "5942:45:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5967:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 409,
                              "id": 428,
                              "nodeType": "Return",
                              "src": "5960:12:0"
                            }
                          ]
                        },
                        "id": 430,
                        "nodeType": "IfStatement",
                        "src": "5877:110:0",
                        "trueBody": {
                          "id": 426,
                          "nodeType": "Block",
                          "src": "5892:44:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 424,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5917:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 409,
                              "id": 425,
                              "nodeType": "Return",
                              "src": "5910:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "id": 443,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isWinningCommitment",
            "nameLocation": "5628:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 403,
                  "mutability": "mutable",
                  "name": "_outcome",
                  "nameLocation": "5677:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "5649:36:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BillOutcome_$904",
                    "typeString": "enum OracleInterface.BillOutcome"
                  },
                  "typeName": {
                    "id": 402,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 401,
                      "name": "OracleInterface.BillOutcome",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 904,
                      "src": "5649:27:0"
                    },
                    "referencedDeclaration": 904,
                    "src": "5649:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BillOutcome_$904",
                      "typeString": "enum OracleInterface.BillOutcome"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 405,
                  "mutability": "mutable",
                  "name": "inSupport",
                  "nameLocation": "5692:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "5687:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 404,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5687:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5648:54:0"
            },
            "returnParameters": {
              "id": 409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 408,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "5725:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 407,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5725:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5724:6:0"
            },
            "scope": 841,
            "src": "5619:524:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "6617:613:0",
              "statements": [
                {
                  "assignments": [
                    458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 458,
                      "mutability": "mutable",
                      "name": "percentWinningTotal",
                      "nameLocation": "6632:19:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 507,
                      "src": "6627:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 457,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6627:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 463,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 461,
                        "name": "_winningTotal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 446,
                        "src": "6675:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 459,
                        "name": "_committedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 450,
                        "src": "6654:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1072,
                      "src": "6654:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6654:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6627:62:0"
                },
                {
                  "assignments": [
                    465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 465,
                      "mutability": "mutable",
                      "name": "winningAmount",
                      "nameLocation": "6736:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 507,
                      "src": "6731:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 464,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6731:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 467,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6752:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6731:22:0"
                },
                {
                  "condition": {
                    "id": 468,
                    "name": "_keepCommitment",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 452,
                    "src": "6767:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 486,
                    "nodeType": "Block",
                    "src": "6887:78:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 479,
                            "name": "winningAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "6901:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 482,
                                "name": "percentWinningTotal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 458,
                                "src": "6934:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 480,
                                "name": "_losingTotal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 448,
                                "src": "6917:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 481,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1057,
                              "src": "6917:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6917:37:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6901:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 485,
                        "nodeType": "ExpressionStatement",
                        "src": "6901:53:0"
                      }
                    ]
                  },
                  "id": 487,
                  "nodeType": "IfStatement",
                  "src": "6763:202:0",
                  "trueBody": {
                    "id": 478,
                    "nodeType": "Block",
                    "src": "6784:97:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 469,
                            "name": "winningAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "6798:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 472,
                                  "name": "percentWinningTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 458,
                                  "src": "6831:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 470,
                                  "name": "_losingTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 448,
                                  "src": "6814:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1057,
                                "src": "6814:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6814:37:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 474,
                              "name": "_committedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 450,
                              "src": "6854:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6814:56:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6798:72:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 477,
                        "nodeType": "ExpressionStatement",
                        "src": "6798:72:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 488,
                      "name": "winningAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 465,
                      "src": "7039:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7056:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7039:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 496,
                  "nodeType": "IfStatement",
                  "src": "7035:82:0",
                  "trueBody": {
                    "id": 495,
                    "nodeType": "Block",
                    "src": "7059:58:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 491,
                            "name": "winningAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 465,
                            "src": "7073:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 492,
                            "name": "minimumCommitment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "7089:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7073:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 494,
                        "nodeType": "ExpressionStatement",
                        "src": "7073:33:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 497,
                      "name": "winningAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 465,
                      "src": "7164:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "313030",
                          "id": 503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7219:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 500,
                              "name": "housePercentage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "7198:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 498,
                              "name": "winningAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 465,
                              "src": "7180:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1057,
                            "src": "7180:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7180:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1072,
                        "src": "7180:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7180:43:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7164:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 456,
                  "id": 506,
                  "nodeType": "Return",
                  "src": "7157:66:0"
                }
              ]
            },
            "documentation": {
              "id": 444,
              "nodeType": "StructuredDocumentation",
              "src": "6149:325:0",
              "text": "@notice calculates the amount to be paid out for a commitment\n @param _winningTotal the total monetary amount of winning commitments\n @param _losingTotal the total monetary amount of losing commitments\n @param _committedAmount the amount of this particular commitment\n @return an amount in wei"
            },
            "id": 508,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_calculatePayout",
            "nameLocation": "6488:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "mutability": "mutable",
                  "name": "_winningTotal",
                  "nameLocation": "6510:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "6505:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6505:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 448,
                  "mutability": "mutable",
                  "name": "_losingTotal",
                  "nameLocation": "6530:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "6525:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 447,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6525:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 450,
                  "mutability": "mutable",
                  "name": "_committedAmount",
                  "nameLocation": "6549:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "6544:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 449,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6544:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 452,
                  "mutability": "mutable",
                  "name": "_keepCommitment",
                  "nameLocation": "6572:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "6567:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 451,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6567:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6504:84:0"
            },
            "returnParameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "6611:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6611:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6610:6:0"
            },
            "scope": 841,
            "src": "6479:751:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 714,
              "nodeType": "Block",
              "src": "7525:2267:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_BillOutcome_$904",
                          "typeString": "enum OracleInterface.BillOutcome"
                        },
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 518,
                          "name": "_outcome",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 514,
                          "src": "7543:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BillOutcome_$904",
                            "typeString": "enum OracleInterface.BillOutcome"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 519,
                              "name": "OracleInterface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 959,
                              "src": "7555:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterface_$959_$",
                                "typeString": "type(contract OracleInterface)"
                              }
                            },
                            "id": 520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "BillOutcome",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 904,
                            "src": "7555:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_BillOutcome_$904_$",
                              "typeString": "type(enum OracleInterface.BillOutcome)"
                            }
                          },
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Pending",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 901,
                          "src": "7555:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_BillOutcome_$904",
                            "typeString": "enum OracleInterface.BillOutcome"
                          }
                        },
                        "src": "7543:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 517,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7535:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7535:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "7535:56:0"
                },
                {
                  "assignments": [
                    529
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 529,
                      "mutability": "mutable",
                      "name": "commitments",
                      "nameLocation": "7623:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 714,
                      "src": "7602:32:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                        "typeString": "struct Commitments.Commitment[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 527,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 526,
                            "name": "Commitment",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 64,
                            "src": "7602:10:0"
                          },
                          "referencedDeclaration": 64,
                          "src": "7602:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Commitment_$64_storage_ptr",
                            "typeString": "struct Commitments.Commitment"
                          }
                        },
                        "id": 528,
                        "nodeType": "ArrayTypeName",
                        "src": "7602:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                          "typeString": "struct Commitments.Commitment[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 533,
                  "initialValue": {
                    "baseExpression": {
                      "id": 530,
                      "name": "billToCommitments",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "7637:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_$",
                        "typeString": "mapping(bytes32 => struct Commitments.Commitment storage ref[] storage ref)"
                      }
                    },
                    "id": 532,
                    "indexExpression": {
                      "id": 531,
                      "name": "_billId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 511,
                      "src": "7655:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7637:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage",
                      "typeString": "struct Commitments.Commitment storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7602:61:0"
                },
                {
                  "assignments": [
                    535
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 535,
                      "mutability": "mutable",
                      "name": "losingTotal",
                      "nameLocation": "7678:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 714,
                      "src": "7673:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 534,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7673:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 537,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7692:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7673:20:0"
                },
                {
                  "assignments": [
                    539
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 539,
                      "mutability": "mutable",
                      "name": "winningTotal",
                      "nameLocation": "7708:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 714,
                      "src": "7703:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 538,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7703:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 541,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7723:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7703:21:0"
                },
                {
                  "assignments": [
                    543
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 543,
                      "mutability": "mutable",
                      "name": "totalPot",
                      "nameLocation": "7739:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 714,
                      "src": "7734:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 542,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7734:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 545,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7750:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7734:17:0"
                },
                {
                  "body": {
                    "id": 588,
                    "nodeType": "Block",
                    "src": "7857:283:0",
                    "statements": [
                      {
                        "assignments": [
                          558
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 558,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "7876:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 588,
                            "src": "7871:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 557,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7871:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 563,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 559,
                              "name": "commitments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 529,
                              "src": "7885:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                                "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                              }
                            },
                            "id": 561,
                            "indexExpression": {
                              "id": 560,
                              "name": "n",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "7897:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7885:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Commitment_$64_storage",
                              "typeString": "struct Commitments.Commitment storage ref"
                            }
                          },
                          "id": 562,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 61,
                          "src": "7885:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7871:35:0"
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 565,
                              "name": "_outcome",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 514,
                              "src": "7945:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BillOutcome_$904",
                                "typeString": "enum OracleInterface.BillOutcome"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 566,
                                  "name": "commitments",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 529,
                                  "src": "7955:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                                    "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                  }
                                },
                                "id": 568,
                                "indexExpression": {
                                  "id": 567,
                                  "name": "n",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 547,
                                  "src": "7967:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7955:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Commitment_$64_storage",
                                  "typeString": "struct Commitments.Commitment storage ref"
                                }
                              },
                              "id": 569,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "inSupport",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63,
                              "src": "7955:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_BillOutcome_$904",
                                "typeString": "enum OracleInterface.BillOutcome"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 564,
                            "name": "_isWinningCommitment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "7924:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_BillOutcome_$904_$_t_bool_$returns$_t_bool_$",
                              "typeString": "function (enum OracleInterface.BillOutcome,bool) pure returns (bool)"
                            }
                          },
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7924:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 586,
                          "nodeType": "Block",
                          "src": "8060:70:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 584,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 579,
                                  "name": "losingTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 535,
                                  "src": "8078:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 582,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 558,
                                      "src": "8108:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 580,
                                      "name": "losingTotal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 535,
                                      "src": "8092:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 581,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1118,
                                    "src": "8092:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 583,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8092:23:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8078:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 585,
                              "nodeType": "ExpressionStatement",
                              "src": "8078:37:0"
                            }
                          ]
                        },
                        "id": 587,
                        "nodeType": "IfStatement",
                        "src": "7920:210:0",
                        "trueBody": {
                          "id": 578,
                          "nodeType": "Block",
                          "src": "7982:72:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 576,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 571,
                                  "name": "winningTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 539,
                                  "src": "8000:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 574,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 558,
                                      "src": "8032:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 572,
                                      "name": "winningTotal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 539,
                                      "src": "8015:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1118,
                                    "src": "8015:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 575,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8015:24:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8000:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 577,
                              "nodeType": "ExpressionStatement",
                              "src": "8000:39:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 550,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 547,
                      "src": "7828:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 551,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 529,
                        "src": "7832:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                        }
                      },
                      "id": 552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7832:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7828:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 589,
                  "initializationExpression": {
                    "assignments": [
                      547
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 547,
                        "mutability": "mutable",
                        "name": "n",
                        "nameLocation": "7821:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 589,
                        "src": "7816:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 546,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7816:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 549,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7825:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7816:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "7852:3:0",
                      "subExpression": {
                        "id": 554,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 547,
                        "src": "7852:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 556,
                    "nodeType": "ExpressionStatement",
                    "src": "7852:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "7811:329:0"
                },
                {
                  "expression": {
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 590,
                      "name": "totalPot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 543,
                      "src": "8149:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 593,
                          "name": "winningTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 539,
                          "src": "8176:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 591,
                          "name": "losingTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 535,
                          "src": "8160:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1118,
                        "src": "8160:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8160:29:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8149:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "8149:40:0"
                },
                {
                  "body": {
                    "id": 683,
                    "nodeType": "Block",
                    "src": "8280:1041:0",
                    "statements": [
                      {
                        "assignments": [
                          609
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 609,
                            "mutability": "mutable",
                            "name": "targetUserAddress",
                            "nameLocation": "8302:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 683,
                            "src": "8294:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 608,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8294:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 614,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 610,
                              "name": "commitments",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 529,
                              "src": "8322:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                                "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                              }
                            },
                            "id": 612,
                            "indexExpression": {
                              "id": 611,
                              "name": "n",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 598,
                              "src": "8334:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8322:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Commitment_$64_storage",
                              "typeString": "struct Commitments.Commitment storage ref"
                            }
                          },
                          "id": 613,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "user",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57,
                          "src": "8322:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8294:47:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_BillOutcome_$904",
                            "typeString": "enum OracleInterface.BillOutcome"
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 615,
                            "name": "_outcome",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 514,
                            "src": "8359:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BillOutcome_$904",
                              "typeString": "enum OracleInterface.BillOutcome"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 616,
                                "name": "OracleInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 959,
                                "src": "8371:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OracleInterface_$959_$",
                                  "typeString": "type(contract OracleInterface)"
                                }
                              },
                              "id": 617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "BillOutcome",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 904,
                              "src": "8371:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_BillOutcome_$904_$",
                                "typeString": "type(enum OracleInterface.BillOutcome)"
                              }
                            },
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "BecameLaw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 902,
                            "src": "8371:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_BillOutcome_$904",
                              "typeString": "enum OracleInterface.BillOutcome"
                            }
                          },
                          "src": "8359:49:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 681,
                          "nodeType": "Block",
                          "src": "8867:444:0",
                          "statements": [
                            {
                              "condition": {
                                "arguments": [
                                  {
                                    "id": 652,
                                    "name": "_outcome",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 514,
                                    "src": "9055:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_BillOutcome_$904",
                                      "typeString": "enum OracleInterface.BillOutcome"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 653,
                                        "name": "commitments",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 529,
                                        "src": "9065:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 655,
                                      "indexExpression": {
                                        "id": 654,
                                        "name": "n",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 598,
                                        "src": "9077:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9065:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Commitment_$64_storage",
                                        "typeString": "struct Commitments.Commitment storage ref"
                                      }
                                    },
                                    "id": 656,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "inSupport",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63,
                                    "src": "9065:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_BillOutcome_$904",
                                      "typeString": "enum OracleInterface.BillOutcome"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 651,
                                  "name": "_isWinningCommitment",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 443,
                                  "src": "9034:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_enum$_BillOutcome_$904_$_t_bool_$returns$_t_bool_$",
                                    "typeString": "function (enum OracleInterface.BillOutcome,bool) pure returns (bool)"
                                  }
                                },
                                "id": 657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9034:56:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 680,
                              "nodeType": "IfStatement",
                              "src": "9030:267:0",
                              "trueBody": {
                                "id": 679,
                                "nodeType": "Block",
                                "src": "9092:205:0",
                                "statements": [
                                  {
                                    "assignments": [
                                      659
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 659,
                                        "mutability": "mutable",
                                        "name": "payoutAmount",
                                        "nameLocation": "9119:12:0",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 679,
                                        "src": "9114:17:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 658,
                                          "name": "uint",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9114:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 669,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 661,
                                          "name": "winningTotal",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 539,
                                          "src": "9151:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 662,
                                          "name": "totalPot",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 543,
                                          "src": "9165:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 663,
                                              "name": "commitments",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 529,
                                              "src": "9175:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                                                "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                              }
                                            },
                                            "id": 665,
                                            "indexExpression": {
                                              "id": 664,
                                              "name": "n",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 598,
                                              "src": "9187:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9175:14:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Commitment_$64_storage",
                                              "typeString": "struct Commitments.Commitment storage ref"
                                            }
                                          },
                                          "id": 666,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 61,
                                          "src": "9175:21:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "hexValue": "74727565",
                                          "id": 667,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "bool",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9198:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "value": "true"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        ],
                                        "id": 660,
                                        "name": "_calculatePayout",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 508,
                                        "src": "9134:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256,uint256,bool) view returns (uint256)"
                                        }
                                      },
                                      "id": 668,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9134:69:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "9114:89:0"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 674,
                                              "name": "targetUserAddress",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 609,
                                              "src": "9245:17:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 675,
                                              "name": "payoutAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 659,
                                              "src": "9264:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 673,
                                            "name": "Payout",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 69,
                                            "src": "9238:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_struct$_Payout_$69_storage_ptr_$",
                                              "typeString": "type(struct Commitments.Payout storage pointer)"
                                            }
                                          },
                                          "id": 676,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "structConstructorCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "9238:39:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Payout_$69_memory_ptr",
                                            "typeString": "struct Commitments.Payout memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Payout_$69_memory_ptr",
                                            "typeString": "struct Commitments.Payout memory"
                                          }
                                        ],
                                        "expression": {
                                          "id": 670,
                                          "name": "payouts",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 26,
                                          "src": "9225:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Payout_$69_storage_$dyn_storage",
                                            "typeString": "struct Commitments.Payout storage ref[] storage ref"
                                          }
                                        },
                                        "id": 672,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "push",
                                        "nodeType": "MemberAccess",
                                        "src": "9225:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Payout_$69_storage_$dyn_storage_ptr_$_t_struct$_Payout_$69_storage_$returns$__$bound_to$_t_array$_t_struct$_Payout_$69_storage_$dyn_storage_ptr_$",
                                          "typeString": "function (struct Commitments.Payout storage ref[] storage pointer,struct Commitments.Payout storage ref)"
                                        }
                                      },
                                      "id": 677,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9225:53:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 678,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9225:53:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 682,
                        "nodeType": "IfStatement",
                        "src": "8355:956:0",
                        "trueBody": {
                          "id": 650,
                          "nodeType": "Block",
                          "src": "8410:451:0",
                          "statements": [
                            {
                              "condition": {
                                "arguments": [
                                  {
                                    "id": 621,
                                    "name": "_outcome",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 514,
                                    "src": "8604:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_BillOutcome_$904",
                                      "typeString": "enum OracleInterface.BillOutcome"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 622,
                                        "name": "commitments",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 529,
                                        "src": "8614:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                        }
                                      },
                                      "id": 624,
                                      "indexExpression": {
                                        "id": 623,
                                        "name": "n",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 598,
                                        "src": "8626:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "8614:14:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Commitment_$64_storage",
                                        "typeString": "struct Commitments.Commitment storage ref"
                                      }
                                    },
                                    "id": 625,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "inSupport",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 63,
                                    "src": "8614:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_BillOutcome_$904",
                                      "typeString": "enum OracleInterface.BillOutcome"
                                    },
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 620,
                                  "name": "_isWinningCommitment",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 443,
                                  "src": "8583:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_enum$_BillOutcome_$904_$_t_bool_$returns$_t_bool_$",
                                    "typeString": "function (enum OracleInterface.BillOutcome,bool) pure returns (bool)"
                                  }
                                },
                                "id": 626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8583:56:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 649,
                              "nodeType": "IfStatement",
                              "src": "8579:268:0",
                              "trueBody": {
                                "id": 648,
                                "nodeType": "Block",
                                "src": "8641:206:0",
                                "statements": [
                                  {
                                    "assignments": [
                                      628
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 628,
                                        "mutability": "mutable",
                                        "name": "payoutAmount",
                                        "nameLocation": "8668:12:0",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 648,
                                        "src": "8663:17:0",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "typeName": {
                                          "id": 627,
                                          "name": "uint",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "8663:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 638,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "id": 630,
                                          "name": "winningTotal",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 539,
                                          "src": "8700:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 631,
                                          "name": "totalPot",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 543,
                                          "src": "8714:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 632,
                                              "name": "commitments",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 529,
                                              "src": "8724:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                                                "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                                              }
                                            },
                                            "id": 634,
                                            "indexExpression": {
                                              "id": 633,
                                              "name": "n",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 598,
                                              "src": "8736:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8724:14:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Commitment_$64_storage",
                                              "typeString": "struct Commitments.Commitment storage ref"
                                            }
                                          },
                                          "id": 635,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 61,
                                          "src": "8724:21:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "hexValue": "66616c7365",
                                          "id": 636,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "bool",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8747:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "value": "false"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        ],
                                        "id": 629,
                                        "name": "_calculatePayout",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 508,
                                        "src": "8683:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                                          "typeString": "function (uint256,uint256,uint256,bool) view returns (uint256)"
                                        }
                                      },
                                      "id": 637,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8683:70:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "8663:90:0"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 643,
                                              "name": "targetUserAddress",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 609,
                                              "src": "8795:17:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "id": 644,
                                              "name": "payoutAmount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 628,
                                              "src": "8814:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "id": 642,
                                            "name": "Payout",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 69,
                                            "src": "8788:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_struct$_Payout_$69_storage_ptr_$",
                                              "typeString": "type(struct Commitments.Payout storage pointer)"
                                            }
                                          },
                                          "id": 645,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "structConstructorCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "8788:39:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Payout_$69_memory_ptr",
                                            "typeString": "struct Commitments.Payout memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_Payout_$69_memory_ptr",
                                            "typeString": "struct Commitments.Payout memory"
                                          }
                                        ],
                                        "expression": {
                                          "id": 639,
                                          "name": "payouts",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 26,
                                          "src": "8775:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Payout_$69_storage_$dyn_storage",
                                            "typeString": "struct Commitments.Payout storage ref[] storage ref"
                                          }
                                        },
                                        "id": 641,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "push",
                                        "nodeType": "MemberAccess",
                                        "src": "8775:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Payout_$69_storage_$dyn_storage_ptr_$_t_struct$_Payout_$69_storage_$returns$__$bound_to$_t_array$_t_struct$_Payout_$69_storage_$dyn_storage_ptr_$",
                                          "typeString": "function (struct Commitments.Payout storage ref[] storage pointer,struct Commitments.Payout storage ref)"
                                        }
                                      },
                                      "id": 646,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8775:53:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 647,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8775:53:0"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 601,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 598,
                      "src": "8251:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 602,
                        "name": "commitments",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 529,
                        "src": "8255:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Commitment_$64_storage_$dyn_storage_ptr",
                          "typeString": "struct Commitments.Commitment storage ref[] storage pointer"
                        }
                      },
                      "id": 603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8255:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8251:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 684,
                  "initializationExpression": {
                    "assignments": [
                      598
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 598,
                        "mutability": "mutable",
                        "name": "n",
                        "nameLocation": "8244:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 684,
                        "src": "8239:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8239:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 600,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8248:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8239:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8275:3:0",
                      "subExpression": {
                        "id": 605,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "8275:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 607,
                    "nodeType": "ExpressionStatement",
                    "src": "8275:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "8234:1087:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_BillOutcome_$904",
                      "typeString": "enum OracleInterface.BillOutcome"
                    },
                    "id": 689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 685,
                      "name": "_outcome",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "9374:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BillOutcome_$904",
                        "typeString": "enum OracleInterface.BillOutcome"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 686,
                          "name": "OracleInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 959,
                          "src": "9386:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OracleInterface_$959_$",
                            "typeString": "type(contract OracleInterface)"
                          }
                        },
                        "id": 687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "BillOutcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 904,
                        "src": "9386:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_BillOutcome_$904_$",
                          "typeString": "type(enum OracleInterface.BillOutcome)"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BecameLaw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 902,
                      "src": "9386:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_BillOutcome_$904",
                        "typeString": "enum OracleInterface.BillOutcome"
                      }
                    },
                    "src": "9374:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 707,
                  "nodeType": "IfStatement",
                  "src": "9370:241:0",
                  "trueBody": {
                    "id": 706,
                    "nodeType": "Block",
                    "src": "9425:186:0",
                    "statements": [
                      {
                        "assignments": [
                          691
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 691,
                            "mutability": "mutable",
                            "name": "sponsor",
                            "nameLocation": "9492:7:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 706,
                            "src": "9484:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 690,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9484:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 696,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 694,
                              "name": "_billId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 511,
                              "src": "9535:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 692,
                              "name": "billOracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38,
                              "src": "9502:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OracleInterface_$959",
                                "typeString": "contract OracleInterface"
                              }
                            },
                            "id": 693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getBillSponsorAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 953,
                            "src": "9502:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9502:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9484:59:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 701,
                                  "name": "sponsor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 691,
                                  "src": "9577:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 702,
                                  "name": "winningTotal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 539,
                                  "src": "9586:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 700,
                                "name": "Payout",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69,
                                "src": "9570:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Payout_$69_storage_ptr_$",
                                  "typeString": "type(struct Commitments.Payout storage pointer)"
                                }
                              },
                              "id": 703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9570:29:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Payout_$69_memory_ptr",
                                "typeString": "struct Commitments.Payout memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Payout_$69_memory_ptr",
                                "typeString": "struct Commitments.Payout memory"
                              }
                            ],
                            "expression": {
                              "id": 697,
                              "name": "payouts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "9557:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Payout_$69_storage_$dyn_storage",
                                "typeString": "struct Commitments.Payout storage ref[] storage ref"
                              }
                            },
                            "id": 699,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "9557:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Payout_$69_storage_$dyn_storage_ptr_$_t_struct$_Payout_$69_storage_$returns$__$bound_to$_t_array$_t_struct$_Payout_$69_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Commitments.Payout storage ref[] storage pointer,struct Commitments.Payout storage ref)"
                            }
                          },
                          "id": 704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9557:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 705,
                        "nodeType": "ExpressionStatement",
                        "src": "9557:43:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 708,
                        "name": "billPaidOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "9758:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 710,
                      "indexExpression": {
                        "id": 709,
                        "name": "_billId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 511,
                        "src": "9770:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9758:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9781:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "9758:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 713,
                  "nodeType": "ExpressionStatement",
                  "src": "9758:27:0"
                }
              ]
            },
            "documentation": {
              "id": 509,
              "nodeType": "StructuredDocumentation",
              "src": "7236:195:0",
              "text": "@notice calculates how much to pay out to each winner, then pays each winner the appropriate amount\n @param _billId the unique id of the bill\n @param _outcome the bill's outcome"
            },
            "id": 715,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_generatePayouts",
            "nameLocation": "7445:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 511,
                  "mutability": "mutable",
                  "name": "_billId",
                  "nameLocation": "7470:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "7462:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 510,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7462:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "_outcome",
                  "nameLocation": "7507:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 715,
                  "src": "7479:36:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BillOutcome_$904",
                    "typeString": "enum OracleInterface.BillOutcome"
                  },
                  "typeName": {
                    "id": 513,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 512,
                      "name": "OracleInterface.BillOutcome",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 904,
                      "src": "7479:27:0"
                    },
                    "referencedDeclaration": 904,
                    "src": "7479:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BillOutcome_$904",
                      "typeString": "enum OracleInterface.BillOutcome"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7461:55:0"
            },
            "returnParameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7525:0:0"
            },
            "scope": 841,
            "src": "7436:2356:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 751,
              "nodeType": "Block",
              "src": "9875:298:0",
              "statements": [
                {
                  "body": {
                    "id": 743,
                    "nodeType": "Block",
                    "src": "9955:76:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 733,
                                  "name": "payouts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26,
                                  "src": "9985:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Payout_$69_storage_$dyn_storage",
                                    "typeString": "struct Commitments.Payout storage ref[] storage ref"
                                  }
                                },
                                "id": 735,
                                "indexExpression": {
                                  "id": 734,
                                  "name": "n",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 722,
                                  "src": "9993:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9985:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Payout_$69_storage",
                                  "typeString": "struct Commitments.Payout storage ref"
                                }
                              },
                              "id": 736,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "user",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66,
                              "src": "9985:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 737,
                                  "name": "payouts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26,
                                  "src": "10002:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Payout_$69_storage_$dyn_storage",
                                    "typeString": "struct Commitments.Payout storage ref[] storage ref"
                                  }
                                },
                                "id": 739,
                                "indexExpression": {
                                  "id": 738,
                                  "name": "n",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 722,
                                  "src": "10010:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10002:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Payout_$69_storage",
                                  "typeString": "struct Commitments.Payout storage ref"
                                }
                              },
                              "id": 740,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 68,
                              "src": "10002:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 732,
                            "name": "_payOutWinnings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "9969:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9969:51:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 742,
                        "nodeType": "ExpressionStatement",
                        "src": "9969:51:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 725,
                      "name": "n",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 722,
                      "src": "9930:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 726,
                        "name": "payouts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "9934:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Payout_$69_storage_$dyn_storage",
                          "typeString": "struct Commitments.Payout storage ref[] storage ref"
                        }
                      },
                      "id": 727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9934:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9930:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 744,
                  "initializationExpression": {
                    "assignments": [
                      722
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 722,
                        "mutability": "mutable",
                        "name": "n",
                        "nameLocation": "9923:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 744,
                        "src": "9918:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 721,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9918:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 724,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9927:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9918:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9950:3:0",
                      "subExpression": {
                        "id": 729,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 722,
                        "src": "9950:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 731,
                    "nodeType": "ExpressionStatement",
                    "src": "9950:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "9913:118:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 745,
                      "name": "_transferToHouse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 400,
                      "src": "10088:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10088:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "10088:18:0"
                },
                {
                  "expression": {
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10152:14:0",
                    "subExpression": {
                      "id": 748,
                      "name": "payouts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "10159:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Payout_$69_storage_$dyn_storage",
                        "typeString": "struct Commitments.Payout storage ref[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "10152:14:0"
                }
              ]
            },
            "documentation": {
              "id": 716,
              "nodeType": "StructuredDocumentation",
              "src": "9799:22:0",
              "text": "@notice pays users"
            },
            "functionSelector": "1a4bd9a6",
            "id": 752,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 719,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 718,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 992,
                  "src": "9865:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9865:9:0"
              }
            ],
            "name": "sendPendingPayouts",
            "nameLocation": "9835:18:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9853:2:0"
            },
            "returnParameters": {
              "id": 720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9875:0:0"
            },
            "scope": 841,
            "src": "9826:347:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 794,
              "nodeType": "Block",
              "src": "10520:242:0",
              "statements": [
                {
                  "assignments": [
                    767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 767,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "10558:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 794,
                      "src": "10530:29:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bill_$900_memory_ptr",
                        "typeString": "struct OracleInterface.Bill"
                      },
                      "typeName": {
                        "id": 766,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 765,
                          "name": "OracleInterface.Bill",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 900,
                          "src": "10530:20:0"
                        },
                        "referencedDeclaration": 900,
                        "src": "10530:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Bill_$900_storage_ptr",
                          "typeString": "struct OracleInterface.Bill"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 771,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 769,
                        "name": "_billId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 755,
                        "src": "10570:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 768,
                      "name": "getBill",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "10562:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_Bill_$900_memory_ptr_$",
                        "typeString": "function (bytes32) view returns (struct OracleInterface.Bill memory)"
                      }
                    },
                    "id": 770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10562:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Bill_$900_memory_ptr",
                      "typeString": "struct OracleInterface.Bill memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10530:48:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_BillOutcome_$904",
                        "typeString": "enum OracleInterface.BillOutcome"
                      },
                      "id": 777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 772,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 767,
                          "src": "10593:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Bill_$900_memory_ptr",
                            "typeString": "struct OracleInterface.Bill memory"
                          }
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "outcome",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 899,
                        "src": "10593:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BillOutcome_$904",
                          "typeString": "enum OracleInterface.BillOutcome"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 774,
                            "name": "OracleInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 959,
                            "src": "10606:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_OracleInterface_$959_$",
                              "typeString": "type(contract OracleInterface)"
                            }
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "BillOutcome",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 904,
                          "src": "10606:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_BillOutcome_$904_$",
                            "typeString": "type(enum OracleInterface.BillOutcome)"
                          }
                        },
                        "id": 776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Pending",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 901,
                        "src": "10606:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_BillOutcome_$904",
                          "typeString": "enum OracleInterface.BillOutcome"
                        }
                      },
                      "src": "10593:48:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "10645:21:0",
                      "subExpression": {
                        "baseExpression": {
                          "id": 778,
                          "name": "billPaidOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22,
                          "src": "10646:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 780,
                        "indexExpression": {
                          "id": 779,
                          "name": "_billId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 755,
                          "src": "10658:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10646:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10593:73:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 790,
                  "nodeType": "IfStatement",
                  "src": "10589:140:0",
                  "trueBody": {
                    "id": 789,
                    "nodeType": "Block",
                    "src": "10668:61:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 784,
                              "name": "_billId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "10699:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 785,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 767,
                                "src": "10708:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Bill_$900_memory_ptr",
                                  "typeString": "struct OracleInterface.Bill memory"
                                }
                              },
                              "id": 786,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "outcome",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 899,
                              "src": "10708:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_BillOutcome_$904",
                                "typeString": "enum OracleInterface.BillOutcome"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_enum$_BillOutcome_$904",
                                "typeString": "enum OracleInterface.BillOutcome"
                              }
                            ],
                            "id": 783,
                            "name": "_generatePayouts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 715,
                            "src": "10682:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_enum$_BillOutcome_$904_$returns$__$",
                              "typeString": "function (bytes32,enum OracleInterface.BillOutcome)"
                            }
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10682:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 788,
                        "nodeType": "ExpressionStatement",
                        "src": "10682:36:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "id": 791,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 767,
                      "src": "10746:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Bill_$900_memory_ptr",
                        "typeString": "struct OracleInterface.Bill memory"
                      }
                    },
                    "id": 792,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "outcome",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 899,
                    "src": "10746:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BillOutcome_$904",
                      "typeString": "enum OracleInterface.BillOutcome"
                    }
                  },
                  "functionReturnParameters": 762,
                  "id": 793,
                  "nodeType": "Return",
                  "src": "10739:16:0"
                }
              ]
            },
            "documentation": {
              "id": 753,
              "nodeType": "StructuredDocumentation",
              "src": "10180:220:0",
              "text": "@notice check the outcome of the given bill; if ready, will trigger calculation of payout, and actual payout to winners\n @param _billId the id of the bill to check\n @return the outcome of the given bill"
            },
            "functionSelector": "4326d601",
            "id": 795,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 758,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 757,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 992,
                  "src": "10471:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "10471:9:0"
              }
            ],
            "name": "checkOutcomeAndGeneratePayouts",
            "nameLocation": "10414:30:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 755,
                  "mutability": "mutable",
                  "name": "_billId",
                  "nameLocation": "10453:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "10445:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10445:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10444:17:0"
            },
            "returnParameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 795,
                  "src": "10490:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_BillOutcome_$904",
                    "typeString": "enum OracleInterface.BillOutcome"
                  },
                  "typeName": {
                    "id": 760,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 759,
                      "name": "OracleInterface.BillOutcome",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 904,
                      "src": "10490:27:0"
                    },
                    "referencedDeclaration": 904,
                    "src": "10490:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_BillOutcome_$904",
                      "typeString": "enum OracleInterface.BillOutcome"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10489:29:0"
            },
            "scope": 841,
            "src": "10405:357:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 819,
              "nodeType": "Block",
              "src": "11128:146:0",
              "statements": [
                {
                  "expression": {
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 805,
                      "name": "billOracleAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "11138:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 806,
                      "name": "_oracleAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 798,
                      "src": "11155:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11138:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "11138:31:0"
                },
                {
                  "expression": {
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 809,
                      "name": "billOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "11179:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OracleInterface_$959",
                        "typeString": "contract OracleInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 811,
                          "name": "billOracleAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "11208:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 810,
                        "name": "OracleInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 959,
                        "src": "11192:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OracleInterface_$959_$",
                          "typeString": "type(contract OracleInterface)"
                        }
                      },
                      "id": 812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11192:31:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OracleInterface_$959",
                        "typeString": "contract OracleInterface"
                      }
                    },
                    "src": "11179:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OracleInterface_$959",
                      "typeString": "contract OracleInterface"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "11179:44:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 815,
                        "name": "billOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "11240:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleInterface_$959",
                          "typeString": "contract OracleInterface"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "testConnection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 958,
                      "src": "11240:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$__$returns$_t_bool_$",
                        "typeString": "function () pure external returns (bool)"
                      }
                    },
                    "id": 817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11240:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 804,
                  "id": 818,
                  "nodeType": "Return",
                  "src": "11233:34:0"
                }
              ]
            },
            "documentation": {
              "id": 796,
              "nodeType": "StructuredDocumentation",
              "src": "10769:270:0",
              "text": "@notice sets the address of the oracle contract to use\n @dev setting a wrong address may result in false return value, or error\n @param _oracleAddress the address of the oracle\n @return true if connection to the new oracle address was successful"
            },
            "functionSelector": "4c69c00f",
            "id": 820,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 801,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 800,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 992,
                  "src": "11103:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "11103:9:0"
              }
            ],
            "name": "setOracleAddress",
            "nameLocation": "11053:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 798,
                  "mutability": "mutable",
                  "name": "_oracleAddress",
                  "nameLocation": "11078:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "11070:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11070:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11069:24:0"
            },
            "returnParameters": {
              "id": 804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 803,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "11122:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 802,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11122:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11121:6:0"
            },
            "scope": 841,
            "src": "11044:230:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 828,
              "nodeType": "Block",
              "src": "11454:38:0",
              "statements": [
                {
                  "expression": {
                    "id": 826,
                    "name": "billOracleAddr",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 32,
                    "src": "11471:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 825,
                  "id": 827,
                  "nodeType": "Return",
                  "src": "11464:21:0"
                }
              ]
            },
            "documentation": {
              "id": 821,
              "nodeType": "StructuredDocumentation",
              "src": "11280:109:0",
              "text": "@notice gets the address of the oracle being used\n @return the address of the currently set oracle"
            },
            "functionSelector": "b18b78dd",
            "id": 829,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOracleAddress",
            "nameLocation": "11403:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11419:2:0"
            },
            "returnParameters": {
              "id": 825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 824,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "11445:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11445:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11444:9:0"
            },
            "scope": 841,
            "src": "11394:98:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 839,
              "nodeType": "Block",
              "src": "11666:51:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 835,
                        "name": "billOracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "11683:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OracleInterface_$959",
                          "typeString": "contract OracleInterface"
                        }
                      },
                      "id": 836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "testConnection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 958,
                      "src": "11683:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$__$returns$_t_bool_$",
                        "typeString": "function () pure external returns (bool)"
                      }
                    },
                    "id": 837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11683:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 834,
                  "id": 838,
                  "nodeType": "Return",
                  "src": "11676:34:0"
                }
              ]
            },
            "documentation": {
              "id": 830,
              "nodeType": "StructuredDocumentation",
              "src": "11498:104:0",
              "text": "@notice for testing; tests that the oracle is callable\n @return true if connection successful"
            },
            "functionSelector": "2ce3707e",
            "id": 840,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOracleConnection",
            "nameLocation": "11616:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11636:2:0"
            },
            "returnParameters": {
              "id": 834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 833,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 840,
                  "src": "11660:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 832,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11660:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11659:6:0"
            },
            "scope": 841,
            "src": "11607:110:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 842,
        "src": "263:11456:0",
        "usedErrors": []
      }
    ],
    "src": "32:11688:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xF022C255e4B3bb4148BD1b44370054765B9caf9A",
      "transactionHash": "0x522aef8879051087da3a61fc5420805aa060d8cc3f3367ff18a47ecb39ac693d"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-07-17T23:29:19.398Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "Oliver Song",
    "kind": "dev",
    "methods": {
      "checkOutcomeAndGeneratePayouts(bytes32)": {
        "params": {
          "_billId": "the id of the bill to check"
        },
        "returns": {
          "_0": "the outcome of the given bill"
        }
      },
      "getBill(bytes32)": {
        "params": {
          "_billId": "the id of the desired bill"
        }
      },
      "getBillCommitments(bytes32)": {
        "params": {
          "_billId": "the id of the desired bill"
        },
        "returns": {
          "_0": "array of Commitments"
        }
      },
      "getCommitableBills()": {
        "returns": {
          "_0": "array of bill ids"
        }
      },
      "getOracleAddress()": {
        "returns": {
          "_0": "the address of the currently set oracle"
        }
      },
      "getUserCommitment(bytes32)": {
        "params": {
          "_billId": "the id of the desired bill"
        },
        "returns": {
          "amount": "commitment amount, or 0 if no commitment found",
          "inSupport": "in support of bill or not, or 0 if no commitment found"
        }
      },
      "getUserCommitments()": {
        "returns": {
          "_0": "array of bill ids"
        }
      },
      "placeCommitment(uint256,bytes32,bool)": {
        "params": {
          "_amount": "the id of the bill on which to commitment",
          "_billId": "the id of the bill on which to commitment",
          "_inSupport": "commitment in favor of bill passing (vs against)"
        }
      },
      "setOracleAddress(address)": {
        "details": "setting a wrong address may result in false return value, or error",
        "params": {
          "_oracleAddress": "the address of the oracle"
        },
        "returns": {
          "_0": "true if connection to the new oracle address was successful"
        }
      },
      "testOracleConnection()": {
        "returns": {
          "_0": "true if connection successful"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Commitments",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "checkOutcomeAndGeneratePayouts(bytes32)": {
        "notice": "check the outcome of the given bill; if ready, will trigger calculation of payout, and actual payout to winners"
      },
      "getBill(bytes32)": {
        "notice": "returns the full data of the specified bill"
      },
      "getBillCommitments(bytes32)": {
        "notice": "gets the current commitments for the bill"
      },
      "getCommitableBills()": {
        "notice": "gets a list ids of all currently commitable bill"
      },
      "getMostRecentBill()": {
        "notice": "returns the full data of the most recent commitable bill"
      },
      "getOracleAddress()": {
        "notice": "gets the address of the oracle being used"
      },
      "getUserCommitment(bytes32)": {
        "notice": "gets a user's commitment"
      },
      "getUserCommitments()": {
        "notice": "gets the current bills on which the user has commitments"
      },
      "placeCommitment(uint256,bytes32,bool)": {
        "notice": "places a non-rescindable commitment on the given bill"
      },
      "sendPendingPayouts()": {
        "notice": "pays users"
      },
      "setOracleAddress(address)": {
        "notice": "sets the address of the oracle contract to use"
      },
      "testOracleConnection()": {
        "notice": "for testing; tests that the oracle is callable"
      }
    },
    "notice": "Takes commitments and handles payouts for bill outcomes",
    "version": 1
  }
}